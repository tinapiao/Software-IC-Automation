routing_grid:
  layers: [4, 5, 6, 7]
  spaces: [0.084, 0.100, 0.084, 0.100]
  widths: [0.060, 0.080, 0.060, 0.080]
  bot_dir: 'x'


# Name of library in which design will be generated
impl_lib: 'D2S'
# Name that generated top cell will be given
impl_cell: 'D2S'


# Layout package that contains top level layout to be generated
layout_package: 'advanced_examples.DynamicToStaticLatch'
# Name of class of top level class to be generated
layout_class: 'DynamicToStaticLatch'

# Name of library of schematic template
sch_gen_lib: bag_advanced_examples
# Name of cell of schematic template
sch_gen_cell: DynamicToStaticLatch


params:
  input_reset_high: False
  make_tracks_extended: True

  lch: !!float 18e-9
  ptap_w: 6
  ntap_w: 6
  w_dict:  # Width of each row. Each row needs the width specified
    nch_row: 4
    pch_row: 6

  th_dict:  # Threshold information / thick ox / etc for each row
    nch_row: 'lvt'
    pch_row: 'lvt'

  seg_dict:  # Number of fingers of each transistor
    latch_n: 4
    latch_p: 4
    latch_nk1: 4
    latch_nk2: 2
    latch_pk1: 2
    latch_pk2: 4
    inv_n: 2
    inv_p: 4
    outinv_n: 4
    outinv_p: 2

  fg_dum: 4

  show_pins: True

  top_layer: 5
  tr_widths:
    sig: {4: 1, 5: 1}
  tr_spaces:
    !!python/tuple ['sig', '']: {4: 2, 5: 1}

sim_envs: ['tt']
tb_view_name: 'calibre'

testbenches:
  tb_tran:
    tb_lib: 'tb_sch_temp_lib_here'
    tb_cell: 'tb_sch_temp_cell_here'
    tb_params:
      cload: !!float 5e-15
      fClk: !!float 6.25e9
      vcm: !!float 0.8
      vdd: !!float 1.2
      vsensitivity: !!float 50e-3
      cycleWait: !!float 100
