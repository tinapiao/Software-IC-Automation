# BAG socket configuration
socket:
  # the host running the database.  localhost if on the same machine.
  host: "localhost"
  # the port to communicate with.
  port_file: "BAG_server_port.txt"
  # the log file for socket communication debugging
  log_file: "BAG_socket.log"
  # number of messages allowed in a pipeline
  pipeline: 100

# CAD database configuration
# Right now only virtuoso is supported.
database:
  # the python class that handles database interaction.
  class: "bag.interface.skill.SkillInterface"
  # default directory to create generated libraries in.
  default_lib_path: "${BAG_WORK_DIR}/gen_libs"
  # configurations for schematic import and generation
  schematic:
    # technology library to configure new libraries with
    tech_lib: "tsmcN65"
    # symbol pin master
    sympin: ["basic", "sympin", "symbolNN"]
    # input pin master
    ipin: ["basic", "ipin", "symbol"]
    # output pin master
    opin: ["basic", "opin", "symbol"]
    # inout pin master
    iopin: ["basic", "iopin", "symbolr"]
    # simulators where termOrder CDF field should be filled
    simulators: ["auLvs", "auCdl", "spectre", "hspiceD"]
    # libraries to exclude for schematic import
    exclude_libraries: ["analogLib", "basic", "tsmcN65"]
  # configurations for testbench creation
  testbench:
    # config view global libraries
    config_libs: "tsmcN65 analogLib basic"
    # config view cellviews
    config_views: "spectre schematic av_extracted veriloga"
    # config view stop cellviews
    config_stops: "spectre veriloga"
    # default simulation environment name
    default_env: "tt"
    # simulation environment file
    env_file: "${BAG_TECH_CONFIG_DIR}/corners_setup.sdb"
    # definition files to include
    def_files: []
  # configurations used to create a Checker object to run LVS/RCX
  checker:
    # the Checker class.
    checker_cls: "bag.verification.pvs.PVS"
    # LVS run directory
    lvs_run_dir: "${BAG_WORK_DIR}/pvs_run/lvs_run_dir"
    # LVS runset
    lvs_runset: "/nfs/vrg/cmc/cmc/kits/tsmc_65nm/CRN65GP-OA/TN65CMSP018K3_V1.0C/Calibre/lvs/calibre.lvs"
    # LVS rule file
    lvs_rule_file : "/nfs/vrg/cmc/cmc/kits/tsmc_65nm/CRN65GP-OA/TN65CMSP018K3_V1.0C/Calibre/lvs/calibre.lvs"
    # RCX runset
    rcx_runset: "/nfs/vrg/cmc/cmc/kits/tsmc_65nm/CRN65GP-OA/TN65CMSP018K3_V1.0C/Calibre/rcx/calibre.rcx"
    # source.added location
    source_added_file: ""
    # maximum number of LVS/RCX processes BAG can launch.
    max_workers: 2
    # default RC extraction parameters
    rcx_params:
      distributed_processing:
        # number of CPUs to use
        multi_cpu: 2
      extract:
        # extraction type.
        type: "rc_coupled"
      capacitance:
        # substrate name for capacitance extraction
        ground_net: "VSS"
      process_technology:
        # QRC technology library file
        technology_library_file: "${BAG_TECH_CONFIG_DIR}/pvs_setup/pvtech.lib"
  # calibreview generation setting
  calibreview:
    # the calibreview cell map file.
    cell_map: "${BAG_TECH_CONFIG_DIR}/calview.cellmap"
    # calibreview view name.
    view_name: "calibre"

# Simulation configurations
simulation:
  # python class that talks with the simulator
  class: "bag.interface.ocean.OceanInterface"
  # maximum number of Ocean processes BAG can launch.
  max_workers: 3
  # file to load at simulator startup.
  init_file: ""
  # testbench view name
  view: "adexl"
  # testbench setup state name
  state: "ocean_default"
  # when simulation goes long, a reminder message will be printed at this interval
  update_timeout_ms: 120000
  # amount of time to wait for process cancellation to succeed.
  cancel_timeout_ms: 10000
  # True to show interactive log viewer.
  show_log_viewer: False
  # ocean command settings
  kwargs:
    # the command to start
    command: "ocean"
    # current working directory.  Null for same directory as virtuoso.
    cwd: !!null
    # environment variables.  Null for same environment as SkillOceanServer.
    env: !!null
  # Ocean job options.
  job_options:
    configuretimeout: "300"
    distributionmethod: "Local"
    lingertimeout: "300"
    maxjobs: "7"
    preemptivestart: "1"
    reconfigureimmediately: "1"
    runtimeout: "-1"
    showerrorwhenretrying: "1"
    starttimeout: "300"

# technology specific configuration are stored in a separate file.
# this field tells BAG where to look for it.
tech_config_path: "${BAG_TECH_CONFIG_DIR}/tech_config.yaml"

# BAG design libraries definition file.
lib_defs: "bag_libs.def"

# place to put new design libraries
new_lib_path: "BagModules"
