; 
;   @(#) TSMC 65nm ASSURA LVS/RC COMMAND FILE V1.5b_pre030510 , 03/05/2010 
;   @(#) TSMC 65 NM CMOS LOGIC GENERAL PURPOSE  DEVICE FORMATION EXAMPLES AND LVS PROPERTIES  
;   @(#) DEVICE FORMATION EXAMPLE AND LVS PROPERTIES DOCUMENT: T-N65-CL-LS-001 V1.5 
;   @(#) COMMAND FILE DOCUMENT : T-N65-CL-LS-001-U1 
;   @(#) COMMAND FILE VERSION : 1.5b_pre030510 
;   @(#) COMMAND FILE METAL SCHEME : 1P9M 
;   @(#) COMMAND FILE DATE : 03/05/2010 
;   @(#) EDA TOOL VERSION : ASSURA AV41 ; QRC EXT812 
;   @(#) SPICE MODEL TITLE        : 65nm GPLUS eDRAM (OD3:1.8V, eDRAM_Cell:1.0V) 
;   @(#) DOC. NO.	         : T-N65-CE-SP-003 
;   @(#) SPICE MODEL VERSION      : v1.1  
;   @(#) SPICE MODEL RELEASE DATE : Mar. 31, 2009  
;   @(#) SPICE MODEL TITLE        : 65nm Low-Power eDRAM (OD3:2.0V, eDRAM_Cell:1.2V) 
;   @(#) DOC. NO.	         : T-N65-CE-SP-002 (Not support sense amplifier devices) 
;   @(#) SPICE MODEL VERSION      : v1.1  
;   @(#) SPICE MODEL RELEASE DATE : Apr. 06, 2009    
;   @(#) SPICE MODEL TITLE        : 65nm CMOS Low Power Salicide Low-K Spice Model( CLN65LP ) 
;   @(#) DOC. NO.	         : T-N65-CL-SP-009 
;   @(#) SPICE MODEL VERSION      : v1.3  
;   @(#) SPICE MODEL RELEASE DATE : Jun. 05, 2009  
;   @(#) SPICE MIDEL TITLE        : 65nm CMOS G+ Salicide Low-L 1.0v&1.8v Spice Model( CLN65G+ ) 
;   @(#) DOC. NO.	         : T-N65-CL-SP-031 
;   @(#) SPICE MODEL VERSION      : v1.2  
;   @(#) SPICE MODEL RELEASE DATE : Mar. 23, 2007  
;   @(#) SPICE MODEL TITLE        : 65nm LOGIC SALICIDE Low-K IMD (1.2V/1.0V/2.5V) (CLN65LPG 1P9M)  
;   @(#) DOC. NO.	         : T-N65-CL-SP-034-P1  
;   @(#) SPICE MODEL VERSION      : v1.1p1  
;   @(#) SPICE MODEL RELEASE DATE : Dec. 28, 2007  
;   @(#) SPICE MIDEL TITLE        : 65nm CMOS G+ Salicide Low-K 1.0v&2.5v Spice Model( CLN65G+ ) 
;   @(#) DOC. NO.	         : T-N65-CL-SP-041-P1    
;   @(#) SPICE MODEL VERSION      : v1.3p1  
;   @(#) SPICE MODEL RELEASE DATE : Dec. 17, 2007  
;   @(#) SPICE MODEL TITLE        : 65nm HVMOS SALICIDE Low-K IMD (2.5V) (CLN65LPHV 1P9M) (DNW approach) 
;   @(#) DOC. NO.	         : CLN65LPHV_2d5_lk_v0d1p2.l 
;   @(#) SPICE MODEL VERSION      : v0.1p2  
;   @(#) SPICE MODEL RELEASE DATE : May. 11, 2007 
;   @(#) SPICE MODEL TITLE        : 65nm HVMOS SALICIDE Low-K IMD (2.5V) (CLN65LPHV 1P9M)  
;   @(#) DOC. NO.	         : T-N65-CL-SP-059-P1 
;   @(#) SPICE MODEL VERSION      : v1.0p1  
;   @(#) SPICE MODEL RELEASE DATE : Sep. 03, 2007  
;   @(#) SPICE MODEL TITLE        : 65nm HVMOS SALICIDE Low-K IMD (2.5V) (CLN65LPHV 1P9M) (NW approach) 
;   @(#) DOC. NO.                 : T-N65-CL-SP-070    
;   @(#) SPICE MODEL VERSION      : v1.0 
;   @(#) SPICE MODEL RELEASE DATE : Dec. 30, 2008    
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal SALICIDE Low-K IMD (1.2V/2.5V) (CMN65LP 1P9M+AL_RDL) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-002    
;   @(#) SPICE MODEL VERSION      : v1.3  
;   @(#) SPICE MODEL RELEASE DATE : Jun. 08, 2009  
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal SALICIDE Low-K IMD (1.0V/1.8V) (CMN65G+) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-005    
;   @(#) SPICE MODEL VERSION      : v1.1  
;   @(#) SPICE MODEL RELEASE DATE : Apr. 09, 2007 
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal SALICIDE Low-K IMD (1.0V/2.5V) (CMN65G+) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-006    
;   @(#) SPICE MODEL VERSION      : v1.2  
;   @(#) SPICE MODEL RELEASE DATE : Jul. 24, 2009  
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal RF SALICIDE Low-K IMD (1.2/2.5/over-drive 3.3V) (CRN65LP) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-007    
;   @(#) SPICE MODEL VERSION      : V1.5 
;   @(#) SPICE MODEL RELEASE DATE : Sep. 01, 2009 
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal RF SALICIDE Low-K IMD (1.2/3.3V) (CRN65LP) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-012    
;   @(#) SPICE MODEL VERSION      : V1.4 
;   @(#) SPICE MODEL RELEASE DATE : Sep. 18, 2009 
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal SALICIDE Low-K IMD (1.2V/3.3V) (CMN65LP 1P9M+AL_RDL) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-014    
;   @(#) SPICE MODEL VERSION      : v1.0  
;   @(#) SPICE MODEL RELEASE DATE : May. 14, 2007 
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal RF SALICIDE Low-K IMD (1.0V/2.5V) (CRN65G+) 
;   @(#) DOC. NO.	         : T-N65-CM-SP-018    
;   @(#) SPICE MODEL VERSION      : v1.0  
;   @(#) SPICE MODEL RELEASE DATE : Dec. 04, 2007  
;   @(#) SPICE MODEL TITLE        : 65nm Mixed-Signal RF SALICIDE Low-K IMD (1.0V/1.8V) (CRN65G+) for U320 Only 
;   @(#) DOC. NO.	         : T-N65-CM-SP-018-P1    
;   @(#) SPICE MODEL VERSION      : v0.01_p1 
;   @(#) SPICE MODEL RELEASE DATE : Feb. 04, 2010 
;   @(#) SPICE MODEL TITLE        : 65nm LOGIC G-process SRAM (CLN65G SRAM) 
;   @(#) DOC. NO.	         : CLN65G_sr_v1d1.l    
;   @(#) SPICE MODEL VERSION      : v1.1  
;   @(#) SPICE MODEL RELEASE DATE : Nov. 30, 2006    
;   @(#) SPICE MODEL TITLE        : 65nm LOGIC LPG SRAM (CLN65LPG SRAM) 
;   @(#) DOC. NO.	         : CLN65LPG_sr_v1d0.l    
;   @(#) SPICE MODEL VERSION      : v1.0  
;   @(#) SPICE MODEL RELEASE DATE : Mar. 26, 2006    
;   @(#) SPICE MODEL TITLE        : 65nm LOGIC ULP SRAM (CLN65ULP SRAM) 
;   @(#) DOC. NO.	         : CLN65ULP_sr_v1d0.l    
;   @(#) SPICE MODEL VERSION      : v1.0  
;   @(#) SPICE MODEL RELEASE DATE : Mar. 28, 2007    
;   @(#) SPICE MODEL TITLE        : 65nm LOGIC LPG SRAM (CLN65LPG SRAM) 
;   @(#) DOC. NO.	         : CLN65LPG_sr_v0d1_****.l    
;   @(#) SPICE MODEL VERSION      : v0.1  
;   @(#) SPICE MODEL RELEASE DATE : Jan. 31, 2008    
;   @(#) SPICE MODEL TITLE        : 65nm LOGIC LP SRAM (CLN65LP SRAM) 
;   @(#) DOC. NO.	         : CLN65LP_sr_v1d2.l    
;   @(#) SPICE MODEL VERSION      : v1.2  
;   @(#) SPICE MODEL RELEASE DATE : Oct. 13, 2006    
; 
;////////////////////////////////////////////////////////////////////////////// 
; DISCLAIMER 
; 
; This file usually contains the super set of device extraction rule at TSMC
; processes. However, all of device in basic deck may not be offered at current
; SPICE model. PLEASE ALWAYS REFER TO THE CORRESPONDING SPICE MODEL DOCUMENT
; FOR ANY DEVICE YOU WOULD LIKE USE.
; 
; The information contained herein is provided by TSMC on an "AS IS" basis 
; without any warranty, and TSMC has no obligation to support or otherwise 
; maintain the information.  TSMC disclaims any representation that the 
; information does not infringe any intellectual property rights or proprietary 
; rights of any third parties.  There are no other warranties given by TSMC, 
; whether express, implied or statutory, including, without limitation, implied 
; warranties of merchantability and fitness for a particular purpose. 
; 
; STATEMENT OF USE 
; 
; This information contains confidential and proprietary information of TSMC. 
; No part of this information may be reproduced, transmitted, transcribed, 
; stored in a retrieval system, or translated into any human or computer 
; language, in any form or by any means, electronic, mechanical, magnetic, 
; optical, chemical, manual, or otherwise, without the prior written permission 
; of TSMC.  This information was prepared for informational purpose and is for 
; use by TSMC's customers only.  TSMC reserves the right to make changes in the 
; information at any time and without notice. 
; 
;////////////////////////////////////////////////////////////////////////////// 
; 
;                           CHANGE HISTORY 
;  
;   Date     version   Who                      Description 
; ---------- ------- --------- ------------------------------------------------- 
;   
; Version Change Notice:  
;    
; 06/22/2006  V1.1b  K.M.Liu   1) The logic device is base on the deck version 1.1b 
;             pre_062206       2) The RF devices are following the spice model version v0p2 
;	                      3) Added layers OD25_33(18;3) ; OD25_18(18;4) ; 
;                              4) Change the layer name from P3 to p3; from CROWN to crown 
;			         from SNCT to blc 
;                              5) Added MAC layer (208:1) for the mismatching devices 
;			      6) Remove the POFUSE layer 
;			      7) Added layer CAP1P5(148:115) for 1.5f Cap. unit 
;			      8) Added layer CAP2P0(148:120) for 2.0f Cap. unit 
;			      9) Added PROBE layers 
;10/16/2006  V1.2a Yating Chuang 
;                              1) Refine crtmom. 
;	                      2) Revise poly_rf, define poly interact with DRAIN as poly_rf. 
;	                      3) Add ndio_w, pdio_w. 
;                              4) DFM LPE enhancement. 
;			      5) Add switch "spice_extraction" for RCX run. saveProperty about model name is omitted.   
;			      6) WPE enhancement, use measureProximity2 instead of measureProximity. 
;			       
; 12/25/2006 V1.2b   Yating Chuang 
;            pre_122506        Follow CRN65 spice model v1.0p5 update. 
;                     	      Generic update :         
;	             	      1) Revise poly(poly interconnection) and poly2(crtmom terminal). 
;		     	      2) Add device MIMCAP_SIN_3T. 
;		     	      3) Rename devive MIMCAP_SIN, merge MIMCAP_1P5_SIN, MIMCAP_2P0_SIN, and newly added MIMCAP_1P0_SIN. 
;			      4) Add nch_25od_mac,pch_25od_mac, and nch_25_dnwod_mac. 
;                              5) Mapping inter metal resistor to rmxw, top metal resistor to rmzw. 
;			      6) Add nch_25od_mac,pch_25od_mac, and nch_25_dnwod_mac. 
;			      7) Follow CMN65 spice model v1.0p1 update, add nch_na25_mac. 
;		              MMRF update : 
;	             	      1) Add nmos_rf no dnw devices, mapping to the original nmos_rf devices. 
;	        	      2) Add device MIMCAP_WOUM_SIN_RF, mim cap w/o under metal. 
;			      3) Rename devive MIMCAP_UM_SIN_RF, merge MIMCAP_UM_1P5_SIN_RF, MIMCAP_UM_2P0_SIN_RF, and newly added MIMCAP_UM_1P0_SIN_RF.  
;			      4) Refine inductor, add a dummy layer IND_NR to define RF inductor NR. 
;			      5) Remove tvia, using the original VIAx( exclude mimcap VIAx ) instead of tvia. 
;			      6) Add MOMDMY21, exclude dummy OD under MOM device. 
; 
;1/25/2007 V1.2b_pre012507   Yating Chuang 
;                              Follow CRN65LP spice model v1.0 update. 
;			      Generic update : 
;			      1) Add nonUTM inductors, spiral_sym_mza_a, spiral_std_mza_a, and spiral_sym_ct_mza_a. 
;			      2) Add nomUTM inductors( not general offered, no model ), spiral_sym_mz_x, spiral_std_mz_x, and spiral_sym_ct_mz_x. 
;			      3) Follow T-N65-CL-SP-034 v0.1 spice model, cover layer DCO(90;0) for LPG devices. 
;			         Add LPG devices, nch_lpgna, nch_lpg, nch_lpghvt, pch_lpg, pch_lpghvt, pdio_lpg, ndio_lpg, pdio_lpghvt, ndio_lpghvt, ndio_lpgna, nmoscap_lpg. 
;			      4) Follow SRAM team's request. 
;			         (50;12) for _dpsr, _hvtdpsr, (50;13) for _dphcsr, _hvtdphcsr.   
;			         Add SRAM devices, nchpg_dpsr, nchpd_dpsr, nchpg_hvtdpsr, nchpd_hvtdpsr, nchpg_dphcsr, nchpd_dphcsr, nchpg_hvtdphcsr, nchpd_hvtdphcsr. 
;			      5) Add CB/CB2 into AP connection.     
;			      6) Add cross-couple crtmom, crtmom_mx. 
;			      MMRF update : 
;			      1) Rename UTM inductors, add postfix _mu_z. 
;			      2) Add moscap_rf_hvt and moscap_rf_hvt_nw. 
;			      3) Rename Mtop resirtor rmzw to rmt in UTM process.  
;03/06/2007 V1.2b              Yating Chuang 
;                              1) Revise false parameter in parallel crtmom devices.   
;			      2) Add nch_25ud_mac, nch_25_dnwud_mac, pch_25ud_mac 
;                              3) Follow T-N65-CL-SP-041-P1 v1.2p2 spice model, add nch_na25od, nch_na25ud, nch_na25od_mac, nch_na25ud_mac, and nch_na33_mac. 
;			      4) Add switch "NW_RING". 
;03/22/2007 V1.2c              1) Change cellname postfix _25od to _25od33, _25ud to 25ud18.  
;           pre_032207         2) Add eDRAM device, nmoscap_od1t. 
;                              3) Add 1.8V ESD non-LDD NMOS devices, nch_esd18. 
;			      4) Remove CB2 and AP interconnection. 
; 03/29/2007 V1.2c   Yating Chuang 
;            pre032907         1) Revise spiral parameter "gdis". 			       
;	                      2) Add HVMOS devices, pch_hv25_spw, nch_hv25_sdnw. 
; 04/27/2007 V1.2c   Yating Chuang 
;            pre042707         1) Mapping "spm" to "StopMn" in crtmom, crtmom_rf, crtmom_mx.  
;	                      2) Add nchpg_wosr, nchpd_wosr for 0.9 TP_HC SRAM devices.  
; 05/07/2007 V1.2c   Yating Chuang 
;            pre050707         1) Revise DFM/LPE extraction in non-DFM devices. 
;	                      2) Add devices ndio_na25od, ndio_na25ud. 
;	                      3) Rename postfix of spirals; Mza_a to mza_a, Mz_x to mzx, and Mu_z to mu_z. 
; 06/20/2007 V1.2c   Yating Chuang 
;                              1) Add option "physical" in extractDevice of resistors. 
;			      2) Revise logic opration, ngate_rf not inside nwell, pgate_rf inside nwell. 
;			      3) Add UHVT devices, nch_uhvt and pch_uhvt. 
; 09/19/2007 V1.2d    Yating Chuang			       
;                              1) Add ULP SRAM devices; nchpg_ulpsr, nchpd_ulpsr, nchpg_ulpdpsr, nchpd_ulpdpsr, pchpu_ulpsr and pchpu_ulpdpsr. 
;	                      2) Add LPG SRAM devices; nchpg_lpgsr,nchpd_lpgsr and pchpu_lpgsr.      
;			      3) Update n_pplug for soft-connect check. 			       
;                              4) Update auxiliary layer of nch_25 from nthin1 to nthin. 
;			      5) Follow CRN65LP v1.2 model update. 
;			         Add linear cap devices : lincap, lincap_25, lincap_rf, and lincap_rf_25. 
;				 Add udc mimcap devices : mimcap_um_sin_udc_rf, mimcap_woum_sin_udc_rf, mimcap_sin_udc, and mimcap_sin_udc_3t. 
;				 Add mu_a inductors : spiral_std_mu_a, spiral_sym_mu_a, and spiral_sym_ct_mu_a. 			       
; 
; 11/16/2007  V1.2e   Y.J.Wang  1) Modified diff exclude RODMY to be diff exclude (RODMY AND SRM).				  
; 			       2) Modified baseband lincap and lincap_25 devices to be 2T device. 
;			       3) Adding new HVNMOS for NW approach named "nch_hv25_snw", it covered by HVD(91;3). 
;			       4) Seperate WPE boundary for I/O 3.3V PMOS from other PMOS.  
; 
; 12/20/2007  V1.2f   Y.J.Wang  1) Modified HV MOS to be asymmetry device, source/drain can not be swappable.			        
; 
; 01/16/2008  V1.3a  Y.J.Wang   1) Adding new devices pmoscap_rf, pmoscap_rf25, and lowcpad devices.   
; 01/23/2008		       2) Adding connection for checking RTMOM.	 
;  
; 02/27/2008  V1.3b  Y.J.Wang   1) Adding new switch "FILTER_DGS_TIED_MOS". 
; 			       2) Update Document of deck usage. 
;			       3) Update 1tr decap formation. 
;			       4) Adding LPG SRAM TP 0.1158 cell in, nchpd_lpgtpsr,nchpg_lpgtpsr, and pchpu_lpgtpsr. 
; 
; 05/12/2008  V1.3c  Y.J.Wang   1) Modifying compare.rul procedure of compareRES/compareRESR.  
;			       2) Adding attachParameter of "wf" for HVMOS and connection between HVD terminals and diffusion. 
;			       3) Modifying gate formation of hvt sram without NOT layer SRAM16. 
;			       4) Not merge dummy poly into PO for definition of resistor and polyCont, poly_term.  
;			          But poly interconnect will include DPO layer. 
;			       5) Modified pwdnw formation and NPN device will not extract pwdnw device when turn-on "extract_dnwdio" switch. 	   
;                               6) Adding new switch "FILTER_DGS_TIED_MOS" in compare.rul. 
; 06/17/2008                    7) Change the bulk terminal type of mimcap_woum_sin_rf to meet all substrate types:NW/PW/DNW/NTN. 
; 
; 07/14/2008         Y.J.Wang   8) Update Assura DFM macro code to reduce run time. 
; 			       9) Update ERC rules check of mnpg/mppg to include all core/IO/HV MOS in (exclude SRAM bit-cell and RF MOS). 
;			      10) Add switch "CELLIMP" to switch N65LP sram and N65G sram, turn-on this switch to use wisr/wosr of N65LP sram model. 
;			      11) Add new RF 5T/6T svt/hvt/lvt/IO devices in. 
;			      12) Add new RF high current diodes :ndio_hia_rf and pdio_hia_rf in. 
;			      13) The wpe params : sca/scb/scc of RF MOS only support GUI mode (only for calibre viw and assura extractview). 
;			      14) Add new macro hvd devices : nch_hv25_sdnw_mac, nch_hv25_snw_mac and pch_hv25_spw_mac. 
; 10/21/2008                   15) Revised metal/poly/od resistors for not include DUMMY DUM/DPO/DOD for resistor formation. 
;			      16) Remove floating gate checking in ERC section, because DRM has rule PO.R.8 to define it. 
;			      17) Adding ERC switch for each ERC rules, some are default turn-off, and use it by customer decision. 
;			      18) Adding two CAD layers: SRM15(50;15) and SRM16(50;16) for N65/N55 0.832 and N650.909 && N55 0.928 dimension. 
;			      19) Excluding TCDDMY in floating nwell ERC check based while use DRC fill utility to avoid false errors. 
;			        
; 12/08/2008  V1.4a  Y.J.Wang   1) Adding small BJT for shrink base area, small bjt devices use BJTDMY(110;0)+BJTDMY1(110;1). 
; 			       2) Modify recognition layer of pchpu_wosr and pchpu_wisr device to exist in switch "CELLIMP" turning-on(N65LP sram). 
;			       3) Supporting probe device up to top-1 metal layer, ex: support probe5 in 1p6m with turn-off top2_thick switch. 
;			       4) Revise model extraction names of 25od33 devices ex: nch_na25od33, ndio_na25od33, 5T/6T 25od33 RFMOS. 
; 
; 08/17/2009  V1.4a_special Y.J.Wang  1). Blocking "crtmom*" and "crtmom_mx*" cells. 
;				     2). Adding pmoscap_rf18 device, align with N55 UTM process. 
;				     3). Adding new 2T base-band mimcap by using CTMDMYUD(148;10). 
;				     4). Adding new 3T RF with shielding mimcap_um_sin_rf by using RFDMYUD(161;10). 
;				     5). Revised transfer property for MOS/DIO type, remove "dmcg", "xw" and "pj" for PDK extractview flow. 
;				     6). Based on newest edram spice mode, pch_1tr will be renamed as pch_edc device. 
; 
; 09/30/2009  V1.5a  Y.J.Wang   1) Based on CRN65LP model card, adding new shottky barrier diode devices. SBDDMY(113;0) used for these devices. 
; 			       2) Revised radius equation of spiral devices for correctly calculating values. 
;			       3) Remove area parameter extraction of BJT devices in LPE flow(turn-on RC_DECK). 
;			       4) Revised SRM layer from 50 to (50;0) and update usage documents. 				      
;			       5) Not support sense amplifier device in model T-N65-CE-SP-002 v1.1. 
; 
; 11/20/2009  V1.5b_pre  Y.J.Wang   1) Adding LDD transferProperty variables in compare.rul file. 
;			           2) Adding VDDM and VSSM as power/ground name group. 
;			           3) Adding disclaimer about VIRTUAL CONNECT COLON YES command. 
;			           4) Create capgen.cmd for blocking ctm and cbm layers of BB MIMCAP, please refer file capgen.cmd.mim. 
;			           5) Based on newest DRM and LP Model, ALRDL has 2 thickness: 14k and 28k and cannot be co-existed. 
;			              It will use switch AP_UT to seperate two model names rm10(=rmap) and rmap_ut. 
;				      Please notice rmap_ut device only can exist in LP process. 
; 
;  
; 03/05/2010  V1.5b_pre Y.J.Wang   6) Adding IO 1.8v Native RFNMOS device.		   
; 				  7) Modify gate formation that allow base-band MOS put inside RFDMY but outside RFMOS guard-ring region.  
;  
; 
;////////////////////////////////////////////////////////////////////////////// 
; 
;                             DEVICE FORMULA 
;	 CORE == 1.0v or 1.2v  
;	 I/O  == 2.5v or 3.3v or 1.8v 
;   ----- ----------------------------- ---------------------------------- 
;   NAME     DESCRIPTION                   DEVICE LAYER OPERATION 
;   ----- ----------------------------- ---------------------------------- 
;   M[nch]           CORE Nominal VT NMOS      ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW-SRM-OD1T-DCO)  
;   M[nch_dnw]       CORE Nominal VT NMOS/DNW  ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW-SRM-OD1T)  
;   M[nch_lvt]       CORE LOW-VT NMOS          ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW*VTL_N-SRM) 
;   M[nch_lvt_dnw]   CORE LOW-VT NMOS/DNW      ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW*VTL_N-SRM) 
;   M[nch_hvt]       CORE HIGH-VT NMOS         ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW*VTH_N-SRM-DCO)  
;   M[nch_hvt_dnw]   CORE HIGH-VT NMOS/DNW     ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW*VTH_N-SRM)  
;   M[nch_uhvt]      CORE ULTRA-HIGH-VT NMOS     ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW-OD1T*UHVT_N) 
;   M[nch_uhvt_dnw]  CORE ULTRA-HIGH-VT NMOS/DNW ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW-OD1T*UHVT_N) 
;   M[nch_ulvt]      CORE ULTRA-LOW-VT NMOS      ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW-OD1T*VTUL_N) 
;   M[nch_ulvt_dnw]  CORE ULTRA-LOW-VT NMOS/DNW  ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW-OD1T*VTUL_N) 
;   M[nch_mlvt]      CORE ILVT NMOS            ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW*ILVT-SRM) 
;   M[nch_mlvt_dnw]  CORE ILVT NMOS/DNW        ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW*ILVT-SRM) 
; 
;   M[nch_na]       CORE native device         ((NGATE-OD25-OD18-OD33)*NT_Ni-SRM-DCO) 
;   M[nch_lpg]      LPG Nominal VT NMOS        ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW-SRM-OD1T*DCO)  
;   M[nch_lpghvt]   LPG HIGH-VT NMOS           ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW*VTH_N-SRM*DCO)  
;   M[nch_lpgna]    LPG native device          ((NGATE-OD25-OD18-OD33)*NT_Ni-SRM*DCO)  
;   M[nchpg_sr]     SRAM passgate NMOS         ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT-SRM12-SRM13-SRM14-SRAM16-DCO)  
;   M[nchpd_sr]     SRAM pulldown NMOS         ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT-SRM12-SRM13-SRM14-SRAM16-DCO) 
;   M[nchpg_lpgsr]  SRAM LPG passgate NMOS     ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT-SRM12-SRM13-SRM14-SRAM16*DCO)  
;   M[nchpd_lpgsr]  SRAM LPG pulldown NMOS     ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT-SRM12-SRM13-SRM14-SRAM16*DCO) 
;   M[nchpg_hvtsr]  SRAM High VT passgate NMOS  ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM*SRAMPSGT-SRM12-SRM13-SRM14-SRM17)  
;   M[nchpd_hvtsr]  SRAM High VT pulldown NMOS  ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM-SRAMPSGT-SRM12-SRM13-SRM14-SRM17)    
;   M[nchpg_dpsr]   SRAM passgate NMOS 0.974 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM12-SRM14-SRM17-DCO)  
;   M[nchpd_dpsr]   SRAM pulldown NMOS 0.974 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM12-SRM14-SRM17-DCO) 
;   M[nchpg_lpgdpsr]  SRAM LPG passgate NMOS 0.974 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM12-SRM14-SRM17*DCO)  
;   M[nchpd_lpgdpsr]  SRAM LPG pulldown NMOS 0.974 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM12-SRM14-SRM17*DCO) 
;   M[nchpg_hvtdpsr]  SRAM High VT passgate NMOS 0.974 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM*SRAMPSGT*SRM12-SRM14-SRM17)  
;   M[nchpd_hvtdpsr]  SRAM High VT pulldown NMOS 0.974 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM-SRAMPSGT*SRM12-SRM14-SRM17)    
;   M[nchpg_dphcsr]   SRAM passgate NMOS 1.15 DP      ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM13-SRM14)  
;   M[nchpd_dphcsr]   SRAM pulldown NMOS 1.15 DP      ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM13-SRM14) 
;   M[nchpg_hvtdphcsr]  SRAM High VT passgate NMOS 1.15 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM*SRAMPSGT*SRM13-SRM14)  
;   M[nchpd_hvtdphcsr]  SRAM High VT pulldown NMOS 1.15 DP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM-SRAMPSGT*SRM13-SRM14)    
;   M[nchpg_ulpsr]    SRAM ULP passgate NMOS          ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM*SRAMPSGT-SRM12*SRM17-SRM14)  
;   M[nchpd_ulpsr]    SRAM ULP pulldown NMOS          ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM-SRAMPSGT-SRM12*SRM17-SRM14)    
;   M[nchpg_ulpdpsr]  SRAM ULP passgate NMOS DP       ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM*SRAMPSGT*SRM12*SRM17-SRM14)  
;   M[nchpd_ulpdpsr]  SRAM ULP pulldown NMOS DP       ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N*VTH_N-UHVT_N*SRM-SRAMPSGT*SRM12*SRM17-SRM14)    
;   M[nchpg_lpgtpsr]  SRAM LPG passgate NMOS 0.1158 TP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM14*DCO)  
;   M[nchpd_lpgtpsr]  SRAM LPG pulldown NMOS 0.1158 TP ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM14*DCO) 
;   M[nchpg_wosr]  SRAM G SVT passgate NMOS 0.9 TP       ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM16-SRM14)  
;   M[nchpd_wosr]  SRAM G SVT pulldown NMOS 0.9 TP       ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM16-SRM14)  
;   M[nchpg_wosr]  SRAM LP SVT passgate NMOS HC    ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM11-SRM10-SRM16-SRM14)  
;   M[nchpd_wosr]  SRAM LP SVT pulldown NMOS HC    ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM11-SRM10-SRM16-SRM14)    
;   M[nchpg_wisr]  SRAM SVT passgate NMOS UHD   ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM*SRAMPSGT*SRM10-SRM11-SRM16-SRM14)  
;   M[nchpd_wisr]  SRAM SVT pulldown NMOS UHD   ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_N-UHVT_N*SRM-SRAMPSGT*SRM10-SRM11-SRM16-SRM14) 
;   M[nch_timer]   SRAM timer NMOS              ((NGATE-OD25-OD18-OD33-NT_Ni-VTL_N-VTH_-UHVT_NN*SRM*SRAMTIMER)  
;   M[nch_w]          eDRAM Nominal VT NMOS         ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW-SRM*OD1T-p3-VTUL_N)  
;   M[nch_dnw_w]      eDRAM Nominal VT NMOS/DNW     ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW-SRM*OD1T-p3)  
;   M[nch_w_lvt]      eDRAM ULTRA-LOW-VT NMOS       ((NGATE-OD25-OD18-OD33-NT_Ni)-DNW-SRM*OD1T-p3*VTUL_N)  
;   M[nch_dnw_w_lvt]  eDRAM ULTRA-LOW-VT NMOS/DNW   ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW-SRM*OD1T-p3*VTUL_N) 
;   M[nch_dnw_1tr]    eDRAM 1TR NMOS/DNW            ((NGATE-OD25-OD18-OD33-NT_Ni)*DNW-SRM*OD1T*p3)  
; 
;   M[nch_18]            I/O Nominal VT NMOS                ((NGATE*OD18-OD25-OD33-NT_Ni-RH)-DNW)  
;   M[nch_esd18]         I/O esd non-LDD NMOS               ((NGATE*OD18-OD25-OD33-NT_Ni*RPO*RH)-DNW)  
;   M[nch_25]            I/O Nominal VT NMOS                ((NGATE*OD25-OD33-OD18-NT_Ni-OD25_18-OD25_33-HVD_N)-DNW)  
;   M[nch_25ud]          I/O Nominal VT NMOS                ((NGATE*OD25*OD25_18-OD33-OD18-NT_Ni-HVD_N)-DNW)  
;   M[nch_25od]          I/O Nominal VT NMOS                ((NGATE*OD25*OD25_33-OD33-OD18-NT_Ni-HVD_N)-DNW)  
;   LDDN[nch_hv25_sdnw]  Asymmetry HVD NMOS w/i DNW approach ((NGATE*OD25-NT_Ni*HVD_N)-DNW)  
;   LDDN[nch_hv25_snw]   Asymmetry HVD NMOS w/i NW approach  ((NGATE*OD25-NT_Ni*HVD_NW)-DNW)  
;   M[nch_33]  		I/O Nominal VT NMOS                ((NGATE*OD33-OD25-OD18-NT_Ni)-DNW)  
;   M[nch_18_dnw] 	I/O Nominal VT NMOS/DNW            ((NGATE*OD18-OD25-OD33-NT_Ni)*DNW)-RH  
;   M[nch_esd18_dnw] 	I/O esd non-LDD NMOS/DNW           ((NGATE*OD18-OD25-OD33-NT_Ni*RPO*RH)*DNW)  
;   M[nch_25_dnw] 	I/O Nominal VT NMOS/DNW            ((NGATE*OD25-OD33-OD18-NT_Ni-OD25_18-OD25_33)*DNW)  
;   M[nch_25_dnwud] 	I/O Nominal VT NMOS/DNW            ((NGATE*OD25*OD25_18-OD33-OD18-NT_Ni)*DNW)  
;   M[nch_25_dnwod] 	I/O Nominal VT NMOS/DNW            ((NGATE*OD25*OD25_33-OD33-OD18-NT_Ni)*DNW)  
;   M[nch_33_dnw] 	I/O Nominal VT NMOS/DNW            ((NGATE*OD33-OD25-OD18-NT_Ni)*DNW)  
;   M[nch_na18]   	I/O native device                  ((NGATE*OD18-OD25-OD33)*NT_Ni)   
;   M[nch_na25]   	I/O native device                  ((NGATE*OD25-OD33-OD18-OD25_33-OD25_18)*NT_Ni)   
;   M[nch_na25ud] 	I/O native device                  ((NGATE*OD25*OD25_18-OD33-OD18)*NT_Ni)   
;   M[nch_na25od] 	I/O native device                  ((NGATE*OD25*OD25_33-OD33-OD18)*NT_Ni)   
;   M[nch_na33]   	I/O native device                  ((NGATE*OD33-OD25-OD18)*NT_Ni)   
;   M[pch]      		CORE Nominal VT PMOS               ((PGATE-OD25-OD33-OD18)-SRM-OD1T-DCO)  
;   M[pch_hvt]   	CORE High-VT PMOS                  ((PGATE-OD25-OD33-OD18*VTH_P)-SRM-DCO) 
;   M[pch_lvt]   	CORE LOW-VT PMOS                   (PGATE-OD25-OD33-OD18*VTL_P-SRM) 
;   M[pch_ulvt]  	CORE ULTRA-LOW-VT PMOS             ((PGATE-OD25-OD33-OD18)*VTUL_P-OD1T) 
;   M[pch_uhvt]  	CORE ULTRA-HIGH-VT PMOS            ((PGATE-OD25-OD33-OD18)*UHVT_P-OD1T) 
;   M[pch_mlvt]          CORE ILVT PMOS                     (PGATE-OD25-OD33-OD18*ILVT-SRM) 
; 
;   M[pchpu_sr]          SRAM PMOS                     ((PGATE-OD25-OD33-OD18)-VTH_P*SRM-SRM12-SRM13-SRM14-DCO)  
;   M[pchpu_lpgsr]       SRAM LPG PMOS                 ((PGATE-OD25-OD33-OD18)-VTH_P*SRM-SRM12-SRM13-SRM14*DCO)  
;   M[pchpu_hvtsr]       SRAM High VT PMOS             ((PGATE-OD25-OD33-OD18)*VTH_P*SRM-SRM12-SRM13-SRM14-SRM17) 
;   M[pchpu_dpsr]        SRAM PMOS 0.974 DP            ((PGATE-OD25-OD33-OD18)-VTH_P*SRM*SRM12-SRM13-SRM14-SRM17-DCO)  
;   M[pchpu_lpgdpsr]     SRAM LPG PMOS 0.974 DP        ((PGATE-OD25-OD33-OD18)-VTH_P*SRM*SRM12-SRM13-SRM14-SRM17*DCO)  
;   M[pchpu_hvtdpsr]     SRAM High VT PMOS 0.974 DP    ((PGATE-OD25-OD33-OD18)*VTH_P*SRM*SRM12-SRM17-SRM14) 
;   M[pchpu_dphcsr]      SRAM PMOS 1.15 DP             ((PGATE-OD25-OD33-OD18)-VTH_P*SRM-SRM12*SRM13-SRM14)  
;   M[pchpu_hvtdphcsr]   SRAM High VT PMOS 1.15 DP     ((PGATE-OD25-OD33-OD18)*VTH_P*SRM-SRM12*SRM13-SRM14) 
;   M[pchpu_ulpsr]       SRAM ULP PMOS                 ((PGATE-OD25-OD33-OD18)*VTH_P*SRM-SRM12-SRM14*SRM17) 
;   M[pchpu_ulpdpsr]     SRAM ULP PMOS DP              ((PGATE-OD25-OD33-OD18)*VTH_P*SRM*SRM12-SRM14*SRM17) 
;   M[pchpu_lpgtpsr]     SRAM LPG PMOS 0.1158 TP       ((PGATE-OD25-OD33-OD18)-VTH_P*SRM*SRM14*DCO)  
;   M[pch_timer]         SRAM timer PMOS               ((PGATE-OD25-OD18-OD33)-VTL_P-VTUL_P*SRM*SRAMTIMER)  
;   M[pch_w]             eDRAM Nominal VT PMOS         ((PGATE-OD25-OD33-OD18)-SRM*OD1T-p3-VTUL_P)  
;   M[pch_w_lvt]         eDRAM ULTRA-LOW-VT PMOS       ((PGATE-OD25-OD33-OD18)-SRM*OD1T-p3*VTUL_P)  
;   M[pch_edc]           eDRAM 1TR PMOS                ((PGATE-OD25-OD33-OD18)-SRM*OD1T*p3)  
;   M[pchpu_wosr]        SRAM SVT pullup PMOS HC       ((PGATE-OD25-OD18-OD33-VTL_P-VTH_P-UHVT_P*SRM*SRM11-SRM10-SRM14)    
;   M[pchpu_wisr]        SRAM SVT pullup PMOS UHD      ((PGATE-OD25-OD18-OD33-VTL_P-VTH_P-UHVT_P*SRM*SRM10-SRM11-SRM14) 
;   M[pch_lpg]           LPG Nominal VT PMOS           ((PGATE-OD25-OD33-OD18)-SRM-OD1T*DCO)  
;   M[pch_lpghvt]        LPG High-VT PMOS              ((PGATE-OD25-OD33-OD18*VTH_P)-SRM*DCO)  
;   M[pch_18]            I/O Nominal VT PMOS           (PGATE*OD18-OD25-OD33)  
;   M[pch_25]            I/O Nominal VT PMOS           (PGATE*OD25-OD33-OD18-OD25_18-OD25_33-HVD_P)  
;   M[pch_25ud]          I/O Nominal VT PMOS           (PGATE*OD25*OD25_18-OD33-OD18-HVD_P)  
;   M[pch_25od]          I/O Nominal VT PMOS           (PGATE*OD25*OD25_33-OD33-OD18-HVD_P)  
;   LDDP[pch_hv25_spw]   Asymmetry HVD PMOS            (PGATE*OD25*HVD_P)  
;   M[pch_33]            I/O Nominal VT PMOS           (PGATE*OD33-OD25-OD18)  
; 
; 
;   rnwod          N-Well resistor under OD 2T         (NWDMYi*NW*(ODI*RPO))  
;   rnwod_m        N-Well resistor under OD 3T         (NWDMY1*NW*(ODI*RPO))  
;   rnwsti         N-Well resister under STI 2T        (NWDMYi*NW-(ODI*RPO))  
;   rnwsti_m       N-Well resister under STI 3T        (NWDMY1*NW-(ODI*RPO))  
;   rpodwo         P+diff resistor w/o Silicide        (RPDMYi*ODI*PP*RPO*RH*NW)  
;   rnodwo         N+diff resistor w/o Silicide        (RPDMYi*ODI*NP*RPO*RH-NW)  
;   rpodwo_m       P+diff resistor w/o Silicide        (RPDMY1*ODI*PP*RPO*RH*NW)  
;   rnodwo_m       N+diff resistor w/o Silicide        (RPDMY1*ODI*NP*RPO*RH-NW)  
;   rnodl          N+diff resistor w/i Silicide >=2 2T (RPDMYi*ODI*NP-RPO-NW)  
;   rnodl_m        N+diff resistor w/i Silicide >=2 3T (RPDMY1*ODI*NP-RPO-NW)  
;   rnods          N+diff resistor w/i Silicide <2 2T  (RPDMYi*ODI*NP-RPO-NW)  
;   rnods_m        N+diff resistor w/i Silicide <2 3T  (RPDMY1*ODI*NP-RPO-NW)  
;   rpodl          P+diff resistor w/i Silicide >=2 2T (RPDMYi*ODI*PP-RPO*NW)  
;   rpodl_m        P+diff resistor w/i Silicide >=2 3T (RPDMY1*ODI*PP-RPO*NW)  
;   rpods          P+diff resistor w/i Silicide <2 2T  (RPDMYi*ODI*PP-RPO*NW)  
;   rpods_m        P+diff resistor w/i Silicide <2 3T  (RPDMY1*ODI*PP-RPO*NW)  
; 
;   rppolywo       P+Poly resistor w/o Silicide 2T     (RPDMYi*POI*PP*RPO*RH-RFDMY)  
;   rppolywo_m     P+Poly resistor w/o Silicide 3T     (RPDMY1*POI*PP*RPO*RH-RFDMY) 
;   rnpolywo       N+Poly resistor w/o Silicide 2T     (RPDMYi*POI*NP*RPO*RH)  
;   rnpolywo_m     N+Poly resistor w/o Silicide 3T     (RPDMY1*POI*NP*RPO*RH) 
;   rnpolyl        N+Poly resistor w/i Silicide >=2 2T (RPDMYi*POI*NP-RPO)  
;   rnpolyl_m      N+Poly resistor w/i Silicide >=2 3T (RPDMY1*POI*NP-RPO)  
;   rnpolys        N+Poly resistor w/i Silicide <2 2T  (RPDMYi*POI*NP-RPO)  
;   rnpolys_m      N+Poly resistor w/i Silicide <2 3T  (RPDMY1*POI*NP-RPO)  
;   rppolyl        P+Poly resistor w/i Silicide >=2 2T (RPDMYi*POI*PP-RPO-RFDMY)  
;   rppolyl_m      P+Poly resistor w/i Silicide >=2 3T (RPDMY1*POI*PP-RPO-RFDMY)  
;   rppolys        P+Poly resistor w/i Silicide <2 2T  (RPDMYi*POI*PP-RPO-RFDMY)  
;   rppolys_m      P+Poly resistor w/i Silicide <2 3T  (RPDMY1*POI*PP-RPO-RFDMY)  
; 
;   rm1         METAL1 resistor                     (RMDMY1*M1) 
;   rm2         METAL2 resistor                     (RMDMY2*M2) 
;   rm3         METAL3 resistor                     (RMDMY3*M3) 
;   rm4         METAL4 resistor                     (RMDMY4*M4) 
;   rm5         METAL5 resistor                     (RMDMY5*M5) 
;   rm6         METAL6 resistor                     (RMDMY6*M6) 
;   rm7         METAL7 resistor                     (RMDMY7*M7) 
;   rm8         METAL8 resistor                     (RMDMY8*M8) 
;   rm9         METAL9 resistor                     (RMDMY9*M9) 
; 
; 
;   rm10      AP resistor                         (RMDMYAP*AP) 
;   D[PDIO]      CORE diode P+/NW              (DIODMY*OD*PP-OD25-OD33-OD18*NW-OD1T-DCO-HIADMY-RFDMY)  
;   D[PDIO_lpg]  LPG diode P+/NW               (DIODMY*OD*PP-OD25-OD33-OD18*NW-OD1T*DCO-HIADMY-RFDMY)  
;   D[NDIO]      CORE diode N+/PW              (DIODMY*OD*NP-OD25-OD33-OD18*PSUB-OD1T-DCO-HIADMY-RFDMY)  
;   D[NDIO_lpg]  LPG diode N+/PW		      (DIODMY*OD*NP-OD25-OD33-OD18*PSUB-OD1T*DCO-HIADMY-RFDMY)	 
;   D[PDIO_w]    eDRAM diode P+/NW             (DIODMY*OD*PP-OD25-OD33-OD18*NW*OD1T-HIADMY-RFDMY)  
;   D[NDIO_w]    eDRAM diode N+/PW             (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*OD1T-HIADMY-RFDMY)  
;   D[NWDIO]     CORE diode NW/PW              (DIODMY*NW*NP*PP-OD25-OD33-OD18-HIADMY-RFDMY)  
;   D[PDIO_hvt]  CORE High-VT diode P+/NW      (DIODMY*OD*PP-OD25-OD33-OD18*NW*VTH_P-DCO-HIADMY-RFDMY)  
;   D[PDIO_lpghvt] LPG High-VT diode P+/NW     (DIODMY*OD*PP-OD25-OD33-OD18*NW*VTH_P*DCO-HIADMY-RFDMY)  
;   D[NDIO_hvt]  CORE High-VT diode N+/PW      (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*VTH_N-DCO-HIADMY-RFDMY)  
;   D[NDIO_lpghvt] LPG High-VT diode N+/PW     (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*VTH_N*DCO-HIADMY-RFDMY) 
;   D[PDIO_lvt]  CORE Low-VT diode P+/NW       (DIODMY*OD*PP-OD25-OD33-OD18*NW*VTL_P-HIADMY-RFDMY)  
;   D[NDIO_lvt]  CORE Low-VT diode N+/PW       (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*VTL_N-HIADMY-RFDMY) 
;   D[PDIO_mlvt] CORE ILVT diode P+/NW         (DIODMY*OD*PP-OD25-OD33-OD18*NW*ILVT-HIADMY-RFDMY)  
;   D[NDIO_mlvt] CORE ILVT diode N+/PW         (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*ILVT-HIADMY-RFDMY) 
;   D[PDIO_18]   I/O diode P+/NW               (DIODMY*OD*PP*OD18*NW-HIADMY-RFDMY)  
;   D[PDIO_25]   I/O diode P+/NW               (DIODMY*OD*PP*OD25-OD25_18-OD25_33*NW-HVD_P-HIADMY-RFDMY)  
;   D[PDIO_25UD] I/O diode P+/NW               (DIODMY*OD*PP*OD25*OD25_18*NW-HIADMY-RFDMY)  
;   D[PDIO_25OD] I/O diode P+/NW               (DIODMY*OD*PP*OD25*OD25_33*NW-HIADMY-RFDMY)  
;   D[PDIO_33]   I/O diode P+/NW               (DIODMY*OD*PP*OD33*NW-HIADMY-RFDMY)  
;   D[NDIO_18]   I/O diode N+/PW               (DIODMY*OD*NP*OD18*PSUB-HIADMY-RFDMY)  
;   D[NDIO_25]   I/O diode N+/PW               (DIODMY*OD*NP*OD25-OD25_18-OD25_33*PSUB-HIADMY-RFDMY)  
;   D[NDIO_25UD] I/O diode N+/PW               (DIODMY*OD*NP*OD25*OD25_18*PSUB-HIADMY-RFDMY)  
;   D[NDIO_25OD] I/O diode N+/PW               (DIODMY*OD*NP*OD25*OD25_33*PSUB-HIADMY-RFDMY)  
;   D[NDIO_33]   I/O diode N+/PW               (DIODMY*OD*NP*OD33*PSUB-HIADMY-RFDMY)  
;   D[NWDIO_18]  I/O diode NW/PW               (DIODMY*NW*NP*PP*OD18-HIADMY-RFDMY)  
;   D[NWDIO_25]  I/O diode NW/PW               (DIODMY*NW*NP*PP*OD25-HIADMY-RFDMY)  
;   D[NWDIO_33]  I/O diode NW/PW               (DIODMY*NW*NP*PP*OD33-HIADMY-RFDMY)  
;   D[NDIO_NA]     CORE native diode N+/PW     (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*NT_Ni-DCO-HIADMY-RFDMY)  
;   D[NDIO_LPGNA]  LPG native diode N+/PW      (DIODMY*OD*NP-OD25-OD33-OD18*PSUB*NT_Ni*DCO-HIADMY-RFDMY)  
;   D[NDIO_NA18]   I/O native diode N+/PW      (DIODMY*OD*NP*OD18*PSUB*NT_Ni-HIADMY-RFDMY)  
;   D[NDIO_NA25]   I/O native diode N+/PW      (DIODMY*OD*NP*OD25*PSUB*NT_Ni-HIADMY-RFDMY)  
;   D[NDIO_NA25UD] I/O native diode N+/PW      (DIODMY*OD*NP*OD25*OD25_18*PSUB*NT_Ni-HIADMY-RFDMY)  
;   D[NDIO_NA25OD] I/O native diode N+/PW      (DIODMY*OD*NP*OD25*OD25_33*PSUB*NT_Ni-HIADMY-RFDMY)  
;   D[NDIO_NA33]   I/O native diode N+/PW      (DIODMY*OD*NP*OD33*PSUB*NT_Ni-HIADMY-RFDMY)  
;   D[NDIO_ESD]    IO Diode DB                 (ESD3*NP*OD*RPO)  
;   D[DNWPSUB]     Diode DNW/PSUB              (DNW*PSUB)            
;   D[PWDNW]       Diode PWELL/DNW             (DNW-NW-BJTDMY) 
;   C[CM]          CM capacitor device         (crown*p3*OD-RPO) 
;   Q[NPN10]       NPN10X10                    (DNW*BJTDMY*OD*NP*RPO-BJTDMY1)  
;   Q[NPN5]        NPN5X5                      (DNW*BJTDMY*OD*NP*RPO-BJTDMY1)  
;   Q[NPN2]        NPN2X2                      (DNW*BJTDMY*OD*NP*RPO-BJTDMY1)  
;   Q[PNP10]       CORE PNP-BJT                (BJTDMY*OD*PP*NW*RPO-BJTDMY1)  
;   Q[PNP5]        CORE PNP-BJT                (BJTDMY*OD*PP*NW*RPO-BJTDMY1)  
;   Q[PNP2]        CORE PNP-BJT                (BJTDMY*OD*PP*NW*RPO-BJTDMY1)  
; 
;   Q[NPN10_S]     SMALL NPN10X10              (DNW*BJTDMY*OD*NP*RPO*BJTDMY1)  
;   Q[NPN5_S]      SMALL NPN5X5                (DNW*BJTDMY*OD*NP*RPO*BJTDMY1)  
;   Q[NPN2_S]      SMALL NPN2X2                (DNW*BJTDMY*OD*NP*RPO*BJTDMY1) 
;   Q[PNP10_S]     CORE SMALL PNP-BJT          (BJTDMY*OD*PP*NW*RPO*BJTDMY1)  
;   Q[PNP5_S]      CORE SMALL PNP-BJT          (BJTDMY*OD*PP*NW*RPO*BJTDMY1)  
;   Q[PNP2_S]      CORE SMALL PNP-BJT          (BJTDMY*OD*PP*NW*RPO*BJTDMY1)  
;   nmoscap        MOSCAP Varactor             ((VARGT*NW-OD18-OD25-OD33)-RFDMY-DCO-OD1T) 
;   nmoscap_lpg    LPG MOSCAP Varactor         ((VARGT*NW-OD18-OD25-OD33)-RFDFM*DCO) 
;   nmoscap_25     2.5V MOSCAP Varactor        ((VARGT*NW-OD18*OD25-OD33)-RFDMY) 
;   nmoscap_18     1.8V MOSCAP Varactor        ((VARGT*NW*OD18-OD25-OD33)-RFDMY) 
;   nmoscap_33     3.3V MOSCAP Varactor        ((VARGT*NW-OD18-OD25*OD33)-RFDMY) 
;   moscap_rf      RF MOSCAP Varactor          ((VARGT*NW-OD18-OD25-OD33-VTH_P)*RFDMY*DNW) 
;   moscap_rf_nw   RF MOSCAP Varactor w/i NW       ((VARGT*NW-OD18-OD25-OD33-VTH_P)*RFDMY-DNW) 
;   moscap_rf_hvt  RF MOSCAP HVT Varactor          ((VARGT*NW-OD18-OD25-OD33*VTH_P)*RFDMY*DNW) 
;   moscap_rf_hvt_nw   RF MOSCAP HVT Varactor w/i NW  ((VARGT*NW-OD18-OD25-OD33*VTH_P)*RFDMY-DNW) 
;   moscap_rf18    1.8V MOSCAP Varactor          ((VARGT*NW*OD18-OD25-OD33)*RFDMY*DNW) 
;   moscap_rf18_nw 1.8V MOSCAP Varactor w/i NW   ((VARGT*NW*OD18-OD25-OD33)*RFDMY-DNW) 
;   moscap_rf25    2.5V MOSCAP Varactor          ((VARGT*NW-OD18*OD25-OD33)*RFDMY*DNW) 
;   moscap_rf25_nw 2.5V MOSCAP Varactor w/i NW   ((VARGT*NW-OD18*OD25-OD33)*RFDMY-DNW) 
;   moscap_rf33    3.3V MOSCAP Varactor          ((VARGT*NW-OD18-OD25*OD33)*RFDMY*DNW) 
;   moscap_rf33_nw 3.3V MOSCAP Varactor w/i NW   ((VARGT*NW-OD18-OD25*OD33)*RFDMY-DNW) 
;   pmoscap_rf      RF PMOSCAP Varactor          ((PVARGT*DNW-OD18-OD25-OD33-VTH_P)*RFDMY) 
;   pmoscap_rf18    RF 1.8V PMOSCAP Varactor     ((PVARGT*DNW*OD18-OD25-OD33-VTH_P)*RFDMY) 
;   pmoscap_rf25    RF 2.5V PMOSCAP Varactor     ((PVARGT*DNW-OD18*OD25-OD33)*RFDMY) 
;   rppolyl_rf     RF P+Poly resistor w/i Silicide >=2 3T (RPDMYi*PO*PP-RPO*RFDMY*NW) 
;   rppolys_rf     RF P+Poly resistor w/i Silicide <2 3T  (RPDMYi*PO*PP-RPO*RFDMY*NW) 
;   rppolywo_rf    RF P+Poly resistor w/o Silicide 3T     (RPDMYi*PO*PP*RPO*RH*RFDMY*NW)  
; 
;   nmos_rf              CORE RF NMOS                        ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N-ILVT)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_nodnw        CORE RF NMOS w/o DNW                ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N-ILVT)-DNW*RFDMY) 
;   nmos_rf_18           1.8V RF NMOS                        ((NGATE*OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_18_nodnw     1.8V RF NMOS w/o DNW                ((NGATE*OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N)-DNW*RFDMY) 
;   nmos_rf_na18         1.8V RF Native NMOS                 ((NGATE*OD18-OD25-OD33*NT_Ni-VTH_N-VTL_N)-DNW*RFDMY-RFDMY6T) 
;   nmos_rf_25           2.5V RF NMOS                        ((NGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_25_nodnw     2.5V RF NMOS w/o DNW                ((NGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_N-VTL_N)-DNW*RFDMY) 
;   nmos_rf_25od         2.5V RF NMOS over_drive 3.3V            ((NGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_25_nodnwod   2.5V RF NMOS over_drive 3.3V w/o DNW    ((NGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_N-VTL_N)-DNW*RFDMY) 
;   nmos_rf_25ud         2.5V RF NMOS under_drive 1.8V           ((NGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_25_nodnwud   2.5V RF NMOS under_drive 1.8V w/o DNW   ((NGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_N-VTL_N)-DNW*RFDMY) 
;   nmos_rf_33           3.3V RF NMOS                     ((NGATE-OD18-OD25*OD33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_33_nodnw     3.3V RF NMOS w/o DNW             ((NGATE-OD18-OD25*OD33-NT_Ni-VTH_N-VTL_N)-DNW*RFDMY) 
;   nmos_rf_hvt          HVT RF NMOS                      ((NGATE-OD18-OD25-OD33-NT_Ni*VTH_N-VTL_N)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_hvt_nodnw    HVT RF NMOS w/o DNW              ((NGATE-OD18-OD25-OD33-NT_Ni*VTH_N-VTL_N)-DNW*RFDMY) 
;   nmos_rf_lvt          LVT RF NMOS                      ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N*VTL_N-ILVT)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_lvt_nodnw    LVT RF NMOS w/o DNW              ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N*VTL_N-ILVT)-DNW*RFDMY) 
;   nmos_rf_6t     	6T CORE RF NMOS                  ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N-ILVT)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_18_6t  	6T 1.8V RF NMOS                  ((NGATE*OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_25_6t  	6T 2.5V RF NMOS                  ((NGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_25od33_6t	6T 2.5V RF NMOS over-drive 3.3V  ((NGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_25ud18_6t 	6T 2.5V RF NMOS under-drive 1.8V ((NGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_33_6t	6T 3.3V RF NMOS                  ((NGATE-OD18-OD25*OD33-NT_Ni-VTH_N-VTL_N)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_hvt_6t     	6T HVT RF NMOS                   ((NGATE-OD18-OD25-OD33-NT_Ni*VTH_N-VTL_N)*DNW*RFDMY*RFDMY6T)  
;   nmos_rf_lvt_6t 	6T LVT RF NMOS                   ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N*VTL_N-ILVT)*DNW*RFDMY*RFDMY6T)  
;  
;   nmos_rf_mlvt        ILVT RF NMOS                   ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N*ILVT)*DNW*RFDMY-RFDMY6T) 
;   nmos_rf_mlvt_nodnw  ILVT RF NMOS w/o DNW           ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N*ILVT)-DNW*RFDMY) 
;   nmos_rf_mlvt_6t 	6T ILVT RF NMOS               ((NGATE-OD18-OD25-OD33-NT_Ni-VTH_N-VTL_N*ILVT)*DNW*RFDMY*RFDMY6T) 
; 
;   pmos_rf              CORE RF PMOS                        ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P-ILVT)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_nw           CORE RF PMOS w/o DNW                ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P-ILVT)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_18           1.8V RF PMOS                        ((PGATE*OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_18_nw        1.8V RF PMOS w/o DNW                ((PGATE*OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_25           2.5V RF PMOS                        ((PGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_25_nw        2.5V RF PMOS w/o DNW                ((PGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_25od         2.5V RF PMOS over_drive 3.3V        ((PGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_25_nwod      2.5V RF PMOS over_drive 3.3V w/o DNW   ((PGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_25ud         2.5V RF PMOS under_drive 1.8V          ((PGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_25_nwud      2.5V RF PMOS under_drive 1.8V w/o DNW  ((PGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_33           3.3V RF PMOS                     ((PGATE-OD18-OD25*OD33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_33_nw        3.3V RF PMOS w/o DNW             ((PGATE-OD18-OD25*OD33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_hvt          HVT RF PMOS                      ((PGATE-OD18-OD25-OD33-NT_Ni*VTH_P-VTL_P)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_hvt_nw       HVT RF PMOS w/o DNW              ((PGATE-OD18-OD25-OD33-NT_Ni*VTH_P-VTL_P)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_lvt          LVT RF PMOS                      ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P*VTL_P-ILVT)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_lvt_nw       LVT RF PMOS w/o DNW              ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P*VTL_P-ILVT)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_5t        	5T CORE RF PMOS                  ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P-ILVT)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_nw_5t 	5T CORE RF PMOS w/o DNW          ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P-ILVT)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_18_5t	5T 1.8V RF PMOS                  ((PGATE*OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_18_nw_5t  	5T 1.8V RF PMOS w/o DNW          ((PGATE*OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_25_5t     	5T 2.5V RF PMOS                  ((PGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_25_nw_5t  	5T 2.5V RF PMOS w/o DNW          ((PGATE-OD18*OD25-OD33-OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_25od33_5t 	5T 2.5V RF PMOS over-drive 3.3V  ((PGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_25od33_nw_5t   5T 2.5V RF PMOS w/o DNW over-drive 3.3V  ((PGATE-OD18*OD25-OD33-OD25_18*OD25_33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_25ud18_5t 	5T 2.5V RF PMOS under-drive 1.8V         ((PGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_25ud18_nw_5t   5T 2.5V RF PMOS w/o DNW under-drive 1.8V ((PGATE-OD18*OD25-OD33*OD25_18-OD25_33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_33_5t     	5T 3.3V RF PMOS                  ((PGATE-OD18-OD25*OD33-NT_Ni-VTH_P-VTL_P)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_33_nw_5t  	5T 3.3V RF PMOS w/o DNW          ((PGATE-OD18-OD25*OD33-NT_Ni-VTH_P-VTL_P)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_hvt_5t     	5T HVT RF PMOS                   ((PGATE-OD18-OD25-OD33-NT_Ni*VTH_P-VTL_P)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_hvt_nw_5t  	5T HVT RF PMOS w/o DNW           ((PGATE-OD18-OD25-OD33-NT_Ni*VTH_P-VTL_P)-DNW*RFDMY*RFDMY5T)  
;   pmos_rf_lvt_5t     	5T LVT RF PMOS                   ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P*VTL_P-ILVT)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_lvt_nw_5t  	5T LVT RF PMOS w/o DNW           ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P*VTL_P-ILVT)-DNW*RFDMY*RFDMY5T)  
; 
;   pmos_rf_mlvt         ILVT RF PMOS                   ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P*ILVT)*DNW*RFDMY-RFDMY5T) 
;   pmos_rf_mlvt_nw      ILVT RF PMOS w/o DNW           ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P*ILVT)-DNW*RFDMY-RFDMY5T) 
;   pmos_rf_mlvt_5t     	5T ILVT RF PMOS                ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P*ILVT)*DNW*RFDMY*RFDMY5T)  
;   pmos_rf_mlvt_nw_5t  	5T ILVT RF PMOS w/o DNW        ((PGATE-OD18-OD25-OD33-NT_Ni-VTH_P-VTL_P*ILVT)-DNW*RFDMY*RFDMY5T) 
;   xjvar                XJ varactor                     (VAR*RFDMY*NW*DNW*NP*PP*OD)      
;   xjvar_nw             XJ varactor w/o DNW             (VAR*RFDMY*NW-DNW*NP*PP*OD)      
;   ndio_hia_rf	        RF high-current ESD N+/PW DIODE ((DIODMY*OD*NP-OD25-OD33-OD18*PSUB-OD1T-DCO)*RFDMY*HIADMY) 
;   pdio_hia_rf	        RF high-current ESD P+/NW DIODE ((DIODMY*OD*PP-OD25-OD33-OD18*NW-OD1T-DCO)*RFDMY*HIADMY) 
;   sbd_rf         	RF Schottky Barrier Diode w/i DNW (NW*ODI*SBDDMY*RFDMY-VAR*PP*NP*DNW)  
;   sbd_rf_nw            RF Schottky Barrier Diode w/o DNW (NW*ODI*SBDDMY*RFDMY-VAR*PP*NP-DNW)  
; 
;   probe1               Probe M1                        (M1*PROBEM1) 
;   probe2               Probe M2                        (M2*PROBEM2) 
;   probe3               Probe M3                        (M3*PROBEM3) 
;   probe4               Probe M4                        (M4*PROBEM4) 
;   probe5               Probe M5                        (M5*PROBEM5) 
;   probe6               Probe M6                        (M6*PROBEM6) 
;   probe7               Probe M7                        (M7*PROBEM7) 
;    mimcap_um_sin_rf     RF mimcap w/i shield      (ctm*cbm*shield*M8*RFDMYall) 
;    mimcap_woum_sin_rf	 RF mimcap w/o shield      (ctm*cbm-shield*M8*RFDMY) 
; 
; 
;    mimcap_sin		 mimcap 2T      	   (ctm*cbm-RFDMY-MIM_3TDMY) 
;    mimcap_sin_3t	 mimcap 3T		   (ctm*cbm-RFDMYall*MIM_3TDMY) 
; 
;    crtmom               crtmom                    ((PO*MOMDMY0*M1*MOMDMY1*M2*MOMDMY2*M3*MOMDMY3)-RFDMY-MOMDMY22)  
;    crtmom_rf            RF crtmom		   ((PO*MOMDMY0*M1*MOMDMY1*M2*MOMDMY2*M3*MOMDMY3)*RFDMY-MOMDMY22) 
;    crtmom_mx            cross crtmom              ((PO*MOMDMY0*M1*MOMDMY1*M2*MOMDMY2*M3*MOMDMY3)*MOMDMY22) 
; 
;    lincap              Linear Cap            	    (NGATE-OD18-OD25-OD33*VTDN-RFDMY*DNW*NW) 
;    lincap_25		2.5V Linear Cap 	    (NGATE-OD18*OD25-OD33*VTDN-RFDMY*DNW*NW) 
;    lincap_rf		RF Linear Cap		    (NGATE-OD18-OD25-OD33*VTDN*RFDMY*DNW*NW) 
;    lincap_rf_25	RF 2.5V Linear Cap	    (NGATE-OD18*OD25-OD33*VTDN*RFDMY*DNW*NW) 
; 
;    spiral_std_mu_z      Standard inductor         (M9*M8*IND_STD*IND_RAD*IND_NR) 
;    spiral_sym_mu_z      Symmetric inductor        (M9*M8*IND_SYM*IND_RAD*IND_NR) 
;    spiral_sym_ct_mu_z   Centro-tap inductor       (M9*M8*M7*IND_CT*IND_RAD*IND_NR) 
;     
;    lowcpad_d0		RF Low-C PAD density 0-15%    (M9*M8*VIA8i*AP*CB*CB2*PO*PP*RFPADDMY*RFPADDMY1)		 
;    lowcpad_d15		RF Low-C PAD density 15-23%   (M9*M8*VIA8i*AP*CB*CB2*PO*PP*RFPADDMY*RFPADDMY2)		 
;    lowcpad_d23		RF Low-C PAD density over 23% (M9*M8*VIA8i*AP*CB*CB2*PO*PP*RFPADDMY*RFPADDMY3)		   
; 
; 
; 
; 
;   ----- ----------------------------- ---------------------------------- 
;   * PO = POI + DPO 
;   * OD = ODI + DOD 
;   * NGATE = ODI * POI * NP - NW  
;   * PGATE = ODI * POI * PP * NW 
;   * VARGT = ODI * POI * NP * NW * VAR 
;   * PVARGT = ODI * POI * PP * VAR 
;   * PSUB  = BULK 
;   * shield = M6 + M5 
;   * RFDMYall = RFDMY + RFDMYUD 
;////////////////////////////////////////////////////////////////////////////// 
; 
; USER NOTES : 
; 
; 0) Please read file "README" in the package and "DECK_USAGE" document in folder "TSMC_DOC_WM" to find out switch usage and LVS/LPE flow steps of N65 process. 
;  
; 1) The MAC devices must covered by MAC layer ( 208;1 ). 
; 
; 2) mnpg, mppg, ppvdd49, npvss49, floating wells are obtained in ERC rules, you can run LVS to get this information. 
; 
; 3) Default setting for property check is 0%. Users should check with 
;    IP/Designe providers for proper tolerance. 
; 
; 4) Thin oxide layers PDIFF (7;0) and NDIFF (8;0) are not recommended to be 
;    used as tape out layers. Please use OD (6:0) for thin oxide tape out layers. 
;    If PDIFF (7;0) and NDIFF (8;0) layers are used, be sure to check MT (tape out) 
;    form for correctness after modifying this LVS deck (to pass LVS check) 
; 
; 5) This lvs command file does not support four resistors "rrwod,rrwsti,rdnwod,rdnwsti". 
;    Spice model defines them just for providing the sheet resistance of RWELL 
;    and DNW, not for the purpose of forming devices. We can not guarantee the resistance 
;    value if these four devices are applied in customer's design. 
; 
; 6) By default, the two diodes, PWDNW and DNWPSUB, are not extracted in this command  
;     file.  Please turn on the switch, "extract_dnwdio" , 
;     to apply the extraction of these two diode. 
; 
; 7) For LP process, the layer LVID(17,type(51) has respectively been "OR" with VTL_P and VTL_N. 
;  
; 8) There are three variable files in DFM catalog,constant_g.txt, constant_g+.txt, and constant_lp.txt. Please    select a correctly process file and change file name as "constant.txt".   
;    For example, if customer use G+ process, please rename constant_g+.txt as constant.txt.        
;  
; 9) Please fill in full DFM path in extract.rul if DFM files are not located in current run directory.  
;  load( "./DFM/constant.txt" ) 	         ; please fill in full DFM path 
;  load( "./DFM/dfm_device.rul.1" )	 ; please fill in full DFM path 
; 
; 10) For more accuracy, We suggest customer to turn-on switch "DFM_LPE" to run LPE extraction. 
; 
; 11) For 2.5V IO HVD device (such as : nch_hv25_sdnw, nch_hv25_snw, pch_hv25_spw, nch_hv25_sdnw_mac, nch_hv25_snw_mac and pch_hv25_spw)  
;     We use WPE BSIM4.5 equation to calculate sca/scb/scc values. However, the boundary of wells about these devices are not clear from 
;     model team's comment. Hence, these extraction values (sca/scb/scc) are only for reference, it is not very accuracy values. 
;     
; 12) Virtual Coneection Setting: 
;     By default,"?joinPins top" is set for virtual connection. Please set to "nil" in LVS.rsf file as doing full-chip checking. 
;     ?joinPins top  --> ?joinPins nil     
; 
;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
; 
;lvs_gen.pl version: 1.89 
;assura.pl  version: 1.108 
;#########################################################################
;# ENVIRONMENT SETTING                              
;#########################################################################
drcExtractRules( 

scale = 1.0
wped = 5

if( avSwitch("STD_LIB_9_TRACK") then
        PMOS_TOP_EXT   =   0.725
        PMOS_BOTTOM_EXT=   0
        NMOS_TOP_EXT   =   0
        NMOS_BOTTOM_EXT=   0.665
        MOS_LR_EXT     =   5.0
else if( avSwitch("STD_LIB_11_TRACK") then
        PMOS_TOP_EXT   =   0.945
        PMOS_BOTTOM_EXT=   0
        NMOS_TOP_EXT   =   0
        NMOS_BOTTOM_EXT=   0.744
        MOS_LR_EXT     =   5.0
else
        PMOS_TOP_EXT   =   0
        PMOS_BOTTOM_EXT=   0
        NMOS_TOP_EXT   =   0
        NMOS_BOTTOM_EXT=   0
        MOS_LR_EXT     =   0
   )
)

; #############################################
; # MAPPING                                   #
; #############################################
layerDefs( "df2" 
    MAC        = layer( ("LVSDMY" type("dummy1")) )     ; Dummy layer for MAC devices
    DNW        = layer( "DNW" )     ; Deep N-Well
    NW         = layer( "NW" )     ; N-Well
    ODI        = layer( ("OD" type("drawing")) "PDIFF" "NDIFF" )     ; Active area, thin oxide for device, or interconnection
    DOD        = layer( ("OD" type("dummy")) )     ; Dummy OD
    NT_Ni      = layer( "NT_N" )     ;  Native NMOS blocked implant
    VTL_N      = layer( "VTL_N" )     ; CORE Low VT NMOS
    VTL_P      = layer( "VTL_P" )     ; CORE Low VT PMOS
    OD33       = layer( "OD_33" )     ; Thick Oxide (dual gate oxide) for 3.3V device
    OD18       = layer( "OD_18" )     ; FOR 1.8V device 
    POI        = layer( ("PO" type("drawing")) )     ; Gate poly, poly Si
    DPO        = layer( ("PO" type("dummy")) )     ; Dummy poly
    ILVT       = layer( ("PO" type("rule1")) )     ; for LP process ilvt devices
    OD25       = layer( ("OD_25" type("drawing")) )     ; Thick Oxide (dual gate oxide) for 2.5V device
    OD25_33    = layer( ("OD_25" type("ovrdrv")) )     ; 2.5V device over_drive 3.3V
    OD25_18    = layer( ("OD_25" type("udrdrv")) )     ; 2.5V device under_drive 1.8V
    crown      = layer( "CROWN" )     ;
    p3         = layer( "P3" )     ;
    OD1T       = layer( "OD1T" )     ;
    CAP1TDMY   = layer( "CAP1TDMY" )     ;
    blc        = layer( "SNCT" )     ;
    PP         = layer( "PP" )     ; P+ S/D Implant
    NP         = layer( "NP" )     ; N+ S/D Implant
    RPO        = layer( "RPO" )     ; Non silicided area definition
    CO         = layer( "CO" )     ; Contact Window
    M1         = layer( ("M1" type("drawing")) )     ; Metal1
    DUM1       = layer( ("M1" type("dummy")) )     ; dummy Metal1 for X metal
    M2         = layer( ("M2" type("drawing")) )     ; Metal2
    DUM2       = layer( ("M2" type("dummy")) )     ; dummy Metal2 for X metal
    M3         = layer( ("M3" type("drawing")) )     ; Metal3
    DUM3       = layer( ("M3" type("dummy")) )     ; dummy Metal3 for X metal
    M4         = layer( ("M4" type("drawing")) )     ; Metal4
    DUM4       = layer( ("M4" type("dummy")) )     ; dummy Metal4 for X metal
    M5         = layer( ("M5" type("drawing")) )     ; Metal5
    DUM5       = layer( ("M5" type("dummy")) )     ; dummy Metal5 for X metal
    M6         = layer( ("M6" type("drawing")) )     ; Metal6
    DUM6       = layer( ("M6" type("dummy")) )     ; dummy Metal6 for X,Y metal
    M7         = layer( ("M7" type("drawing")) )     ; Metal7 
    DUM7       = layer( ("M7" type("dummy")) )     ; dummy Metal7 for XY metal
    M8         = layer( ("M8" type("drawing")) )     ; Metal8
    DUM8       = layer( ("M8" type("dummy")) )     ; dummy Metal8 for XYRZ metal
    M9         = layer( ("M9" type("drawing")) )     ; Metal9
    DUM9       = layer( ("M9" type("dummy")) )     ; dummy Metal9 for XYZRU metal
    SRM        = layer( ("SRM" type("drawing")) )     ; Use"SRM" to cover SRAM cell array to generate VTN_CELL mask.
    SRM10      = layer( ("SRM" type("test0")) )     ; Use"SRM10" to cover LP process SRAM UHD cell array N65LP & N55LP SRAM only.
    SRM11      = layer( ("SRM" type("test1")) )     ; Use"SRM11" to cover LP process SRAM HC cell array N65LP SRAM only.
    SRM12      = layer( ("SRM" type("test2")) )     ; Use"SRM12" to cover SRAM DP 0.974 cell array.
    SRM13      = layer( ("SRM" type("test3")) )     ; Use"SRM13" to cover SRAM DPHC 0.15 cell array.
    SRM14      = layer( ("SRM" type("test4")) )     ; Use"SRM14" to cover SRAM TP 0.1158 cell array.
    SRM15      = layer( ("SRM" type("test5")) )     ; Use"SRM15" to cover LP process SRAM HVT N65&N55 0.832 cell array.
    SRM16      = layer( ("SRM" type("test6")) )     ; Use"SRM16" to cover LP process SRAM HVT N65 0.909 & N55 0.928 cell array.
    SRM17      = layer( ("SRM" type("test7")) )     ; Use"SRM17" to cover SRAM ULP cell array.
    VIA1i      = layer( "VIA1" )     ; Via12
    VIA2i      = layer( "VIA2" )     ; Via23
    VIA3i      = layer( "VIA3" )     ; Via34
    VIA4i      = layer( "VIA4" )     ; Via45
    VIA5i      = layer( "VIA5" )     ; Via56
    VIA6i      = layer( "VIA6" )     ; Via67
    VIA7i      = layer( ("VIA7" type("drawing")) )     ; Via78
    VIA8i      = layer( ("VIA8" type("drawing")) )     ; Via89
    VTH_N      = layer( "VTH_N" )     ; CORE High VT DEVICE
    VTH_P      = layer( "VTH_P" )     ; CORE High VT DEVICE
    VAR        = layer( "VAR" )     ; layer to form Varactor
    SBDDMY     = layer( ("SBDDMY" type("drawing")) )     ; Dummy layer for schottky barrier diode RF device
    RH         = layer( "RH" )     ; layer to form diffusion and poly resistor
    ESD3       = layer( "ESD3" )     ; Cover high voltage IO designed by 3.3V NMOS
    CBD        = layer( "CBD" )     ; FOR AL RDL using
    CB         = layer( "CB" )     ; Passivation opening for Bond Pad   
    CB2        = layer( "CB2" )     ; Passivation-2 opening for Bond Pad	
    AP         = layer( ("AP" type("drawing")) )     ; AL RDL
    DAP        = layer( ("AP" type("dummy")) )     ; Dummay layer for AL RDL
    RV         = layer( "RV" )     ; FOR AL RDL using
    VTUL_N     = layer( "VTUL_N" )     ; CORE ULTRA LOW VT DEVICE
    VTUL_P     = layer( "VTUL_P" )     ; CORE ULTRA LOW VT DEVICE
    HVD_N      = layer( ("HVD" type("n_a")) )     ; HVNMOS for DNW approach
    HVD_P      = layer( ("HVD" type("p_a")) )     ; HVPMOS
    HVD_NW     = layer( ("HVD" type("n_b")) )     ; HVNMOS for NW approach
    UHVT_N     = layer( "UHVT_N" )     ; CORE ULTRA High VT DEVICE
    UHVT_P     = layer( "UHVT_P" )     ; CORE ULTRA Higt VT DEVICE
    RODMY      = layer( "RODMY" )     ; dummy layer for LVS to exclude OD area
    BJTDMY     = layer( ("BJTDMY" type("drawing")) )     ; BJT dummy layer for LVS
    BJTDMY1    = layer( ("BJTDMY" type("drawing1")) )     ; Small BJT dummy layer for LVS
    PSUB2      = layer( "PSUB2" )     ; dummy layer for isolation power domains of PW
    NWDMYi     = layer( ("NWDMY" type("drawing")) )     ; dummy layer to form N-Well resistor
    NWDMY1     = layer( ("NWDMY" type("lvs")) )     ; dummy layer to form N-Well 3 terminals resistor
    RPDMYi     = layer( ("RPDMY" type("drawing")) )     ; dummy layer to form OD/POLY resistor (2-Terminals resistor)
    RPDMY1     = layer( ("RPDMY" type("lvs")) )     ; dummy layer to form OD/POLY resistor (3-Terminals resistor)
    DIODMY     = layer( "DIODMY" )     ; dummy layer to form diode
    MOMDMY0    = layer( ("MOMDMY" type("drawing")) )     ; dummy layer for MOM devices metal0
    MOMDMY1    = layer( ("MOMDMY" type("drawing1")) )     ; dummy layer for MOM devices metal1
    MOMDMY2    = layer( ("MOMDMY" type("drawing2")) )     ; dummy layer for MOM devices metal2
    MOMDMY3    = layer( ("MOMDMY" type("drawing3")) )     ; dummy layer for MOM devices metal3
    MOMDMY4    = layer( ("MOMDMY" type("drawing4")) )     ; dummy layer for MOM devices metal4
    MOMDMY5    = layer( ("MOMDMY" type("drawing5")) )     ; dummy layer for MOM devices metal5
    MOMDMY6    = layer( ("MOMDMY" type("drawing6")) )     ; dummy layer for MOM devices metal6
    MOMDMY7    = layer( ("MOMDMY" type("drawing7")) )     ; dummy layer for MOM devices metal7
    MOMDMY21   = layer( ("MOMDMY" type("dummy2")) )     ; dummy layer for dummy OD under MOM devices
    MOMDMY22   = layer( ("MOMDMY" type("dummy3")) )     ; dummy layer for crtmom_mx
    MOMDMY23   = layer( ("MOMDMY" type("dummy4")) )     ; dummy layer for crtmom_mx pin1 
    MOMDMY24   = layer( ("MOMDMY" type("dummy5")) )     ; dummy layer for crtmom_mx pin2
    MOMDMY25   = layer( ("MOMDMY" type("dummy6")) )     ; dummy layer for crtmom_mx plus1 & plus2
    RFDMY      = layer( "RFDMY" )     ; For RF Device using only ( some layout using datatype 1 )
    RFDMY5T    = layer( ("RFDMY" type("drawing3")) )     ; For RF_5T Device using only
    RFDMY6T    = layer( ("RFDMY" type("drawing4")) )     ; For RF_6T Device using only
    RFDMYUD    = layer( ("RFDMY" type("drawing1")) )     ; New 2T baseband MIMCAP with CTMDMYUD replace original CTMMDY allow devices put under mimcap 
    RMDMY1     = layer( ("RMDMY" type("drawing1")) )     ; dummy layer to form METAL-1 resistor
    RMDMY2     = layer( ("RMDMY" type("drawing2")) )     ; dummy layer to form METAL-2 resistor
    RMDMY3     = layer( ("RMDMY" type("drawing3")) )     ; dummy layer to form METAL-3 resistor
    RMDMY4     = layer( ("RMDMY" type("drawing4")) )     ; dummy layer to form METAL-4 resistor
    RMDMY5     = layer( ("RMDMY" type("drawing5")) )     ; dummy layer to form METAL-5 resistor
    RMDMY6     = layer( ("RMDMY" type("drawing6")) )     ; dummy layer to form METAL-6 resistor
    RMDMY7     = layer( ("RMDMY" type("drawing7")) )     ; dummy layer to form METAL-7 resistor
    RMDMY8     = layer( ("RMDMY" type("drawing8")) )     ; dummy layer to form METAL-8 resistor
    RMDMY9     = layer( ("RMDMY" type("drawing9")) )     ; dummy layer to form METAL-9 resistor
    RMDMYAP    = layer( ("RMDMY" type("drawingh")) )     ; dummy layer to form AP resistor
    SRAMPSGT   = layer( ("SRAMDMY" type("passgate")) )     ; FOR SRAM NMOS passgate
    SRAMCVSS   = layer( ("SRAMDMY" type("cvss_sram")) )     ; FOR CVSS SRAM
    SRAMTIMER  = layer( ("SRAMDMY" type("timer")) )     ; FOR SRAM timer
    IND_STD    = layer( ("INDDMY" type("drawing")) )     ; For RF Inductor device standard
    IND_SYM    = layer( ("INDDMY" type("drawing1")) )     ; For RF Inductor device symmetric
    IND_CT     = layer( ("INDDMY" type("drawing2")) )     ; For RF Inductor device center-tap
    IND_STD_MUA = layer( ("INDDMY" type("drawing6")) )     ; For RF Inductor device std_mu_a 
    IND_SYM_MUA = layer( ("INDDMY" type("drawing7")) )     ; For RF Inductor device sym_mu_a
    IND_CT_MUA = layer( ("INDDMY" type("drawing8")) )     ; For RF Inductor device ct_mu_a
    IND_STD_MZAA = layer( ("INDDMY" type("drawing9")) )     ; For RF Inductor device std_mza_a 
    IND_SYM_MZAA = layer( ("INDDMY" type("drawinga")) )     ; For RF Inductor device sym_mza_a
    IND_CT_MZAA = layer( ("INDDMY" type("drawingb")) )     ; For RF Inductor device ct_mza_a
    IND_RAD    = layer( ("INDDMY" type("rad")) )     ; For RF Inductor devices radious
    IND_GDIS   = layer( ("INDDMY" type("dummy1")) )     ; For RF Inductor devices guardring distance
    IND_NR     = layer( ("INDDMY" type("dummy2")) )     ; For RF Inductor devices nr 
    IND_MP     = layer( ("INDDMY" type("dummy3")) )     ; For RF Inductor devices mimus pin 
    IND_D4     = layer( ("INDDMY" type("dummy4")) )     ; For RF Inductor devices CTAP pin 
    IND_S      = layer( ("INDDMY" type("dummy5")) )     ; For RF Inductor devices spacing 
    DRAIN      = layer( ("OD" type("drain")) )     ; For RF MOS drain side using only
    ctm        = layer( "CTM" )     ; For MIM device
    cbm        = layer( "CBM" )     ; For MIM device
    CAP1P5     = layer( ("CTMDMY" type("dummy1")) )     ; For MIM device cap unit 1.5f
    CAP2P0     = layer( ("CTMDMY" type("dummy2")) )     ; For MIM device cap unit 2.0f
    CAP1P0     = layer( ("CTMDMY" type("dummy3")) )     ; For MIM device cap unit 1.0f
    MIM_3TDMY  = layer( ("CTMDMY" type("MIM3T")) )     ; For MIM 3T device 
    CTMDMYUD   = layer( ("CTMDMY" type("drawing1")) )     ; New 2T baseband MIMCAP with CTMDMYUD replace original CTMMDY allow devices put under mimcap 
    PROBEM1    = layer( ("M1" type("prob")) )     ; M1 probe
    PROBEM2    = layer( ("M2" type("prob")) )     ; M2 probe
    PROBEM3    = layer( ("M3" type("prob")) )     ; M3 probe
    PROBEM4    = layer( ("M4" type("prob")) )     ; M4 probe
    PROBEM5    = layer( ("M5" type("prob")) )     ; M5 probe
    PROBEM6    = layer( ("M6" type("prob")) )     ; M6 probe
    PROBEM7    = layer( ("M7" type("prob")) )     ; M7 probe
    PROBEAP    = layer( ("AP" type("prob")) )     ; AP probe
    DCO        = layer( ("DCO" type("drawing")) )     ; For LPG devices
    TCDDMY     = layer( ("CDUDMY" type("dummy1")) )     ; Dummy layer to cover CPU pattern for TCD purpose
    VTDN       = layer( ("VTDN" type("drawing")) )     ; For Linear Cap devices
    RFPADDMY   = layer( ("RFPADDMY" type("drawing")) )     ; For Gplus RFPAD devices
    RFPADDMY1  = layer( ("RFPADDMY" type("drawing1")) )     ; For Gplus RFPAD devices for density 0-15%
    RFPADDMY2  = layer( ("RFPADDMY" type("drawing2")) )     ; For Gplus RFPAD devices for density 15-23%
    RFPADDMY3  = layer( ("RFPADDMY" type("drawing3")) )     ; For Gplus RFPAD devices for density over 23%
    HIADMY     = layer( ("HIA_DUMMY" type("drawing")) )     ; For RF high-current esd diodes dummy layer,must be covered by RFDMY
  ; text layer for recognition
  ; define no port text layer
  ; define text layer 
    metal1_text  = textToPin( "M1" type("pin")) 
    metal10_text  = textToPin( "AP" type("pin")) 
    metal2_text  = textToPin( "M2" type("pin")) 
    metal3_text  = textToPin( "M3" type("pin")) 
    metal4_text  = textToPin( "M4" type("pin")) 
    metal5_text  = textToPin( "M5" type("pin")) 
    metal6_text  = textToPin( "M6" type("pin")) 
    metal7_text  = textToPin( "M7" type("pin")) 
    metal8_text  = textToPin( "M8" type("pin")) 
    metal9_text  = textToPin( "M9" type("pin")) 
    metal1_ptext  = pinText( "M1" )
    metal10_ptext  = pinText( "AP" )
    metal2_ptext  = pinText( "M2" )
    metal3_ptext  = pinText( "M3" )
    metal4_ptext  = pinText( "M4" )
    metal5_ptext  = pinText( "M5" )
    metal6_ptext  = pinText( "M6" )
    metal7_ptext  = pinText( "M7" )
    metal8_ptext  = pinText( "M8" )
    metal9_ptext  = pinText( "M9" )
); end df2 layerDefs 


layerDefs( "gds2" 
    MAC        = layer(  208 type(  1) )     ; Dummy layer for MAC devices
    DNW        = layer(    1 )     ; Deep N-Well
    NW         = layer(    3 )     ; N-Well
    ODI        = layer( (    6 type(  0 2 4:255))    7    8 )     ; Active area, thin oxide for device, or interconnection
    DOD        = layer(    6 type(  1) )     ; Dummy OD
    NT_Ni      = layer(   11 )     ;  Native NMOS blocked implant
    VTL_N      = layer(   12 )     ; CORE Low VT NMOS
    VTL_P      = layer(   13 )     ; CORE Low VT PMOS
    OD33       = layer(   15 )     ; Thick Oxide (dual gate oxide) for 3.3V device
    OD18       = layer(   16 )     ; FOR 1.8V device 
    POI        = layer( (   17 type(  0 2:50 52:255)) )     ; Gate poly, poly Si
    DPO        = layer(   17 type(  1) )     ; Dummy poly
    ILVT       = layer(   17 type( 51) )     ; for LP process ilvt devices
    OD25       = layer(   18 type(  0) )     ; Thick Oxide (dual gate oxide) for 2.5V device
    OD25_33    = layer(   18 type(  3) )     ; 2.5V device over_drive 3.3V
    OD25_18    = layer(   18 type(  4) )     ; 2.5V device under_drive 1.8V
    crown      = layer(  102 )     ;
    p3         = layer(  103 )     ;
    OD1T       = layer(   27 )     ;
    CAP1TDMY   = layer(   78 )     ;
    blc        = layer(  101 )     ;
    PP         = layer(   25 )     ; P+ S/D Implant
    NP         = layer(   26 )     ; N+ S/D Implant
    RPO        = layer(   29 )     ; Non silicided area definition
    CO         = layer(   30 )     ; Contact Window
    M1         = layer( (   31 type(  0 2:255)) )     ; Metal1
    DUM1       = layer(   31 type(  1) )     ; dummy Metal1 for X metal
    M2         = layer( (   32 type(  0 2:255)) )     ; Metal2
    DUM2       = layer(   32 type(  1) )     ; dummy Metal2 for X metal
    M3         = layer( (   33 type(  0 2:255)) )     ; Metal3
    DUM3       = layer(   33 type(  1) )     ; dummy Metal3 for X metal
    M4         = layer( (   34 type(  0 2:255)) )     ; Metal4
    DUM4       = layer(   34 type(  1) )     ; dummy Metal4 for X metal
    M5         = layer( (   35 type(  0 2:255)) )     ; Metal5
    DUM5       = layer(   35 type(  1) )     ; dummy Metal5 for X metal
    M6         = layer( (   36 type(  0 2:20 22:255)) )     ; Metal6
    DUM6       = layer(   36 type(  1)   36 type( 21) )     ; dummy Metal6 for X,Y metal
    M7         = layer( (   37 type(  0 2:20 22:255)) )     ; Metal7 
    DUM7       = layer(   37 type(  1)   37 type( 21) )     ; dummy Metal7 for XY metal
    M8         = layer( (   38 type(  0 2:20 22:40 42:80 82:255)) )     ; Metal8
    DUM8       = layer(   38 type(  1)   38 type( 21)   38 type( 41)   38 type( 81) )     ; dummy Metal8 for XYRZ metal
    M9         = layer( (   39 type(  0 2:20 22:40 42:60 62:80 82:255)) )     ; Metal9
    DUM9       = layer(   39 type(  1)   39 type( 21)   39 type( 41)   39 type( 61)   39 type( 81) )     ; dummy Metal9 for XYZRU metal
    SRM        = layer(   50 type(  0) )     ; Use"SRM" to cover SRAM cell array to generate VTN_CELL mask.
    SRM10      = layer(   50 type( 10) )     ; Use"SRM10" to cover LP process SRAM UHD cell array N65LP & N55LP SRAM only.
    SRM11      = layer(   50 type( 11) )     ; Use"SRM11" to cover LP process SRAM HC cell array N65LP SRAM only.
    SRM12      = layer(   50 type( 12) )     ; Use"SRM12" to cover SRAM DP 0.974 cell array.
    SRM13      = layer(   50 type( 13) )     ; Use"SRM13" to cover SRAM DPHC 0.15 cell array.
    SRM14      = layer(   50 type( 14) )     ; Use"SRM14" to cover SRAM TP 0.1158 cell array.
    SRM15      = layer(   50 type( 15) )     ; Use"SRM15" to cover LP process SRAM HVT N65&N55 0.832 cell array.
    SRM16      = layer(   50 type( 16) )     ; Use"SRM16" to cover LP process SRAM HVT N65 0.909 & N55 0.928 cell array.
    SRM17      = layer(   50 type( 17) )     ; Use"SRM17" to cover SRAM ULP cell array.
    VIA1i      = layer(   51 )     ; Via12
    VIA2i      = layer(   52 )     ; Via23
    VIA3i      = layer(   53 )     ; Via34
    VIA4i      = layer(   54 )     ; Via45
    VIA5i      = layer(   55 )     ; Via56
    VIA6i      = layer(   56 )     ; Via67
    VIA7i      = layer(   57 )     ; Via78
    VIA8i      = layer(   58 )     ; Via89
    VTH_N      = layer(   67 )     ; CORE High VT DEVICE
    VTH_P      = layer(   68 )     ; CORE High VT DEVICE
    VAR        = layer(  143 )     ; layer to form Varactor
    SBDDMY     = layer(  113 type(  0) )     ; Dummy layer for schottky barrier diode RF device
    RH         = layer(  117 )     ; layer to form diffusion and poly resistor
    ESD3       = layer(  147 )     ; Cover high voltage IO designed by 3.3V NMOS
    CBD        = layer(  169 )     ; FOR AL RDL using
    CB         = layer(   76 )     ; Passivation opening for Bond Pad   
    CB2        = layer(   86 )     ; Passivation-2 opening for Bond Pad	
    AP         = layer(   74 type(  0) )     ; AL RDL
    DAP        = layer(   74 type(  1) )     ; Dummay layer for AL RDL
    RV         = layer(   85 )     ; FOR AL RDL using
    VTUL_N     = layer(  151 )     ; CORE ULTRA LOW VT DEVICE
    VTUL_P     = layer(  152 )     ; CORE ULTRA LOW VT DEVICE
    HVD_N      = layer(   91 type(  1) )     ; HVNMOS for DNW approach
    HVD_P      = layer(   91 type(  2) )     ; HVPMOS
    HVD_NW     = layer(   91 type(  3) )     ; HVNMOS for NW approach
    UHVT_N     = layer(   93 )     ; CORE ULTRA High VT DEVICE
    UHVT_P     = layer(   94 )     ; CORE ULTRA Higt VT DEVICE
    RODMY      = layer(   49 )     ; dummy layer for LVS to exclude OD area
    BJTDMY     = layer(  110 type(  0) )     ; BJT dummy layer for LVS
    BJTDMY1    = layer(  110 type(  1) )     ; Small BJT dummy layer for LVS
    PSUB2      = layer(  111 )     ; dummy layer for isolation power domains of PW
    NWDMYi     = layer(  114 type(  0) )     ; dummy layer to form N-Well resistor
    NWDMY1     = layer(  114 type(  1) )     ; dummy layer to form N-Well 3 terminals resistor
    RPDMYi     = layer(  115 type(  0) )     ; dummy layer to form OD/POLY resistor (2-Terminals resistor)
    RPDMY1     = layer(  115 type(  1) )     ; dummy layer to form OD/POLY resistor (3-Terminals resistor)
    DIODMY     = layer(  119 )     ; dummy layer to form diode
    MOMDMY0    = layer(  155 type(  0) )     ; dummy layer for MOM devices metal0
    MOMDMY1    = layer(  155 type(  1) )     ; dummy layer for MOM devices metal1
    MOMDMY2    = layer(  155 type(  2) )     ; dummy layer for MOM devices metal2
    MOMDMY3    = layer(  155 type(  3) )     ; dummy layer for MOM devices metal3
    MOMDMY4    = layer(  155 type(  4) )     ; dummy layer for MOM devices metal4
    MOMDMY5    = layer(  155 type(  5) )     ; dummy layer for MOM devices metal5
    MOMDMY6    = layer(  155 type(  6) )     ; dummy layer for MOM devices metal6
    MOMDMY7    = layer(  155 type(  7) )     ; dummy layer for MOM devices metal7
    MOMDMY21   = layer(  155 type( 21) )     ; dummy layer for dummy OD under MOM devices
    MOMDMY22   = layer(  155 type( 22) )     ; dummy layer for crtmom_mx
    MOMDMY23   = layer(  155 type( 23) )     ; dummy layer for crtmom_mx pin1 
    MOMDMY24   = layer(  155 type( 24) )     ; dummy layer for crtmom_mx pin2
    MOMDMY25   = layer(  155 type( 25) )     ; dummy layer for crtmom_mx plus1 & plus2
    RFDMY      = layer( (  161 type(  0:2 5:9 11:255)) )     ; For RF Device using only ( some layout using datatype 1 )
    RFDMY5T    = layer(  161 type(  3) )     ; For RF_5T Device using only
    RFDMY6T    = layer(  161 type(  4) )     ; For RF_6T Device using only
    RFDMYUD    = layer(  161 type( 10) )     ; New 2T baseband MIMCAP with CTMDMYUD replace original CTMMDY allow devices put under mimcap 
    RMDMY1     = layer(  116 type(  1) )     ; dummy layer to form METAL-1 resistor
    RMDMY2     = layer(  116 type(  2) )     ; dummy layer to form METAL-2 resistor
    RMDMY3     = layer(  116 type(  3) )     ; dummy layer to form METAL-3 resistor
    RMDMY4     = layer(  116 type(  4) )     ; dummy layer to form METAL-4 resistor
    RMDMY5     = layer(  116 type(  5) )     ; dummy layer to form METAL-5 resistor
    RMDMY6     = layer(  116 type(  6) )     ; dummy layer to form METAL-6 resistor
    RMDMY7     = layer(  116 type(  7) )     ; dummy layer to form METAL-7 resistor
    RMDMY8     = layer(  116 type(  8) )     ; dummy layer to form METAL-8 resistor
    RMDMY9     = layer(  116 type(  9) )     ; dummy layer to form METAL-9 resistor
    RMDMYAP    = layer(  116 type( 16) )     ; dummy layer to form AP resistor
    SRAMPSGT   = layer(  186 type(  1) )     ; FOR SRAM NMOS passgate
    SRAMCVSS   = layer(  186 type(  3) )     ; FOR CVSS SRAM
    SRAMTIMER  = layer(  186 type(  6) )     ; FOR SRAM timer
    IND_STD    = layer(  144 type(  0) )     ; For RF Inductor device standard
    IND_SYM    = layer(  144 type(  1) )     ; For RF Inductor device symmetric
    IND_CT     = layer(  144 type(  2) )     ; For RF Inductor device center-tap
    IND_STD_MUA = layer(  144 type(  6) )     ; For RF Inductor device std_mu_a 
    IND_SYM_MUA = layer(  144 type(  7) )     ; For RF Inductor device sym_mu_a
    IND_CT_MUA = layer(  144 type(  8) )     ; For RF Inductor device ct_mu_a
    IND_STD_MZAA = layer(  144 type(  9) )     ; For RF Inductor device std_mza_a 
    IND_SYM_MZAA = layer(  144 type( 10) )     ; For RF Inductor device sym_mza_a
    IND_CT_MZAA = layer(  144 type( 11) )     ; For RF Inductor device ct_mza_a
    IND_RAD    = layer(  144 type( 30) )     ; For RF Inductor devices radious
    IND_GDIS   = layer(  144 type( 31) )     ; For RF Inductor devices guardring distance
    IND_NR     = layer(  144 type( 32) )     ; For RF Inductor devices nr 
    IND_MP     = layer(  144 type( 33) )     ; For RF Inductor devices mimus pin 
    IND_D4     = layer(  144 type( 34) )     ; For RF Inductor devices CTAP pin 
    IND_S      = layer(  144 type( 35) )     ; For RF Inductor devices spacing 
    DRAIN      = layer(    6 type(  3) )     ; For RF MOS drain side using only
    ctm        = layer(   77 )     ; For MIM device
    cbm        = layer(   88 )     ; For MIM device
    CAP1P5     = layer(  148 type(115) )     ; For MIM device cap unit 1.5f
    CAP2P0     = layer(  148 type(120) )     ; For MIM device cap unit 2.0f
    CAP1P0     = layer(  148 type(110) )     ; For MIM device cap unit 1.0f
    MIM_3TDMY  = layer(  148 type( 21) )     ; For MIM 3T device 
    CTMDMYUD   = layer(  148 type( 10) )     ; New 2T baseband MIMCAP with CTMDMYUD replace original CTMMDY allow devices put under mimcap 
    PROBEM1    = layer(   75 type(  1) )     ; M1 probe
    PROBEM2    = layer(   75 type(  2) )     ; M2 probe
    PROBEM3    = layer(   75 type(  3) )     ; M3 probe
    PROBEM4    = layer(   75 type(  4) )     ; M4 probe
    PROBEM5    = layer(   75 type(  5) )     ; M5 probe
    PROBEM6    = layer(   75 type(  6) )     ; M6 probe
    PROBEM7    = layer(   75 type(  7) )     ; M7 probe
    PROBEAP    = layer(   75 type( 16) )     ; AP probe
    DCO        = layer(   90 type(  0) )     ; For LPG devices
    TCDDMY     = layer(  165 type(  1) )     ; Dummy layer to cover CPU pattern for TCD purpose
    VTDN       = layer(   66 type(  0) )     ; For Linear Cap devices
    RFPADDMY   = layer(  129 type(  0) )     ; For Gplus RFPAD devices
    RFPADDMY1  = layer(  129 type(  1) )     ; For Gplus RFPAD devices for density 0-15%
    RFPADDMY2  = layer(  129 type(  2) )     ; For Gplus RFPAD devices for density 15-23%
    RFPADDMY3  = layer(  129 type(  3) )     ; For Gplus RFPAD devices for density over 23%
    HIADMY     = layer(  168 type(  0) )     ; For RF high-current esd diodes dummy layer,must be covered by RFDMY
  ; define no port text layer 
  ; define text layer 
    metal1_text  = textToPin( 131 )
    metal10_text  = textToPin( 126 )
    metal2_text  = textToPin( 132 )
    metal3_text  = textToPin( 133 )
    metal4_text  = textToPin( 134 )
    metal5_text  = textToPin( 135 )
    metal6_text  = textToPin( 136 )
    metal7_text  = textToPin( 137 )
    metal8_text  = textToPin( 138 )
    metal9_text  = textToPin( 139 )
    metal1_ptext  = textToPin( 131 )
    metal10_ptext  = textToPin( 126 )
    metal2_ptext  = textToPin( 132 )
    metal3_ptext  = textToPin( 133 )
    metal4_ptext  = textToPin( 134 )
    metal5_ptext  = textToPin( 135 )
    metal6_ptext  = textToPin( 136 )
    metal7_ptext  = textToPin( 137 )
    metal8_ptext  = textToPin( 138 )
    metal9_ptext  = textToPin( 139 )
); end gds2 layerDefs 
; #############################################
; # LOGIC OPERATION POOL                      #
; #############################################

; Form BULK layer
 BULK1       = geomBkgnd() 
 BULK        = geomSize( BULK1 0.005)

; ***** Define connectivity/via layer -- gate1 ****
rpolywo1 = geomAnd(POI RH)  ;
rpolywo2 = geomAnd(rpolywo1 RPO)  ;
RPDMY = geomOr(RPDMYi RPDMY1)  ;
OD = geomOr(ODI DOD)  ;
rodsrm = geomAnd(RODMY SRM)  ;
diffa1 = geomAndNot(OD rodsrm)  ;
diffa = geomAndNot(diffa1 MOMDMY21)  ;
diff = geomButtOrOver(diffa CO)  ;
rp1 = geomAndNot(RPDMY geomButtOrOver(RPDMY diff))  ;
p1rdum = geomButtOrOver(rp1 POI)  ; poly1 resistor dummy
rpolywo = geomButtOrOver(rpolywo2 p1rdum)  ;
poly1 = geomAndNot(POI rpolywo)  ;
rpoly1 = geomAnd(POI p1rdum)  ;
rpoly = geomAndNot(rpoly1 geomButtOrOver(rpoly1 RPO))  ;
poly21 = geomAndNot(poly1 rpoly)  ;
poly22 = geomOr(poly21 DPO)  ;
poly = geomAndNot(poly22 MOMDMY0)  ;
dumpo1 = geomInside(poly diff)  ;
dumpo2 = geomAndNot(dumpo1 geomButtOrOver(dumpo1 CO))  ;
realpo = geomAndNot(poly dumpo2)  ;
rodwo1 = geomAnd(diff RH)  ;
rodwo2 = geomAnd(rodwo1 RPO)  ;
drdum = geomButtOrOver(RPDMY diff)  ; diff resistor dummy
rodwo3 = geomButtOrOver(rodwo2 drdum)  ;
rodwo = geomButtOrOver(rodwo3 ODI)  ;
mdiff1 = geomAndNot(diff rodwo)  ;
rod1 = geomAnd(diff drdum)  ;
rod2 = geomAndNot(rod1 geomButtOrOver(rod1 RPO))  ;
rod = geomButtOrOver(rod2 ODI)  ;
mdiff = geomAndNot(mdiff1 rod)  ;
gate1 = geomAnd(realpo mdiff)  ;

; ***** Define connectivity/via layer -- d_nd25hvd ****
nthin1 = geomAnd(mdiff NP)  ;
ydio_a = geomAnd(ESD3 OD)  ;
ydio_c = geomSize(ydio_a -0.2)  ;
ydio_d = geomAnd(ydio_c NP)  ;
ydio_e = geomAnd(ydio_d RPO)  ;
ydio_f = geomAndNot(ydio_e NW)  ;
ydio_g = geomAnd(ESD3 POI)  ;
ydio_h = geomSize(ydio_g 0.2)  ;
ydio_i = geomAndNot(ydio_f ydio_h)  ;
ydio_j = geomSize(ydio_i -0.8)  ;
ydio = geomSize(ydio_j 0.6)  ;
nthin = geomAndNot(nthin1 ydio)  ; define N+ thin oxide
tndiffa = geomAndNot(nthin gate1)  ; define N+ diffusion region
diffb = geomAndNot(diffa diff)  ;
ndiffb = geomAnd(diffb NP)  ;
tndiff = geomOr(tndiffa ndiffb)  ;
d_nd25hvd = geomAnd(tndiff HVD_N)  ;

; ***** Define connectivity/via layer -- mom5m2 ****
M5X = geomOr(M5 DUM5)  ;
inddmy1 = geomOr(IND_STD IND_SYM)  ;
inddmy2 = geomOr(inddmy1 IND_CT)  ;
inddmy3 = geomOr(inddmy2 IND_STD_MUA)  ;
inddmy4 = geomOr(inddmy3 IND_SYM_MUA)  ;
INDDMY = geomOr(inddmy4 IND_CT_MUA)  ;
M5Y = geomAndNot(M5X INDDMY)  ;
mt5res1 = geomAnd(M5Y RMDMY5)  ;
mt5res = geomButtOrOver(mt5res1 M5)  ; metal5 resistor
metal5 = geomAndNot(M5Y mt5res)  ; metal5 interconnect
mom5p21 = geomAnd(metal5 MOMDMY24)  ;
mom5m2 = geomAndNot(mom5p21 geomButtOrOver(mom5p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- ydio_ass ****
ydio_ass = geomCat(ydio)  ;

; ***** Define connectivity/via layer -- diff_mom ****
diff_mom = geomAnd(OD MOMDMY21)  ;

; ***** Define connectivity/via layer -- indm9p ****
indm9a = geomSize(INDDMY 0.005)  ;
M9X = geomOr(M9 DUM9)  ;
M9Y = geomAndNot(M9X INDDMY)  ;
indm9 = geomAnd(indm9a M9Y)  ;
indm9p1 = geomAndNot(indm9 IND_MP)  ;
indm9p2 = geomAndNot(indm9p1 geomButtOrOver(indm9p1 IND_MP))  ;
indm9p = geomAndNot(indm9p2 IND_D4)  ;

; ***** Define connectivity/via layer -- rwel ****
ppsub = geomAndNot(BULK NW)  ; define total p_sub region
psub2s = geomSize(PSUB2 0.01)  ;
psubband = geomAndNot(psub2s PSUB2)  ;  psub separator band (doughnut).
psub_w5w6 = geomAndNot(ppsub psubband)  ;
rwel = geomInside(psub_w5w6 DNW)  ;

; ***** Define connectivity/via layer -- gate1_not_IO2 ****
gate1_not_IO1 = geomAndNot(gate1 OD25)  ;
gate1_not_IO2 = geomAndNot(gate1_not_IO1 OD33)  ;

; ***** Define connectivity/via layer -- ydio_hole ****
ydio_hole = geomHoles(ydio)  ;

; ***** Define connectivity/via layer -- cnemit1 ****
npnrg = geomAnd(DNW BJTDMY)  ; define NPN region
nndiff = geomAnd(tndiff npnrg)  ;
rfdmy56 = geomOr(RFDMY5T RFDMY6T)  ;
psub_norwel = geomAndNot(psub_w5w6 rfdmy56)  ;
psub = geomOr(psub_norwel rwel)  ;
pbase1 = geomAnd(psub npnrg)  ;
cpbase1 = geomAndNot(pbase1 OD25)  ; define CORE BJT[NV] base terminal
cnemit1a = geomAnd(nndiff cpbase1)  ; define CORE BJT[NV] emitter
cnemit1 = geomButtOrOver(cnemit1a RPO)  ; emitter need to interact RPO ring

; ***** Define connectivity/via layer -- mom4m1 ****
M4X = geomOr(M4 DUM4)  ;
M4Y = geomAndNot(M4X INDDMY)  ;
mt4res1 = geomAnd(M4Y RMDMY4)  ;
mt4res = geomButtOrOver(mt4res1 M4)  ; metal4 resistor
metal4 = geomAndNot(M4Y mt4res)  ; metal4 interconnect
mom4p11 = geomAnd(metal4 MOMDMY23)  ;
mom4m1 = geomAndNot(mom4p11 geomButtOrOver(mom4p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- PROBEM6_T ****
PROBEM6_T1 = geomSize(PROBEM6 0.005)  ;
PROBEM6_T = geomAndNot(PROBEM6_T1 PROBEM6)  ;

; ***** Define connectivity/via layer -- mom7m2 ****
M7X = geomOr(M7 DUM7)  ;
M7Y = geomAndNot(M7X INDDMY)  ;
mt7res1 = geomAnd(M7Y RMDMY7)  ;
mt7res = geomButtOrOver(mt7res1 M7)  ; metal7 resistor
metal7 = geomAndNot(M7Y mt7res)  ; metal7 interconnect
mom7p21 = geomAnd(metal7 MOMDMY24)  ;
mom7m2 = geomAndNot(mom7p21 geomButtOrOver(mom7p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- rf_hia_via ****
NWDMY = geomOr(NWDMYi NWDMY1)  ;
nxwell = geomAndNot(NW NWDMY)  ; define N_well region
dio_inrf1 = geomAnd(HIADMY nxwell)  ;
dio_inrf = geomInside(dio_inrf1 RFDMY)  ;
RFDMY_hia = geomButtOrOver(RFDMY dio_inrf)  ;
RFDMY_hia_psub = geomAndNot(RFDMY_hia nxwell)  ;
rf_hia_via1 = geomSize(RFDMY_hia_psub 0.005)  ;
rf_hia_via2 = geomAndNot(rf_hia_via1 RFDMY_hia_psub)  ;
rf_hia_via = geomAnd(rf_hia_via2 psub)  ;

; ***** Define connectivity/via layer -- ncoll1 ****
ncollrg = geomAnd(nxwell npnrg)  ;
ncolls = geomButtOnly(ncollrg pbase1)  ;
ncoll1 = geomOr(ncolls pbase1)  ; define both BJTs collector

; ***** Define connectivity/via layer -- PROBEM1_B ****
PROBEM1_T1 = geomSize(PROBEM1 0.005)  ;
PROBEM1_T = geomAndNot(PROBEM1_T1 PROBEM1)  ;
PROBEM1_B = geomAnd(PROBEM1_T BULK)  ;

; ***** Define connectivity/via layer -- nplug ****
nplug1 = geomAnd(tndiff nxwell)  ;
nplug2 = geomButtOrOver(nplug1 CO)  ;
pthin = geomAnd(mdiff PP)  ; define P+ thin oxide
tpdiffa = geomAndNot(pthin gate1)  ; define P+ diffusion region
pdiffb = geomAndNot(diffb ndiffb)  ;
tpdiff = geomOr(tpdiffa pdiffb)  ;
tpdiffco = geomButtOrOver(tpdiff CO)  ;
nplug3 = geomButtOrOver(nplug1 tpdiffco)  ;
nplug = geomOr(nplug2 nplug3)  ; define N_well contact

; ***** Define connectivity/via layer -- mom7m1 ****
mom7p11 = geomAnd(metal7 MOMDMY23)  ;
mom7m1 = geomAndNot(mom7p11 geomButtOrOver(mom7p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- mom5m1 ****
mom5p11 = geomAnd(metal5 MOMDMY23)  ;
mom5m1 = geomAndNot(mom5p11 geomButtOrOver(mom5p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- PROBEM5_T ****
PROBEM5_T1 = geomSize(PROBEM5 0.005)  ;
PROBEM5_T = geomAndNot(PROBEM5_T1 PROBEM5)  ;

; ***** Define connectivity/via layer -- polyCont ****
polyCont = geomButtOrOver(CO POI)  ;

; ***** Define connectivity/via layer -- PROBEM4_T ****
PROBEM4_T1 = geomSize(PROBEM4 0.005)  ;
PROBEM4_T = geomAndNot(PROBEM4_T1 PROBEM4)  ;

; ***** Define connectivity/via layer -- cemit1 ****
ttdiff = geomAnd(tpdiff BJTDMY)  ;
nbase1k = geomAndNot(nxwell geomButtOrOver(nxwell DNW))  ;
nbase1 = geomAnd(nbase1k BJTDMY)  ;
cnbase1 = geomAndNot(nbase1 OD25)  ; define CORE BJT[PV] base terminal
cemit1a = geomAnd(ttdiff cnbase1)  ; define CORE BJT[PV] emitter
cemit1 = geomButtOrOver(cemit1a RPO)  ; emitter need to interact RPO ring

; ***** Define connectivity/via layer -- inbase1 ****
inbase1 = geomAnd(nbase1 OD25)  ; define I/O  BJT[P1] base terminal

; ***** Define connectivity/via layer -- VIA4 ****
VIA4 = geomCat(VIA4i)  ; VIA4

; ***** Define connectivity/via layer -- d_tndiff ****
d_tndiff = geomAnd(tndiff DRAIN)  ;

; ***** Define connectivity/via layer -- mom7p1 ****
mom7p1 = geomButtOrOver(mom7p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- PROBEM6_B ****
PROBEM6_B = geomAnd(PROBEM6_T BULK)  ;

; ***** Define connectivity/via layer -- metal8 ****
M8X = geomOr(M8 DUM8)  ;
M8Y = geomAndNot(M8X INDDMY)  ;
mt8res1 = geomAnd(M8Y RMDMY8)  ;
mt8res = geomButtOrOver(mt8res1 M8)  ; metal8 resistor
metal8 = geomAndNot(M8Y mt8res)  ; metal8 interconnect

; ***** Define connectivity/via layer -- mom5p2 ****
mom5p2 = geomButtOrOver(mom5p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- p3Cont ****
p3Cont = geomButtOrOver(CO p3)  ;

; ***** Define connectivity/via layer -- iemit1 ****
iemit1 = geomAnd(ttdiff inbase1)  ; define I/O  BJT[P1] emitter

; ***** Define connectivity/via layer -- MOM_field5 ****
MOM_field5 = geomAnd(M5 MOMDMY5)  ;

; ***** Define connectivity/via layer -- mom4p1 ****
mom4p1 = geomButtOrOver(mom4p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- metal3 ****
M3X = geomOr(M3 DUM3)  ;
M3Y = geomAndNot(M3X INDDMY)  ;
mt3res1 = geomAnd(M3Y RMDMY3)  ;
mt3res = geomButtOrOver(mt3res1 M3)  ; metal3 resistor
metal3 = geomAndNot(M3Y mt3res)  ; metal3 interconnect

; ***** Define connectivity/via layer -- inemit1 ****
inemit1 = geomAnd(nndiff inbase1)  ; define I/O  BJT[N1] emitter

; ***** Define connectivity/via layer -- metal2 ****
M2X = geomOr(M2 DUM2)  ;
M2Y = geomAndNot(M2X INDDMY)  ;
mt2res1 = geomAnd(M2Y RMDMY2)  ;
mt2res = geomButtOrOver(mt2res1 M2)  ; metal2 resistor
metal2 = geomAndNot(M2Y mt2res)  ; metal2 interconnect

; ***** Define connectivity/via layer -- poly_term ****
poly_term1 = geomAnd(POI RPDMY1)  ;
poly_term2 = geomSize(poly_term1 0.005)  ;
poly_term = geomAndNot(poly_term2 poly_term1)  ;

; ***** Define connectivity/via layer -- ntap ****
xwell = geomOutside(NW NWDMY)  ;
ntapx = geomAnd(tndiff xwell)  ;
ntap1 = geomAndNot(ntapx BJTDMY)  ;
ntap2 = geomButtOrOver(ntap1 CO)  ;
ntap3 = geomButtOrOver(ntap1 tpdiffco)  ;
ntap = geomOr(ntap2 ntap3)  ;

; ***** Define connectivity/via layer -- PROBEM4_B ****
PROBEM4_B = geomAnd(PROBEM4_T BULK)  ;

; ***** Define connectivity/via layer -- s_pd25hvd ****
s_pd25hvd1 = geomAndNot(tpdiff HVD_P)  ;
gate_a = geomAndNot(gate1 SRM)  ;
gate_a_rf = geomAnd(gate_a RFDMY)  ;
poly_rf1 = geomButtOrOver(poly CO)  ;
poly_rf = geomButtOrOver(poly_rf1 DRAIN)  ;
gate_rfb = geomAnd(gate_a_rf poly_rf)  ;
gate_c = geomAndNot(gate_a gate_rfb)  ;
rf_diff = geomButtOrOver(mdiff DRAIN)  ;
poly_rf2 = geomButtOrOver(gate_a_rf rf_diff)  ;
poly_rf_noco = geomAndNot(poly_rf2 geomButtOrOver(poly_rf2 CO))  ;
gate = geomAndNot(gate_c poly_rf_noco)  ;
gatenw = geomAnd(gate nxwell)  ; gate inside nwell
tpgate1 = geomAnd(gatenw PP)  ;
pgate_25a = geomAnd(tpgate1 OD25)  ;
pgate_25hvd_org = geomButtOrOver(pgate_25a HVD_P)  ; HVD PMOS
s_pd25hvd = geomButtOrOver(s_pd25hvd1 pgate_25hvd_org)  ;

; ***** Define connectivity/via layer -- poly_nw_via ****
poly_nw_via = geomAnd(poly_term nxwell)  ;

; ***** Define connectivity/via layer -- mom3p2 ****
mom3p21 = geomAnd(metal3 MOMDMY24)  ;
mom3p2 = geomButtOrOver(mom3p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- s_tndiff ****
s_tndiff1 = geomAndNot(tndiff DRAIN)  ;
gate_rf = geomAndNot(gate_rfb VAR)  ;
s_tndiff = geomButtOrOver(s_tndiff1 gate_rf)  ;

; ***** Define connectivity/via layer -- mom6m1 ****
M6X = geomOr(M6 DUM6)  ;
M6Y = geomAndNot(M6X INDDMY)  ;
mt6res1 = geomAnd(M6Y RMDMY6)  ;
mt6res = geomButtOrOver(mt6res1 M6)  ; metal6 resistor
metal6 = geomAndNot(M6Y mt6res)  ; metal6 interconnect
mom6p11 = geomAnd(metal6 MOMDMY23)  ;
mom6m1 = geomAndNot(mom6p11 geomButtOrOver(mom6p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- mom3p1 ****
mom3p11 = geomAnd(metal3 MOMDMY23)  ;
mom3p1 = geomButtOrOver(mom3p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- schottky_p ****
pthin1 = geomStraddle(mdiff PP)  ;
SBD_RF1 = geomAnd(SBDDMY RFDMY)  ;
SBD_RF = geomAndNot(SBD_RF1 VAR)  ;
sbd_nw = geomAnd(nxwell SBD_RF)  ;
schottky_p = geomAnd(pthin1 sbd_nw)  ;

; ***** Define connectivity/via layer -- VIA6 ****
VIA6 = geomCat(VIA6i)  ; VIA6

; ***** Define connectivity/via layer -- MOM_field2 ****
MOM_field2 = geomAnd(M2 MOMDMY2)  ;

; ***** Define connectivity/via layer -- dnwc ****
dnwc = geomAnd(DNW nxwell)  ;

; ***** Define connectivity/via layer -- tiod ****
tioda = geomAndNot(diff tpdiff)  ;
tiodb = geomAndNot(tioda tndiff)  ;
PO = geomOr(POI DPO)  ;
tiod1 = geomAndNot(tiodb PO)  ;
tiod2 = geomAndNot(tiod1 RPO)  ;
tiod3 = geomAndNot(tiod2 RPDMY)  ;
tiod = geomAndNot(tiod3 NWDMY)  ; RPO, RPDMY, NWDMY cut ti-od

; ***** Define connectivity/via layer -- MOM_field3 ****
MOM_field3 = geomAnd(M3 MOMDMY3)  ;

; ***** Define connectivity/via layer -- mom6p2 ****
mom6p21 = geomAnd(metal6 MOMDMY24)  ;
mom6p2 = geomButtOrOver(mom6p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- PROBEM5_B ****
PROBEM5_B = geomAnd(PROBEM5_T BULK)  ;

; ***** Define connectivity/via layer -- n_psub ****
nw_dnw = geomButtOrOver(NW rwel)  ;
n_ppsub = geomAndNot(BULK nw_dnw)  ;
n_psub = geomAndNot(n_ppsub psubband)  ;

; ***** Define connectivity/via layer -- psub_term ****
psub_term_a = geomAndNot(psub2s PSUB2)  ;
psub_term_b = geomAndNot(BULK psub_term_a)  ;
psub_term_c = geomAnd(BULK DNW)  ;
psub_term_d = geomAndNot(BULK psub_term_c)  ;
psub_term_e = geomAnd(psub_term_b psub_term_d)  ;
psub_term = geomButtOrOver(psub_term_e DNW)  ;

; ***** Define connectivity/via layer -- hiaplug ****
hiaplug1 = geomAnd(tpdiff RFDMY_hia)  ;
hiaplug2 = geomButtOrOver(hiaplug1 CO)  ;
tndiffco = geomButtOrOver(tndiff CO)  ;
hiaplug3 = geomButtOrOver(hiaplug1 tndiffco)  ;
hiaplug4 = geomOr(hiaplug2 hiaplug3)  ;
hiaplug = geomAndNot(hiaplug4 nxwell)  ;

; ***** Define connectivity/via layer -- VIA1 ****
VIA1 = geomCat(VIA1i)  ; VIA1

; ***** Define connectivity/via layer -- s_tpdiff ****
s_tpdiff1 = geomAndNot(tpdiff DRAIN)  ;
s_tpdiff = geomButtOrOver(s_tpdiff1 gate_rf)  ;

; ***** Define connectivity/via layer -- n_pplug ****
n_pplug1 = geomButtOrOver(mdiff CO)  ;
n_pplug2 = geomAnd(n_pplug1 PP)  ;
n_pplug3 = geomAndNot(n_pplug2 nxwell)  ;
n_pplug = geomAnd(n_pplug3 n_psub)  ;

; ***** Define connectivity/via layer -- d_tpdiff ****
d_tpdiff = geomAnd(tpdiff DRAIN)  ;

; ***** Define connectivity/via layer -- mom4p2 ****
mom4p21 = geomAnd(metal4 MOMDMY24)  ;
mom4p2 = geomButtOrOver(mom4p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- s_nd25hvdw ****
s_nd25hvdw1 = geomAndNot(tndiff HVD_NW)  ;
gatennw = geomAndNot(gate nxwell)  ; gate not inside nwell
tngate1 = geomAnd(gatennw NP)  ;
ngate_25a = geomAnd(tngate1 OD25)  ;
ngate_25b = geomAndNot(ngate_25a NT_Ni)  ;
ngate_25c = geomAndNot(ngate_25b DNW)  ;
ngate_25hvd2 = geomAndNot(ngate_25c geomButtOrOver(ngate_25c HVD_N))  ;
ngate_25hvdw_org = geomButtOrOver(ngate_25hvd2 HVD_NW)  ; HVD NMOS NW
s_nd25hvdw = geomButtOrOver(s_nd25hvdw1 ngate_25hvdw_org)  ;

; ***** Define connectivity/via layer -- VIA5 ****
VIA5 = geomCat(VIA5i)  ; VIA5

; ***** Define connectivity/via layer -- MOM_field7 ****
MOM_field7 = geomAnd(M7 MOMDMY7)  ;

; ***** Define connectivity/via layer -- mom5p1 ****
mom5p1 = geomButtOrOver(mom5p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- mom6m2 ****
mom6m2 = geomAndNot(mom6p21 geomButtOrOver(mom6p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- poly_psub_via ****
poly_psub_via = geomAnd(poly_term psub)  ;

; ***** Define connectivity/via layer -- metal1 ****
M1X = geomOr(M1 CO)  ;
M1Y = geomOr(M1X DUM1)  ;
mt1res1 = geomAnd(M1Y RMDMY1)  ;
mt1res = geomButtOrOver(mt1res1 M1)  ; metal1 resistor
metal1 = geomAndNot(M1Y mt1res)  ; metal1 interconnect

; ***** Define connectivity/via layer -- mom7p2 ****
mom7p2 = geomButtOrOver(mom7p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- PROBEM3_T ****
PROBEM3_T1 = geomSize(PROBEM3 0.005)  ;
PROBEM3_T = geomAndNot(PROBEM3_T1 PROBEM3)  ;

; ***** Define connectivity/via layer -- mom3m1 ****
mom3m1 = geomAndNot(mom3p11 geomButtOrOver(mom3p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- rf_pplug ****
rf_pplug1 = geomAnd(tpdiff rfdmy56)  ;
rf_pplug2 = geomButtOrOver(rf_pplug1 CO)  ;
rf_pplug3 = geomButtOrOver(rf_pplug1 tndiffco)  ;
rf_pplug4 = geomOr(rf_pplug2 rf_pplug3)  ;
rf_pplug5 = geomAndNot(rf_pplug4 psub)  ;
rf_pplug = geomAndNot(rf_pplug5 nxwell)  ;

; ***** Define connectivity/via layer -- nxwell_npn ****
ncollsa = geomButtOnly(ncolls cemit1)  ;
ncollsb = geomButtOnly(ncolls iemit1)  ;
ncollall = geomOr(ncollsa ncollsb)  ;
nxwell_npn = geomAndNot(ncolls ncollall)  ;

; ***** Define connectivity/via layer -- VIA9 ****
VIA9a = geomOr(RV CBD)  ;
VIA9 = geomOr(VIA9a CB)  ;

; ***** Define connectivity/via layer -- indm9m ****
indm9m = geomAnd(indm9 IND_MP)  ;

; ***** Define connectivity/via layer -- ptap ****
ptap1 = geomAnd(tpdiff psub)  ;
ptap2 = geomButtOrOver(ptap1 CO)  ;
ptap3 = geomButtOrOver(ptap1 tndiffco)  ;
ptap = geomOr(ptap2 ptap3)  ;

; ***** Define connectivity/via layer -- d_pd25hvd ****
d_pd25hvd = geomAnd(tpdiff HVD_P)  ;

; ***** Define connectivity/via layer -- PROBEM3_B ****
PROBEM3_B = geomAnd(PROBEM3_T BULK)  ;

; ***** Define connectivity/via layer -- PROBEM2_T ****
PROBEM2_T1 = geomSize(PROBEM2 0.005)  ;
PROBEM2_T = geomAndNot(PROBEM2_T1 PROBEM2)  ;

; ***** Define connectivity/via layer -- mom4m2 ****
mom4m2 = geomAndNot(mom4p21 geomButtOrOver(mom4p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- VIA2 ****
VIA2 = geomCat(VIA2i)  ; VIA2

; ***** Define connectivity/via layer -- PROBEM7_T ****
PROBEM7_T1 = geomSize(PROBEM7 0.005)  ;
PROBEM7_T = geomAndNot(PROBEM7_T1 PROBEM7)  ;

; ***** Define connectivity/via layer -- VIA3 ****
VIA3 = geomCat(VIA3i)  ; VIA3

; ***** Define connectivity/via layer -- indm9c ****
indm9p3 = geomAnd(indm9p2 IND_D4)  ;
indm9p4 = geomButtOrOver(indm9p3 indm9p)  ;
IND_D41 = geomAndNot(IND_D4 indm9p4)  ;
IND_D42 = geomAndNot(IND_D41 indm9m)  ;
IND_D4i = geomSize(IND_D42 -0.001)  ;
indm9c1 = geomAnd(indm9 IND_D4i)  ;
indm8 = geomAnd(indm9a M8Y)  ;
indm9c2 = geomAnd(indm8 IND_D4i)  ;
indm9c4 = geomOr(indm9c1 indm9c2)  ;
indm7 = geomAnd(indm9a M7Y)  ;
indm9c3 = geomAnd(indm7 IND_D4i)  ;
indm9c = geomOr(indm9c4 indm9c3)  ;

; ***** Define connectivity/via layer -- ipbase1 ****
ipbase1 = geomAnd(pbase1 OD25)  ; define I/O  BJT[N1] base terminal

; ***** Define connectivity/via layer -- pplug ****
pplug1 = geomAnd(tpdiff psub)  ;
pplug2 = geomButtOrOver(pplug1 CO)  ;
pplug3 = geomButtOrOver(pplug1 tndiffco)  ;
pplug = geomOr(pplug2 pplug3)  ; define p_sub contact

; ***** Define connectivity/via layer -- metal10 ****
APX = geomOr(AP DAP)  ;
M10Y = geomAndNot(APX INDDMY)  ;
mtAPres1 = geomAnd(M10Y RMDMYAP)  ;
mtAPres = geomButtOrOver(mtAPres1 AP)  ; metalAP resistor
metal10 = geomAndNot(M10Y mtAPres)  ; metalAP interconnect

; ***** Define connectivity/via layer -- mom6p1 ****
mom6p1 = geomButtOrOver(mom6p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- schottky_n ****
schottky_n = geomAnd(nthin1 sbd_nw)  ;

; ***** Define connectivity/via layer -- MOM_field6 ****
MOM_field6 = geomAnd(M6 MOMDMY6)  ;

; ***** Define connectivity/via layer -- d_nd25hvdw ****
d_nd25hvdw = geomAnd(tndiff HVD_NW)  ;

; ***** Define connectivity/via layer -- MOM_field4 ****
MOM_field4 = geomAnd(M4 MOMDMY4)  ;

; ***** Define connectivity/via layer -- mom3m2 ****
mom3m2 = geomAndNot(mom3p21 geomButtOrOver(mom3p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- s_nd25hvd ****
s_nd25hvd1 = geomAndNot(tndiff HVD_N)  ;
ngate_25hvd1 = geomButtOrOver(ngate_25c HVD_N)  ;
ngate_25hvd_org = geomAndNot(ngate_25hvd1 geomButtOrOver(ngate_25hvd1 HVD_NW))  ; HVD NMOS DNW
s_nd25hvd = geomButtOrOver(s_nd25hvd1 ngate_25hvd_org)  ;

; ***** Define connectivity/via layer -- MOM_field1 ****
MOM_field1 = geomAnd(M1 MOMDMY1)  ;

; ***** Define connectivity/via layer -- poly2 ****
poly2 = geomAnd(poly21 MOMDMY0)  ; RTMOM POLY 

; ***** Define connectivity/via layer -- metal9 ****
mt9res1 = geomAnd(M9Y RMDMY9)  ;
mt9res = geomButtOrOver(mt9res1 M9)  ; metal9 resistor
metal9 = geomAndNot(M9Y mt9res)  ; metal9 interconnect

; ***** Define connectivity/via layer -- PROBEM2_B ****
PROBEM2_B = geomAnd(PROBEM2_T BULK)  ;

; ***** Define connectivity/via layer -- coll1 ****
collsur = geomButtOnly(psub nbase1)  ;
coll1a = geomOr(collsur nbase1)  ; define both BJTs collector
collsura = geomButtOnly(collsur cnemit1)  ;
collsurb = geomButtOnly(collsur inemit1)  ;
collsurall = geomOr(collsura collsurb)  ;
coll1b = geomAndNot(coll1a collsurall)  ;
coll1 = geomAndNot(coll1b cemit1)  ;  define pnp collector

; ***** Define connectivity/via layer -- odCont ****
odCont1 = geomButtOrOver(CO OD)  ;
odCont = geomAndNot(odCont1 p3Cont)  ;

; ***** Define connectivity/via layer -- PROBEM7_B ****
PROBEM7_B = geomAnd(PROBEM7_T BULK)  ;

; ***** Define connectivity/via layer -- rfdmy56_via ****
rfdmy56gr = geomSize(rfdmy56 0.005)  ;
rfdmy56band = geomAndNot(rfdmy56gr rfdmy56)  ;
rfdmy56_via = geomAnd(rfdmy56band psub)  ;

;//#############################################
;//# FORM DEVICE LAYER                         #
;//#############################################
;
;* Define device -- nmos nch
tngate2 = geomAndNot(tngate1 OD25)  ;
tngate3 = geomAndNot(tngate2 OD33)  ;
tngate4 = geomAndNot(tngate3 OD18)  ;
tngate5 = geomAndNot(tngate4 NT_Ni)  ;
tngate6 = geomAndNot(tngate5 DNW)  ;
nlvgate_org1 = geomAnd(tngate6 VTL_N)  ;
ngate1 = geomAndNot(tngate6 nlvgate_org1)  ;
nhvgate1 = geomAnd(tngate6 VTH_N)  ;
nhvgate2 = geomAndNot(nhvgate1 DCO)  ;
ngate2 = geomAndNot(ngate1 nhvgate2)  ;
tngate7 = geomAndNot(tngate6 OD1T)  ;
nuvgate_org1 = geomAnd(tngate7 VTUL_N)  ;
ngate31 = geomAndNot(ngate2 nuvgate_org1)  ;
nuhvgate_org1 = geomAnd(tngate6 UHVT_N)  ;
ngate3 = geomAndNot(ngate31 nuhvgate_org1)  ;
ngate4 = geomAndNot(ngate3 OD1T)  ;
ngate5 = geomAndNot(ngate4 ILVT)  ;
ngate_org1 = geomAndNot(ngate5 DCO)  ;
ngate_org = geomCat(ngate_org1)  ;
ngate = geomAndNot(ngate_org MAC)  ; CORE NMOS
;
;* Define device -- nmos nch_dnw
tdgate1a = geomAnd(tngate5 DNW)  ;
tdgate1 = geomAndNot(tdgate1a OD1T)  ;
n1lvgate_org1 = geomAnd(tdgate1 VTL_N)  ;
nrgate1 = geomAndNot(tdgate1 n1lvgate_org1)  ;
n1hvgate1 = geomAnd(tdgate1 VTH_N)  ;
n1hvgate_org1 = geomAndNot(n1hvgate1 DCO)  ;
nrgate2 = geomAndNot(nrgate1 n1hvgate_org1)  ;
n1uvgate_org1 = geomAnd(tdgate1 VTUL_N)  ;
nrgate31 = geomAndNot(nrgate2 n1uvgate_org1)  ;
n1uhvgate_org1 = geomAnd(tdgate1 UHVT_N)  ;
nrgate3 = geomAndNot(nrgate31 n1uhvgate_org1)  ;
nrgate4 = geomAndNot(nrgate3 ILVT)  ;
nrgate_org1 = geomAndNot(nrgate4 DCO)  ;
nrgate_org = geomCat(nrgate_org1)  ;
nrgate = geomAndNot(nrgate_org MAC)  ; CORE NMOS on DNW
;
;* Define device -- nmos nch_mac
ngate_mac = geomAnd(ngate_org MAC)  ; CORE NMOS MAC
;
;* Define device -- nmos nch_dnw_mac
nrgate_mac = geomAnd(nrgate_org MAC)  ; CORE NMOS on DNW MAC
;
;* Define device -- nmos nch_hvt
nhvgate_org = geomCat(nhvgate2)  ;
nhvgate = geomAndNot(nhvgate_org MAC)  ; CORE HIGH_VT NMOS
;
;* Define device -- nmos nch_hvt_dnw
n1hvgate_org = geomCat(n1hvgate_org1)  ;
n1hvgate = geomAndNot(n1hvgate_org MAC)  ; CORE HIGH_VT NMOS on DNW
;
;* Define device -- nmos nch_hvt_mac
nhvgate_mac = geomAnd(nhvgate_org MAC)  ; CORE HIGH_VT NMOS MAC
;
;* Define device -- nmos nch_hvt_dnw_mac
n1hvgate_mac = geomAnd(n1hvgate_org MAC)  ; CORE HIGH_VT NMOS on DNW MAC
;
;* Define device -- nmos nch_lvt
nlvgate_org = geomCat(nlvgate_org1)  ;
nlvgate = geomAndNot(nlvgate_org MAC)  ; CORE LOW_VT NMOS
;
;* Define device -- nmos nch_lvt_dnw
n1lvgate_org = geomCat(n1lvgate_org1)  ;
n1lvgate = geomAndNot(n1lvgate_org MAC)  ; CORE LOW_VT NMOS on DNW
;
;* Define device -- nmos nch_lvt_mac
nlvgate_mac = geomAnd(nlvgate_org MAC)  ; CORE LOW_VT NMOS MAC
;
;* Define device -- nmos nch_lvt_dnw_mac
n1lvgate_mac = geomAnd(n1lvgate_org MAC)  ; CORE LOW_VT NMOS on DNW
;
;* Define device -- nmos nch_ulvt
nuvgate_org = geomCat(nuvgate_org1)  ;
nuvgate = geomAndNot(nuvgate_org MAC)  ; CORE ULTRA VT NMOS
;
;* Define device -- nmos nch_ulvt_dnw
n1uvgate_org = geomCat(n1uvgate_org1)  ;
n1uvgate = geomAndNot(n1uvgate_org MAC)  ; CORE ULTRA VT NMOS on DNW
;
;* Define device -- nmos nch_ulvt_mac
nuvgate_mac = geomAnd(nuvgate_org MAC)  ; CORE ULTRA VT NMOS MAC
;
;* Define device -- nmos nch_ulvt_dnw_mac
n1uvgate_mac = geomAnd(n1uvgate_org MAC)  ; CORE ULTRA VT NMOS on DNW MAC
;
;* Define device -- nmos nch_uhvt
nuhvgate_org = geomCat(nuhvgate_org1)  ;
nuhvgate = geomAndNot(nuhvgate_org MAC)  ; CORE ULTRA High VT NMOS
;
;* Define device -- nmos nch_uhvt_dnw
n1uhvgate_org = geomCat(n1uhvgate_org1)  ;
n1uhvgate = geomAndNot(n1uhvgate_org MAC)  ; CORE ULTRA High VT NMOS on DNW
;
;* Define device -- nmos nch_uhvt_mac
nuhvgate_mac = geomAnd(nuhvgate_org MAC)  ; CORE ULTRA High VT NMOS MAC
;
;* Define device -- nmos nch_uhvt_dnw_mac
n1uhvgate_mac = geomAnd(n1uhvgate_org MAC)  ; CORE ULTRA High VT NMOS on DNW MAC
;
;* Define device -- nmos nch_lpg
ngatelpg1 = geomAndNot(tngate5 nlvgate_org1)  ;
ngatelpg2 = geomAndNot(ngatelpg1 nhvgate2)  ;
ngatelpg3 = geomAndNot(ngatelpg2 nuvgate_org1)  ;
ngatelpg4 = geomAndNot(ngatelpg3 nuhvgate_org1)  ;
ngatelpg5 = geomAndNot(ngatelpg4 OD1T)  ;
ngatelpg6 = geomAndNot(ngatelpg5 ILVT)  ;
nhvgate1a = geomAnd(tngate5 VTH_N)  ;
nhvgatelpg = geomAnd(nhvgate1a DCO)  ; CORE HIGH_VT LPG NMOS
ngatelpg7 = geomAndNot(ngatelpg6 nhvgatelpg)  ;
ngatelpg = geomAnd(ngatelpg7 DCO)  ; CORE LPG NMOS
;
;* Define device -- nmos nch_lpgna
nlgate1 = geomAnd(tngate4 NT_Ni)  ;
nlgate2 = geomAndNot(nlgate1 VTL_N)  ;
nlgate3 = geomAndNot(nlgate2 VTH_N)  ;
nlgate4 = geomAndNot(nlgate3 VTUL_N)  ;
nlgate5 = geomAndNot(nlgate4 DNW)  ;
nlgate6 = geomAndNot(nlgate5 ILVT)  ;
nlgatelpg = geomAnd(nlgate6 DCO)  ; CORE LPG Devices
;
;* Define device -- nmos nch_na
nlgate7 = geomAndNot(nlgate6 DCO)  ;
nlgate = geomAndNot(nlgate7 MAC)  ; CORE Native Devies
;
;* Define device -- nmos nch_na_mac
nlgate_mac = geomAnd(nlgate7 MAC)  ; CORE Native Devies MAC
;
;* Define device -- nmos nch_w
ngate_1ta = geomAnd(tngate5 OD1T)  ;
ngate_1tb = geomAndNot(ngate_1ta VTL_N)  ;
ngate_1tc = geomAndNot(ngate_1tb VTH_N)  ;
ngate_1td = geomAndNot(ngate_1tc VTUL_N)  ;
ngate_1te = geomAndNot(ngate_1td CAP1TDMY)  ;
ngate_1tf = geomAndNot(ngate_1te geomButtOrOver(ngate_1te p3))  ;
ngate_w1t = geomAndNot(ngate_1tf DNW)  ; eDRAM nch_w device
;
;* Define device -- nmos nch_w_lvt
ngate_1tg = geomAnd(ngate_1tc VTUL_N)  ;
ngate_1th = geomAndNot(ngate_1tg CAP1TDMY)  ;
ngate_1ti = geomAndNot(ngate_1th geomButtOrOver(ngate_1th p3))  ;
ngate_w1t_lvt = geomAndNot(ngate_1ti DNW)  ; eDRAM nch_w_lvt device
;
;* Define device -- nmos nch_dnw_w
ngate_dnw_w = geomAnd(ngate_1tf DNW)  ; eDRAM nch_dnw_w device
;
;* Define device -- nmos nch_dnw_w_lvt
ngate_dnw_w_lvt = geomAnd(ngate_1ti DNW)  ; eDRAM nch_dnw_w_lvt device
;
;* Define device -- nmos nch_dnw_1tr
ngate_1te_dnw = geomAnd(ngate_1te DNW)  ;
ngate_1tr = geomButtOrOver(ngate_1te_dnw p3)  ;  eDRAM nch_dnw_1tr device
;
;* Define device -- nmos nch_mlvt
nilvtgate_org1 = geomAnd(ngate3 ILVT)  ;
nilvtgate_org = geomCat(nilvtgate_org1)  ;
nilvtgate = geomAndNot(nilvtgate_org MAC)  ; LP NMOS MLVT device
;
;* Define device -- nmos nch_mlvt_dnw
n1ilvtgate_org1 = geomAnd(nrgate3 ILVT)  ;
n1ilvtgate_org = geomCat(n1ilvtgate_org1)  ;
n1ilvtgate = geomAndNot(n1ilvtgate_org MAC)  ; CORE LP NMOS MLVT device on DNW
;
;* Define device -- nmos nch_mlvt_mac
nilvtgate_mac = geomAnd(nilvtgate_org MAC)  ; LP NMOS MLVT device MAC
;
;* Define device -- nmos nch_mlvt_dnw_mac
n1ilvtgate_mac = geomAnd(n1ilvtgate_org MAC)  ; CORE LP NMOS MLVT device on DNW MAC
;
;* Define device -- nmos nchpg_sr
gate_s1 = geomAnd(gate1 SRM)  ;
gatennw_s = geomAndNot(gate_s1 nxwell)  ; gate not inside nwell
ngate_s1 = geomAnd(gatennw_s NP)  ;
ngate_s2 = geomAndNot(ngate_s1 OD25)  ;
ngate_s3 = geomAndNot(ngate_s2 OD33)  ;
ngate_s4 = geomAndNot(ngate_s3 OD18)  ;
ngate_s5 = geomAndNot(ngate_s4 VTL_N)  ;
ngate_s611 = geomAndNot(ngate_s5 VTUL_N)  ;
ngate_s612 = geomAndNot(ngate_s611 UHVT_N)  ;
ngate_s61 = geomAndNot(ngate_s612 SRAMTIMER)  ;
ngate_s62 = geomAndNot(ngate_s61 SRM14)  ;
ngate_s63 = geomAndNot(ngate_s62 SRM12)  ;
ngate_s64 = geomAndNot(ngate_s63 SRM13)  ;
ngate_s65 = geomAndNot(ngate_s64 SRM17)  ;
ngate_s6 = geomAndNot(ngate_s65 SRM16)  ;
ngate_s_org1 = geomAndNot(ngate_s6 VTH_N)  ;
if( avSwitch("CELLIMP") then;
LPSRM10 = geomCat(SRM10) ;
else;
od_1 = geomSize(SRM10 0.005) ;
LPSRM10 = geomAndNot(SRM10 od_1) ;
) ;if 
ngate_s_org2 = geomAndNot(ngate_s_org1 LPSRM10)  ;
if( avSwitch("CELLIMP") then;
LPSRM11 = geomCat(SRM11) ;
else;
od_1 = geomSize(SRM11 0.005) ;
LPSRM11 = geomAndNot(SRM11 od_1) ;
) ;if 
ngate_s_org = geomAndNot(ngate_s_org2 LPSRM11)  ;
ngate_s = geomAndNot(ngate_s_org DCO)  ;
ngate_spg = geomAnd(ngate_s SRAMPSGT)  ; SRAM NMOS passgate
;
;* Define device -- nmos nchpd_sr
ngate_spd = geomAndNot(ngate_s SRAMPSGT)  ; SRAM NMOS pulldown
;
;* Define device -- nmos nchpg_lpgsr
ngate_slpg = geomAnd(ngate_s_org DCO)  ;
ngate_spglpg = geomAnd(ngate_slpg SRAMPSGT)  ; SRAM LPG NMOS passgate
;
;* Define device -- nmos nchpd_lpgsr
ngate_spdlpg = geomAndNot(ngate_slpg SRAMPSGT)  ; SRAM LPG NMOS pulldown
;
;* Define device -- nmos nchpg_hvtsr
ngate_hvs = geomAnd(ngate_s65 VTH_N)  ;
ngate_hvspg = geomAnd(ngate_hvs SRAMPSGT)  ; SRAM High VT NMOS passgate
;
;* Define device -- nmos nchpd_hvtsr
ngate_hvspd = geomAndNot(ngate_hvs SRAMPSGT)  ; SRAM High VT NMOS pulldown
;
;* Define device -- nmos nch_timer
ngate_st = geomAnd(ngate_s612 SRAMTIMER)  ;
;
;* Define device -- nmos nchpg_dpsr
ngate_s71 = geomAndNot(ngate_s62 SRM17)  ;
ngate_s7 = geomAnd(ngate_s71 SRM12)  ;
ngate_sdp_org = geomAndNot(ngate_s7 VTH_N)  ;
ngate_sdp = geomAndNot(ngate_sdp_org DCO)  ;
ngate_spgdp = geomAnd(ngate_sdp SRAMPSGT)  ; SRAM NMOS passgate ( 50,12 )
;
;* Define device -- nmos nchpd_dpsr
ngate_spddp = geomAndNot(ngate_sdp SRAMPSGT)  ; SRAM NMOS pulldown ( 50,12 )
;
;* Define device -- nmos nchpg_lpgdpsr
ngate_sdplpg = geomAnd(ngate_sdp_org DCO)  ;
ngate_spglpgdp = geomAnd(ngate_sdplpg SRAMPSGT)  ; SRAM LPG NMOS passgate ( 50,12 )
;
;* Define device -- nmos nchpd_lpgdpsr
ngate_spdlpgdp = geomAndNot(ngate_sdplpg SRAMPSGT)  ; SRAM LPG NMOS pulldown ( 50,12 )
;
;* Define device -- nmos nchpg_hvtdpsr
ngate_hvsdp = geomAnd(ngate_s7 VTH_N)  ;
ngate_hvspgdp = geomAnd(ngate_hvsdp SRAMPSGT)  ; SRAM High VT NMOS passgate ( 50,12 )
;
;* Define device -- nmos nchpd_hvtdpsr
ngate_hvspddp = geomAndNot(ngate_hvsdp SRAMPSGT)  ; SRAM High VT NMOS pulldown ( 50,12 )
;
;* Define device -- nmos nchpg_dphcsr
ngate_s8 = geomAnd(ngate_s63 SRM13)  ;
ngate_sdphc = geomAndNot(ngate_s8 VTH_N)  ;
ngate_spgdphc = geomAnd(ngate_sdphc SRAMPSGT)  ; SRAM NMOS passgate ( 50,13 )
;
;* Define device -- nmos nchpd_dphcsr
ngate_spddphc = geomAndNot(ngate_sdphc SRAMPSGT)  ; SRAM NMOS pulldown ( 50,13 )
;
;* Define device -- nmos nchpg_hvtdphcsr
ngate_hvsdphc = geomAnd(ngate_s8 VTH_N)  ;
ngate_hvspgdphc = geomAnd(ngate_hvsdphc SRAMPSGT)  ; SRAM High VT NMOS passgate ( 50,13 )
;
;* Define device -- nmos nchpd_hvtdphcsr
ngate_hvspddphc = geomAndNot(ngate_hvsdphc SRAMPSGT)  ; SRAM High VT NMOS pulldown ( 50,13 )
;
;* Define device -- nmos nchpg_wosr
ngate_s9 = geomAnd(ngate_s63 SRM16)  ;
ngate_swo1 = geomAndNot(ngate_s9 VTH_N)  ; For N65 G SRAM
ngate_swo2 = geomAnd(ngate_s_org2 LPSRM11)  ; For N65 LP SRAM
ngate_swo = geomOr(ngate_swo1 ngate_swo2)  ; wosr =  (50
ngate_spgwo = geomAnd(ngate_swo SRAMPSGT)  ; SRAM NMOS passgate ( 50,16 ) of G + ( 50,11 ) of LP
;
;* Define device -- nmos nchpd_wosr
ngate_spdwo = geomAndNot(ngate_swo SRAMPSGT)  ; SRAM NMOS pulldown ( 50,16 ) of G + ( 50,11 ) of LP
;
;* Define device -- nmos nchpg_wisr
ngate_swi1 = geomAndNot(ngate_s_org1 LPSRM11)  ;
ngate_swi = geomAnd(ngate_swi1 LPSRM10)  ; For N65 LP SRAM
ngate_spgwi = geomAnd(ngate_swi SRAMPSGT)  ; SRAM NMOS passgate ( 50,10 ) of LP
;
;* Define device -- nmos nchpd_wisr
ngate_spdwi = geomAndNot(ngate_swi SRAMPSGT)  ; SRAM NMOS pulldown ( 50,10 ) of LP
;
;* Define device -- nmos nchpg_ulpsr
ngate_s10 = geomAnd(ngate_s62 SRM17)  ;
ngate_s11 = geomAndNot(ngate_s10 SRM12)  ;
ngate_sulp = geomAnd(ngate_s11 VTH_N)  ;
ngate_spgulp = geomAnd(ngate_sulp SRAMPSGT)  ; SRAM ULP NMOS passgate ( 50,17 ) 
;
;* Define device -- nmos nchpd_ulpsr
ngate_spdulp = geomAndNot(ngate_sulp SRAMPSGT)  ; SRAM ULP NMOS pulldown ( 50,17 )
;
;* Define device -- nmos nchpg_ulpdpsr
ngate_s12 = geomAnd(ngate_s10 SRM12)  ;
ngate_sdpulp = geomAnd(ngate_s12 VTH_N)  ;
ngate_spgulpdp = geomAnd(ngate_sdpulp SRAMPSGT)  ; SRAM ULP NMOS passgate ( 50,17 ) ( 50,12 ) 
;
;* Define device -- nmos nchpd_ulpdpsr
ngate_spdulpdp = geomAndNot(ngate_sdpulp SRAMPSGT)  ; SRAM ULP NMOS pulldown ( 50,17 ) ( 50,12 )
;
;* Define device -- nmos nchpg_lpgtpsr
ngate_s13 = geomAnd(ngate_s61 SRM14)  ;
ngate_stp_org = geomAndNot(ngate_s13 VTH_N)  ;
ngate_stplpg = geomAnd(ngate_stp_org DCO)  ;
ngate_spglpgtp = geomAnd(ngate_stplpg SRAMPSGT)  ; SRAM LPG NMOS passgate ( 50,14 )
;
;* Define device -- nmos nchpd_lpgtpsr
ngate_spdlpgtp = geomAndNot(ngate_stplpg SRAMPSGT)  ; SRAM LPG NMOS pulldown ( 50,14 )
;
;* Define device -- nmos nch_18
ngate_18a = geomAnd(tngate1 OD18)  ;
ngate_18b = geomAndNot(ngate_18a NT_Ni)  ;
ngate_18c = geomAndNot(ngate_18b DNW)  ;
ngate_18_org1 = geomAndNot(ngate_18c VTL_N)  ;
ngate_18_org = geomAndNot(ngate_18_org1 geomButtOrOver(ngate_18_org1 RH))  ;
ngate_18 = geomAndNot(ngate_18_org MAC)  ; 1.8v NMOS
;
;* Define device -- nmos nch_18_dnw
dngate_18a = geomAnd(ngate_18b DNW)  ;
dngate_18_org1 = geomAndNot(dngate_18a VTL_N)  ;
dngate_18_org = geomAndNot(dngate_18_org1 geomButtOrOver(dngate_18_org1 RH))  ;
dngate_18 = geomAndNot(dngate_18_org MAC)  ; 1.8v NMOS on DNW
;
;* Define device -- nmos nch_18_mac
ngate_18_mac = geomAnd(ngate_18_org MAC)  ; 1.8v NMOS MAC
;
;* Define device -- nmos nch_18_dnw_mac
dngate_18_mac = geomAnd(dngate_18_org MAC)  ; 1.8v NMOS on DNW MAC
;
;* Define device -- nmos nch_esd18
ngate_esd18_org1 = geomButtOrOver(ngate_18_org1 RH)  ;
ngate_esd18_org = geomButtOrOver(ngate_esd18_org1 RPO)  ;
ngate_esd18 = geomAndNot(ngate_esd18_org MAC)  ; 1.8v esd non-LDD NMOS
;
;* Define device -- nmos nch_esd18_dnw
dngate_esd18_org1 = geomButtOrOver(dngate_18_org1 RH)  ;
dngate_esd18_org = geomButtOrOver(dngate_esd18_org1 RPO)  ;
dngate_esd18 = geomAndNot(dngate_esd18_org MAC)  ; 1.8v esd non-LDD NMOS on DNW
;
;* Define device -- nmos nch_esd18_mac
ngate_esd18_mac = geomAnd(ngate_esd18_org MAC)  ; 1.8v esd non-LDD NMOS MAC
;
;* Define device -- nmos nch_esd18_dnw_mac
dngate_esd18_mac = geomAnd(dngate_esd18_org MAC)  ; 1.8v esd non-LDD NMOS on DNW MAC
;
;* Define device -- nmos nch_25
ngate_25d = geomAndNot(ngate_25c geomButtOrOver(ngate_25c HVD_N))  ;
ngate_25e = geomAndNot(ngate_25d geomButtOrOver(ngate_25d HVD_NW))  ;
ngate_25_org = geomAndNot(ngate_25e VTL_N)  ;
ngate_25ud1 = geomAnd(ngate_25_org OD25_18)  ;
ngate_25z = geomAndNot(ngate_25_org ngate_25ud1)  ;
ngate_25od1 = geomAnd(ngate_25_org OD25_33)  ;
ngate_25y = geomAndNot(ngate_25z ngate_25od1)  ;
ngate_25 = geomAndNot(ngate_25y MAC)  ; 2.5v NMOS
;
;* Define device -- nmos nch_25_dnw
dngate_25a = geomAnd(ngate_25b DNW)  ;
dngate_25_org = geomAndNot(dngate_25a VTL_N)  ;
dngate_25ud1 = geomAnd(dngate_25_org OD25_18)  ;
dngate_25z = geomAndNot(dngate_25_org dngate_25ud1)  ;
dngate_25od1 = geomAnd(dngate_25_org OD25_33)  ;
dngate_25y = geomAndNot(dngate_25z dngate_25od1)  ;
dngate_25 = geomAndNot(dngate_25y MAC)  ; 2.5v NMOS on DNW
;
;* Define device -- nmos nch_25_mac
ngate_25_mac = geomAnd(ngate_25y MAC)  ; 2.5v NMOS MAC
;
;* Define device -- nmos nch_25_dnw_mac
dngate_25_mac = geomAnd(dngate_25y MAC)  ; 2.5v NMOS on DNW MAC
;
;* Define device -- nmos nch_25ud
ngate_25ud = geomAndNot(ngate_25ud1 MAC)  ; 2.5v NMOS under_drive 1.8v
;
;* Define device -- nmos nch_25_dnwud
dngate_25ud = geomAndNot(dngate_25ud1 MAC)  ; 2.5v NMOS on DNW under_drive 1.8v
;
;* Define device -- nmos nch_25ud_mac
ngate_25ud_mac = geomAnd(ngate_25ud1 MAC)  ; 2.5v NMOS under_drive 1.8v MAC
;
;* Define device -- nmos nch_25_dnwud_mac
dngate_25ud_mac = geomAnd(dngate_25ud1 MAC)  ; 2.5v NMOS on DNW under_drive 1.8v MAC
;
;* Define device -- nmos nch_25od
ngate_25od = geomAndNot(ngate_25od1 MAC)  ; 2.5v NMOS over_drive 3.3v
;
;* Define device -- nmos nch_25_dnwod
dngate_25od = geomAndNot(dngate_25od1 MAC)  ; 2.5v NMOS on DNW over_drive 3.3v
;
;* Define device -- nmos nch_25od_mac
ngate_25od_mac = geomAnd(ngate_25od1 MAC)  ; 2.5v NMOS over_drive 3.3v MAC
;
;* Define device -- nmos nch_25_dnwod_mac
dngate_25od_mac = geomAnd(dngate_25od1 MAC)  ; 2.5v NMOS on DNW over_drive 3.3v MAC
;
;* Define device -- lddn nch_hv25_sdnw
ngate_25hvd = geomAndNot(ngate_25hvd_org MAC)  ; HVD NMOS by DNW approach
;
;* Define device -- lddn nch_hv25_snw
ngate_25hvdw = geomAndNot(ngate_25hvdw_org MAC)  ; HVD NMOS by NW approach
;
;* Define device -- lddn nch_hv25_sdnw_mac
ngate_25hvd_mac = geomAnd(ngate_25hvd_org MAC)  ; HVD MACRO NMOS by DNW approach
;
;* Define device -- lddn nch_hv25_snw_mac
ngate_25hvdw_mac = geomAnd(ngate_25hvdw_org MAC)  ; HVD MACRO NMOS by NW approach
;
;* Define device -- nmos nch_33
ngate_33a = geomAnd(tngate1 OD33)  ;
ngate_33b = geomAndNot(ngate_33a NT_Ni)  ;
ngate_33c = geomAndNot(ngate_33b DNW)  ;
ngate_33_org = geomAndNot(ngate_33c VTL_N)  ;
ngate_33 = geomAndNot(ngate_33_org MAC)  ; 3.3v NMOS
;
;* Define device -- nmos nch_33_dnw
dngate_33a = geomAnd(ngate_33b DNW)  ;
dngate_33_org = geomAndNot(dngate_33a VTL_N)  ;
dngate_33 = geomAndNot(dngate_33_org MAC)  ; 3.3v NMOS on DNW
;
;* Define device -- nmos nch_33_mac
ngate_33_mac = geomAnd(ngate_33_org MAC)  ; 3.3v NMOS MAC
;
;* Define device -- nmos nch_33_dnw_mac
dngate_33_mac = geomAnd(dngate_33_org MAC)  ; 3.3v NMOS on DNW MAC
;
;* Define device -- nmos nch_na25
ngate_25na1 = geomAnd(ngate_25a NT_Ni)  ;
ngate_25na2 = geomAndNot(ngate_25na1 VTL_N)  ;
ngate_25na_org = geomAndNot(ngate_25na2 DNW)  ;
ngate_25naud1 = geomAnd(ngate_25na_org OD25_18)  ;
ngate_25naz = geomAndNot(ngate_25na_org ngate_25naud1)  ;
ngate_25naod1 = geomAnd(ngate_25na_org OD25_33)  ;
ngate_25nay = geomAndNot(ngate_25naz ngate_25naod1)  ;
ngate_25na = geomAndNot(ngate_25nay MAC)  ; 2.5v Native NMOS
;
;* Define device -- nmos nch_na25_mac
ngate_25na_mac = geomAnd(ngate_25nay MAC)  ; 2.5v Native NMOS MAC
;
;* Define device -- nmos nch_na25ud
ngate_25naud = geomAndNot(ngate_25naud1 MAC)  ; 2.5v Native NMOS under_drive 1.8v
;
;* Define device -- nmos nch_na25ud_mac
ngate_25naud_mac = geomAnd(ngate_25naud1 MAC)  ; 2.5v Native NMOS under_drive 1.8v MAC
;
;* Define device -- nmos nch_na25od
ngate_25naod = geomAndNot(ngate_25naod1 MAC)  ; 2.5v Native NMOS over_drive 3.3v
;
;* Define device -- nmos nch_na25od_mac
ngate_25naod_mac = geomAnd(ngate_25naod1 MAC)  ; 2.5v Native NMOS over_drive 3.3v MAC
;
;* Define device -- nmos nch_na18
ngate_18na1 = geomAnd(ngate_18a NT_Ni)  ;
ngate_18na2 = geomAndNot(ngate_18na1 VTL_N)  ;
ngate_18na_org = geomAndNot(ngate_18na2 DNW)  ;
ngate_18na = geomAndNot(ngate_18na_org MAC)  ; 1.8v Native NMOS
;
;* Define device -- nmos nch_na18_mac
ngate_18na_mac = geomAnd(ngate_18na_org MAC)  ; 1.8v Native NMOS MAC
;
;* Define device -- nmos nch_na33
ngate_33na1 = geomAnd(ngate_33a NT_Ni)  ;
ngate_33na2 = geomAndNot(ngate_33na1 VTL_N)  ;
ngate_33na_org = geomAndNot(ngate_33na2 DNW)  ;
ngate_33na = geomAndNot(ngate_33na_org MAC)  ; 3.3v Native NMOS
;
;* Define device -- nmos nch_na33_mac
ngate_33na_mac = geomAnd(ngate_33na_org MAC)  ; 3.3v Native NMOS MAC
;
;* Define device -- pmos pch
tpgate2 = geomAndNot(tpgate1 OD25)  ;
tpgate3 = geomAndNot(tpgate2 OD33)  ;
tpgate4 = geomAndNot(tpgate3 OD18)  ;
plvgate_org1 = geomAnd(tpgate4 VTL_P)  ;
pgate1 = geomAndNot(tpgate4 plvgate_org1)  ;
phvgate1 = geomAnd(tpgate4 VTH_P)  ;
phvgate2 = geomAndNot(phvgate1 DCO)  ;
pgate2 = geomAndNot(pgate1 phvgate2)  ;
tpgate5 = geomAndNot(tpgate3 OD1T)  ;
puvgate_org1 = geomAnd(tpgate5 VTUL_P)  ;
pgate31 = geomAndNot(pgate2 puvgate_org1)  ;
puhvgate_org1 = geomAnd(tpgate4 UHVT_P)  ;
pgate3 = geomAndNot(pgate31 puhvgate_org1)  ;
pgate4 = geomAndNot(pgate3 ILVT)  ;
pgate5 = geomAndNot(pgate4 OD1T)  ;
pgate6 = geomAndNot(pgate5 DCO)  ;
pgate_org = geomCat(pgate6)  ;
pgate = geomAndNot(pgate_org MAC)  ; CORE PMOS
;
;* Define device -- pmos pch_mac
pgate_mac = geomAnd(pgate_org MAC)  ; CORE PMOS MAC
;
;* Define device -- pmos pch_hvt
phvgate_org = geomCat(phvgate2)  ;
phvgate = geomAndNot(phvgate_org MAC)  ; CORE HIGH_VT PMOS
;
;* Define device -- pmos pch_hvt_mac
phvgate_mac = geomAnd(phvgate_org MAC)  ; CORE HIGH_VT PMOS MAC
;
;* Define device -- pmos pch_lvt
plvgate_org = geomCat(plvgate_org1)  ;
plvgate = geomAndNot(plvgate_org MAC)  ; CORE LOW_VT PMOS
;
;* Define device -- pmos pch_lvt_mac
plvgate_mac = geomAnd(plvgate_org MAC)  ; CORE LOW_VT PMOS MAC
;
;* Define device -- pmos pch_uhvt
puhvgate_org = geomCat(puhvgate_org1)  ;
puhvgate = geomAndNot(puhvgate_org MAC)  ; CORE ULTRA High VT PMOS
;
;* Define device -- pmos pch_uhvt_mac
puhvgate_mac = geomAnd(puhvgate_org MAC)  ; CORE ULTRA High VT PMOS MAC
;
;* Define device -- pmos pch_ulvt
puvgate_org = geomCat(puvgate_org1)  ;
puvgate = geomAndNot(puvgate_org MAC)  ; CORE ULTRA LOW VT PMOS
;
;* Define device -- pmos pch_ulvt_mac
puvgate_mac = geomAnd(puvgate_org MAC)  ; CORE ULTRA LOW VT PMOS MAC
;
;* Define device -- pmos pch_lpg
pgatelpg1 = geomAnd(pgate5 DCO)  ;
pgatelpg = geomAndNot(pgatelpg1 VTH_P)  ; CORE LPG PMOS
;
;* Define device -- pmos pch_lpghvt
phvgatelpg = geomAnd(phvgate1 DCO)  ; CORE HIGH_VT LPG PMOS
;
;* Define device -- pmos pch_w
pgate_1ta = geomAnd(tpgate4 OD1T)  ;
pgate_1tb = geomAndNot(pgate_1ta VTL_P)  ;
pgate_1tc = geomAndNot(pgate_1tb VTH_P)  ;
pgate_1td = geomAndNot(pgate_1tc VTUL_P)  ;
pgate_1te = geomAndNot(pgate_1td CAP1TDMY)  ;
pgate_w1t = geomAndNot(pgate_1te geomButtOrOver(pgate_1te p3))  ; eDRAM pch_w   device
;
;* Define device -- pmos pch_w_lvt
pgate_1tf = geomAnd(pgate_1tc VTUL_P)  ;
pgate_1tg = geomAndNot(pgate_1tf CAP1TDMY)  ;
pgate_w1t_lvt = geomAndNot(pgate_1tg geomButtOrOver(pgate_1tg p3))  ; eDRAM pch_w_lvt device 
;
;* Define device -- pmos pch_edc
pgate_1tr = geomButtOrOver(pgate_1te p3)  ; eDRAM pch_edc device
;
;* Define device -- pmos pchpu_sr
gatenw_s = geomAnd(gate_s1 nxwell)  ; gate inside nwell
pgate_s1 = geomAnd(gatenw_s PP)  ;
pgate_s2 = geomAndNot(pgate_s1 OD25)  ;
pgate_s3 = geomAndNot(pgate_s2 OD33)  ;
pgate_s4 = geomAndNot(pgate_s3 OD18)  ;
pgate_s5 = geomAndNot(pgate_s4 VTL_P)  ;
pgate_s611 = geomAndNot(pgate_s5 VTUL_P)  ;
pgate_s612 = geomAndNot(pgate_s611 UHVT_P)  ;
pgate_s61 = geomAndNot(pgate_s612 SRAMTIMER)  ;
pgate_s62 = geomAndNot(pgate_s61 SRM14)  ;
pgate_s63 = geomAndNot(pgate_s62 SRM12)  ;
pgate_s64 = geomAndNot(pgate_s63 SRM13)  ;
pgate_s6 = geomAndNot(pgate_s64 SRM17)  ;
pgate_s_org1 = geomAndNot(pgate_s6 VTH_P)  ;
pgate_s_org2 = geomAndNot(pgate_s_org1 LPSRM10)  ;
pgate_s_org = geomAndNot(pgate_s_org2 LPSRM11)  ;
pgate_s = geomAndNot(pgate_s_org DCO)  ; SRAM PMOS
;
;* Define device -- pmos pchpu_lpgsr
pgate_slpg = geomAnd(pgate_s_org DCO)  ; SRAM LPG PMOS
;
;* Define device -- pmos pchpu_hvtsr
pgate_hvs = geomAnd(pgate_s6 VTH_P)  ; SRAM High VT PMOS
;
;* Define device -- pmos pch_timer
pgate_st = geomAnd(pgate_s612 SRAMTIMER)  ;
;
;* Define device -- pmos pchpu_dpsr
pgate_s71 = geomAndNot(pgate_s62 SRM17)  ;
pgate_s7 = geomAnd(pgate_s71 SRM12)  ;
pgate_sdp_org = geomAndNot(pgate_s7 VTH_P)  ;
pgate_sdp = geomAndNot(pgate_sdp_org DCO)  ; SRAM PMOS( 50,12 )
;
;* Define device -- pmos pchpu_lpgdpsr
pgate_sdplpg = geomAnd(pgate_sdp_org DCO)  ; SRAM LPG PMOS( 50,12 )
;
;* Define device -- pmos pchpu_hvtdpsr
pgate_hvsdp = geomAnd(pgate_s7 VTH_P)  ; SRAM High VT PMOS( 50,12 )
;
;* Define device -- pmos pchpu_dphcsr
pgate_s8 = geomAnd(pgate_s63 SRM13)  ;
pgate_sdphc = geomAndNot(pgate_s8 VTH_P)  ; SRAM PMOS( 50,13 )
;
;* Define device -- pmos pchpu_hvtdphcsr
pgate_hvsdphc = geomAnd(pgate_s8 VTH_P)  ; SRAM High VT PMOS( 50,13 )
;
;* Define device -- pmos pchpu_ulpsr
pgate_s10 = geomAnd(pgate_s62 SRM17)  ;
pgate_s11 = geomAndNot(pgate_s10 SRM12)  ;
pgate_sulp = geomAnd(pgate_s11 VTH_P)  ; SRAM ULP PMOS( 50,17 )
;
;* Define device -- pmos pchpu_ulpdpsr
pgate_s12 = geomAnd(pgate_s10 SRM12)  ;
pgate_sdpulp = geomAnd(pgate_s12 VTH_P)  ; SRAM ULP PMOS( 50,17 ) ( 50,12 )  
;
;* Define device -- pmos pchpu_lpgtpsr
pgate_s13 = geomAnd(pgate_s61 SRM14)  ;
pgate_stp_org = geomAndNot(pgate_s13 VTH_P)  ;
pgate_stplpg = geomAnd(pgate_stp_org DCO)  ; SRAM LPG PMOS( 50,14 )
;
;* Define device -- pmos pchpu_wosr
pgate_swo = geomAnd(pgate_s_org2 LPSRM11)  ; SRAM PMOS ( 50,11 ) of N65LP
;
;* Define device -- pmos pchpu_wisr
pgate_swi1 = geomAndNot(pgate_s_org1 LPSRM11)  ;
pgate_swi = geomAnd(pgate_swi1 LPSRM10)  ; SRAM PMOS ( 50,10 ) of LP
;
;* Define device -- pmos pch_mlvt
pilvtgate_org1 = geomAnd(pgate3 ILVT)  ;
pilvtgate_org = geomCat(pilvtgate_org1)  ;
pilvtgate = geomAndNot(pilvtgate_org MAC)  ; LP PMOS MLVT device
;
;* Define device -- pmos pch_mlvt_mac
pilvtgate_mac = geomAnd(pilvtgate_org MAC)  ; LP PMOS MLVT device MAC
;
;* Define device -- pmos pch_18
pgate_18a = geomAnd(tpgate1 OD18)  ;
pgate_18_org = geomAndNot(pgate_18a VTL_P)  ;
pgate_18 = geomAndNot(pgate_18_org MAC)  ; 1.8v PMOS
;
;* Define device -- pmos pch_18_mac
pgate_18_mac = geomAnd(pgate_18_org MAC)  ; 1.8v PMOS MAC
;
;* Define device -- pmos pch_25
pgate_25b = geomAndNot(pgate_25a geomButtOrOver(pgate_25a HVD_P))  ;
pgate_25_org = geomAndNot(pgate_25b VTL_P)  ;
pgate_25ud1 = geomAnd(pgate_25_org OD25_18)  ;
pgate_25z = geomAndNot(pgate_25_org pgate_25ud1)  ;
pgate_25od1 = geomAnd(pgate_25_org OD25_33)  ;
pgate_25y = geomAndNot(pgate_25z pgate_25od1)  ;
pgate_25 = geomAndNot(pgate_25y MAC)  ; 2.5v PMOS
;
;* Define device -- pmos pch_25_mac
pgate_25_mac = geomAnd(pgate_25y MAC)  ; 2.5v PMOS MAC
;
;* Define device -- pmos pch_25ud
pgate_25ud = geomAndNot(pgate_25ud1 MAC)  ; 2.5v PMOS under_drive 1.8v
;
;* Define device -- pmos pch_25ud_mac
pgate_25ud_mac = geomAnd(pgate_25ud1 MAC)  ; 2.5v PMOS under_drive 1.8v MAC
;
;* Define device -- pmos pch_25od
pgate_25od = geomAndNot(pgate_25od1 MAC)  ; 2.5v PMOS over_drive 3.3v
;
;* Define device -- pmos pch_25od_mac
pgate_25od_mac = geomAnd(pgate_25od1 MAC)  ; 2.5v PMOS over_drive 3.3v MAC
;
;* Define device -- lddp pch_hv25_spw
pgate_25hvd = geomAndNot(pgate_25hvd_org MAC)  ;
;
;* Define device -- lddp pch_hv25_spw_mac
pgate_25hvd_mac = geomAnd(pgate_25hvd_org MAC)  ;
;
;* Define device -- pmos pch_33
pgate_33a = geomAnd(tpgate1 OD33)  ;
pgate_33_org = geomAndNot(pgate_33a VTL_P)  ;
pgate_33 = geomAndNot(pgate_33_org MAC)  ; 3.3v PMOS
;
;* Define device -- pmos pch_33_mac
pgate_33_mac = geomAnd(pgate_33_org MAC)  ; 3.3v PMOS MAC
;
;* Define device -- diode pdio
pdio1a = geomAnd(tpdiff DIODMY)  ;
pdio1 = geomAndNot(pdio1a HIADMY)  ;
pdio2 = geomAnd(pdio1 nxwell)  ;
pdio3 = geomAndNot(pdio2 OD25)  ;
pdio4 = geomAndNot(pdio3 OD33)  ;
pdio5 = geomAndNot(pdio4 OD18)  ;
pdio8 = geomAndNot(pdio5 VTL_P)  ;
cpdio1 = geomAndNot(pdio8 VTH_P)  ;
cpdio2 = geomAndNot(cpdio1 ILVT)  ;
cpdio3 = geomAndNot(cpdio2 DCO)  ;
cpdio = geomAndNot(cpdio3 OD1T)  ; CORE P+/NW DIODE
;
;* Define device -- diode pdio_lpg
cpdio4 = geomAnd(cpdio2 DCO)  ;
cpdiolpg = geomAndNot(cpdio4 OD1T)  ; CORE P+/NW LPG DIODE
;
;* Define device -- diode ndio
ndio1a = geomAnd(tndiff DIODMY)  ;
ndio1 = geomAndNot(ndio1a HIADMY)  ;
ndio2 = geomAnd(ndio1 psub)  ;
ndio3 = geomAndNot(ndio2 OD25)  ;
ndio4 = geomAndNot(ndio3 OD33)  ;
ndio5 = geomAndNot(ndio4 OD18)  ;
ndio6 = geomAndNot(ndio5 NT_Ni)  ;
ndio9 = geomAndNot(ndio6 VTL_N)  ;
cndio1 = geomAndNot(ndio9 VTH_N)  ;
cndio2 = geomAndNot(cndio1 ILVT)  ;
cndio3 = geomAndNot(cndio2 DCO)  ;
cndio = geomAndNot(cndio3 OD1T)  ; CORE N+/PW DIODE
;
;* Define device -- diode ndio_lpg
cndio4 = geomAnd(cndio2 DCO)  ;
cndiolpg = geomAndNot(cndio4 OD1T)  ; CORE N+/PW LPG DIODW
;
;* Define device -- diode pdio_w
epdio = geomAnd(cpdio3 OD1T)  ; eDRAM P+/NW DIODE
;
;* Define device -- diode ndio_w
endio = geomAnd(cndio3 OD1T)  ; eDRAM N+/PW DIODE
;
;* Define device -- diode nwdio
DIONW = geomOutside(DIODMY tpdiff)  ;
nwdio1 = geomAnd(nxwell DIONW)  ;
cnwdio1 = geomAndNot(nwdio1 OD25)  ;
cnwdio2 = geomAndNot(cnwdio1 OD33)  ;
cnwdio = geomAndNot(cnwdio2 OD18)  ; CORE NW/PW diode
;
;* Define device -- diode pdio_hvt
pdio6 = geomAndNot(pdio5 DCO)  ;
pdioh = geomAnd(pdio6 VTH_P)  ; CORE P+/NW HIGH_VT DIODE
;
;* Define device -- diode pdio_lpghvt
pdio7 = geomAnd(pdio5 DCO)  ;
pdiohlpg = geomAnd(pdio7 VTH_P)  ; CORE P+/NW HIGH_VT LPG DIODE
;
;* Define device -- diode ndio_hvt
ndio7 = geomAndNot(ndio6 DCO)  ;
ndioh = geomAnd(ndio7 VTH_N)  ; CORE N+/PW HIGH_VT DIODE
;
;* Define device -- diode ndio_lpghvt
ndio8 = geomAnd(ndio6 DCO)  ; CORE N+/PW HIGH_VT LPG DIODE
ndiohlpg = geomAnd(ndio8 VTH_N)  ; CORE N+/PW HIGH_VT LPG DIODE
;
;* Define device -- diode ndio_lvt
ndiol = geomAnd(ndio6 VTL_N)  ; CORE N+/PW LOW_VT DIODE
;
;* Define device -- diode pdio_mlvt
pdioilvt = geomAnd(cpdio1 ILVT)  ; LP PDIO MLVD DIODE
;
;* Define device -- diode ndio_mlvt
cndioilvt = geomAnd(cndio1 ILVT)  ; CORE LP N+/PW MLVT DIODE
;
;* Define device -- diode pdio_lvt
pdiol = geomAnd(pdio5 VTL_P)  ; CORE P+/NW LOW_VT DIODE
;
;* Define device -- diode pdio_18
ipdio_18 = geomAnd(pdio2 OD18)  ; 1.8v P+/NW DIODE
;
;* Define device -- diode ndio_18
ndio_18a = geomAnd(ndio2 OD18)  ;
indio_18 = geomAndNot(ndio_18a NT_Ni)  ; 1.8v N+/PW diode
;
;* Define device -- diode pdio_25
ipdio_25_org1 = geomAnd(pdio2 OD25)  ;
ipdio_25_org = geomAndNot(ipdio_25_org1 geomButtOrOver(ipdio_25_org1 HVD_P))  ;
ipdio_25z = geomAndNot(ipdio_25_org OD25_18)  ;
ipdio_25 = geomAndNot(ipdio_25z OD25_33)  ; 2.5v P+/NW DIODE
;
;* Define device -- diode ndio_25
ndio_25a = geomAnd(ndio2 OD25)  ;
ndio_25b = geomAndNot(ndio_25a geomButtOrOver(ndio_25a HVD_N))  ;
ndio_25c = geomAndNot(ndio_25b geomButtOrOver(ndio_25b HVD_NW))  ;
indio_25_org = geomAndNot(ndio_25c NT_Ni)  ; 2.5v N+/PW diode
indio_25z = geomAndNot(indio_25_org OD25_18)  ;
indio_25 = geomAndNot(indio_25z OD25_33)  ; 2.5v N+/PW DIODE
;
;* Define device -- diode pdio_25ud
ipdio_25ud = geomAnd(ipdio_25_org OD25_18)  ; 2.5v P+/NW DIODE under_drive 1.8v
;
;* Define device -- diode ndio_25ud
indio_25ud = geomAnd(indio_25_org OD25_18)  ; 2.5v N+/PW DIODE under_drive 1.8v
;
;* Define device -- diode pdio_25od
ipdio_25od = geomAnd(ipdio_25_org OD25_33)  ; 2.5v P+/NW DIODE under_drive 3.3v
;
;* Define device -- diode ndio_25od
indio_25od = geomAnd(indio_25_org OD25_33)  ; 2.5v N+/PW DIODE onder_drive 3.3v
;
;* Define device -- diode pdio_33
ipdio_33 = geomAnd(pdio2 OD33)  ; 3.3v P+/NW DIODE
;
;* Define device -- diode ndio_33
ndio_33a = geomAnd(ndio2 OD33)  ;
indio_33 = geomAndNot(ndio_33a NT_Ni)  ; 3.3v N+/PW diode
;
;* Define device -- diode nwdio_33
inwdio_33 = geomAnd(nwdio1 OD33)  ; 3.3v NW/PW diode
;
;* Define device -- diode nwdio_25
inwdio_25 = geomAnd(nwdio1 OD25)  ; 2.5v NW/PW diode
;
;* Define device -- diode nwdio_18
inwdio_18 = geomAnd(nwdio1 OD18)  ; 1.8v NW/PW diode
;
;* Define device -- diode ndio_na
nndio1 = geomAnd(ndio5 NT_Ni)  ;
cndion1 = geomAndNot(nndio1 VTH_N)  ;
cndion2 = geomAndNot(cndion1 DCO)  ;
cndion = geomAndNot(cndion2 VTL_N)  ;
;
;* Define device -- diode ndio_lpgna
cndion3 = geomAnd(cndion1 DCO)  ;
cndionlpg = geomAndNot(cndion3 VTL_N)  ; CORE N+/PW Native LPG DIODE
;
;* Define device -- diode ndio_na18
ndio_18na = geomAnd(ndio_18a NT_Ni)  ; 1.8v N+/PW native diode
;
;* Define device -- diode ndio_na25
ndio_25na_org = geomAnd(ndio_25c NT_Ni)  ;
ndio_25naz = geomAndNot(ndio_25na_org OD25_18)  ;
ndio_25na = geomAndNot(ndio_25naz OD25_33)  ; 2.5v N+/PW native diode
;
;* Define device -- diode ndio_na25ud
ndio_25naud = geomAnd(ndio_25na_org OD25_18)  ; 2.5v N+/PW native diode under_drive 1.8v
;
;* Define device -- diode ndio_na25od
ndio_25naod = geomAnd(ndio_25na_org OD25_33)  ; 2.5v N+/PW native diode over_drive 3.3v
;
;* Define device -- diode ndio_na33
ndio_33na = geomAnd(ndio_33a NT_Ni)  ; 3.3v N+/PW native diode
;
;* Define device -- bjt pnp10
cemit10_org = drc(cemit1 99.999 < area < 100.001) ;
cemit10_orgi = geomAndNot(cemit10_org BJTDMY1)  ;
cemit10 = geomAndNot(cemit10_orgi MAC)  ;
;
;* Define device -- bjt pnp5
cemit5_org = drc(cemit1 24.999 < area < 25.001) ;
cemit5_orgi = geomAndNot(cemit5_org BJTDMY1)  ;
cemit5 = geomAndNot(cemit5_orgi MAC)  ;
;
;* Define device -- bjt pnp2
cemit2_org = drc(cemit1 3.999 < area < 4.001) ;
cemit2_orgi = geomAndNot(cemit2_org BJTDMY1)  ;
cemit2 = geomAndNot(cemit2_orgi MAC)  ;
;
;* Define device -- bjt npn10
cnemit10_org = drc(cnemit1 99.999 < area < 100.001) ;
cnemit10_orgi = geomAndNot(cnemit10_org BJTDMY1)  ;
cnemit10 = geomAndNot(cnemit10_orgi MAC)  ;
;
;* Define device -- bjt npn5
cnemit5_org = drc(cnemit1 24.999 < area < 25.001) ;
cnemit5_orgi = geomAndNot(cnemit5_org BJTDMY1)  ;
cnemit5 = geomAndNot(cnemit5_orgi MAC)  ;
;
;* Define device -- bjt npn2
cnemit2_org = drc(cnemit1 3.999 < area < 4.001) ;
cnemit2_orgi = geomAndNot(cnemit2_org BJTDMY1)  ;
cnemit2 = geomAndNot(cnemit2_orgi MAC)  ;
;
;* Define device -- bjt pnp10_s
cemit10_orgs = geomAnd(cemit10_org BJTDMY1)  ;
cemit10s = geomAndNot(cemit10_orgs MAC)  ;
;
;* Define device -- bjt pnp5_s
cemit5_orgs = geomAnd(cemit5_org BJTDMY1)  ;
cemit5s = geomAndNot(cemit5_orgs MAC)  ;
;
;* Define device -- bjt pnp2_s
cemit2_orgs = geomAnd(cemit2_org BJTDMY1)  ;
cemit2s = geomAndNot(cemit2_orgs MAC)  ;
;
;* Define device -- bjt npn10_s
cnemit10_orgs = geomAnd(cnemit10_org BJTDMY1)  ;
cnemit10s = geomAndNot(cnemit10_orgs MAC)  ;
;
;* Define device -- bjt npn5_s
cnemit5_orgs = geomAnd(cnemit5_org BJTDMY1)  ;
cnemit5s = geomAndNot(cnemit5_orgs MAC)  ;
;
;* Define device -- bjt npn2_s
cnemit2_orgs = geomAnd(cnemit2_org BJTDMY1)  ;
cnemit2s = geomAndNot(cnemit2_orgs MAC)  ;
;
;* Define device -- bjt pnp10_mis
cemit10_mac = geomAnd(cemit10_orgi MAC)  ;
;
;* Define device -- bjt pnp5_mis
cemit5_mac = geomAnd(cemit5_orgi MAC)  ;
;
;* Define device -- bjt pnp2_mis
cemit2_mac = geomAnd(cemit2_orgi MAC)  ;
;
;* Define device -- bjt npn10_mis
cnemit10_mac = geomAnd(cnemit10_orgi MAC)  ;
;
;* Define device -- bjt npn5_mis
cnemit5_mac = geomAnd(cnemit5_orgi MAC)  ;
;
;* Define device -- bjt npn2_mis
cnemit2_mac = geomAnd(cnemit2_orgi MAC)  ;
;
;* Define device -- bjt pnp10_s_mis
cemit10s_mac = geomAnd(cemit10_orgs MAC)  ;
;
;* Define device -- bjt pnp5_s_mis
cemit5s_mac = geomAnd(cemit5_orgs MAC)  ;
;
;* Define device -- bjt pnp2_s_mis
cemit2s_mac = geomAnd(cemit2_orgs MAC)  ;
;
;* Define device -- bjt npn10_s_mis
cnemit10s_mac = geomAnd(cnemit10_orgs MAC)  ;
;
;* Define device -- bjt npn5_s_mis
cnemit5s_mac = geomAnd(cnemit5_orgs MAC)  ;
;
;* Define device -- bjt npn2_s_mis
cnemit2s_mac = geomAnd(cnemit2_orgs MAC)  ;
;
;* Define device -- c CM
mim_r1 = geomAnd(crown p3)  ;
mim_r2 = geomAnd(mim_r1 OD)  ;
mim_r3 = geomAndNot(mim_r2 geomButtOrOver(mim_r2 RPO))  ;
mim_r = geomButtOrOver(mim_r3 blc)  ;
;
;* Define device -- xdev nmoscap
vargt1 = geomAnd(gatenw NP)  ;
VAR_noRF = geomAndNot(VAR geomButtOrOver(VAR RFDMY))  ;
vargt2 = geomAnd(vargt1 VAR_noRF)  ;
vargt3 = geomAndNot(vargt2 OD18)  ;
vargt4 = geomAndNot(vargt3 OD25)  ;
vargt5 = geomAndNot(vargt4 DCO)  ;
vargt7 = geomAndNot(vargt5 OD33)  ;
vargt = geomAndNot(vargt7 OD1T)  ; Varactor on thin oxide
;
;* Define device -- xdev nmoscap_lpg
vargt6 = geomAnd(vargt4 DCO)  ;
vargtlpg = geomAndNot(vargt6 OD33)  ; LPG Varactor on thin oxide
;
;* Define device -- xdev nmoscap_25
vargt_25 = geomAnd(vargt2 OD25)  ; Varactor on 2.5v thick oxide
;
;* Define device -- xdev nmoscap_18
vargt_18 = geomAnd(vargt2 OD18)  ; Varactor on 1.8v thick oxide
;
;* Define device -- xdev nmoscap_33
vargt_33 = geomAnd(vargt2 OD33)  ; Varactor on 3.3v thick oxide
;
;* Define device -- xdev rnwsti
trwell = geomAnd(NWDMY NW)  ; N-well resistor layer
drpo = geomAnd(diff RPO)  ;
nwsti_r1 = geomAndNot(trwell drpo)  ; NWDMY*NW-RPO-diff --> nwsti
nwsti_r = geomButtOrOver(nwsti_r1 NWDMYi)  ; NWDMY*NW --> nwsti
;
;* Define device -- xdev rnwod
nwod_r1 = geomAnd(trwell drpo)  ;
nwod_r = geomButtOrOver(nwod_r1 NWDMYi)  ; NWDMY*NW*RPO*diff --> nwod (2-Terminals)
;
;* Define device -- xdev rppolywo
rppolywo_r1 = geomAnd(rpolywo PP)  ; P+POLY resistor w/o silicide
RPDMYi_noRF = geomAndNot(RPDMYi geomButtOrOver(RPDMYi RFDMY))  ;
rppolywo_r = geomButtOrOver(rppolywo_r1 RPDMYi_noRF)  ;  P+POLY resistor w/o silicide (2-Terminals)
;
;* Define device -- xdev rnpolywo
rnpolywo_r1 = geomAnd(rpolywo NP)  ; N+POLY resistor w/o silicide
rnpolywo_r = geomButtOrOver(rnpolywo_r1 RPDMYi_noRF)  ;  N+POLY resistor w/o silicide (2-Terminals)
;
;* Define device -- xdev rpodwo
rpodwo_r11 = geomAnd(rodwo PP)  ;
rpodwo_r1 = geomAnd(rpodwo_r11 NW)  ;
rpodwo_r = geomButtOrOver(rpodwo_r1 RPDMYi)  ; P+OD resistor w/o silicide (2-Terminals)
;
;* Define device -- xdev rnodwo
rnodwo_r11 = geomAnd(rodwo NP)  ;
rnodwo_r1 = geomAndNot(rnodwo_r11 NW)  ;
rnodwo_r = geomButtOrOver(rnodwo_r1 RPDMYi)  ; N+OD resistor w/o silicide (2-Terminals)
;
;* Define device -- xdev rppolyl
rppoly = geomAnd(rpoly PP)  ; ALL P+POLY resistor w/i silicide
rppoly_edge = geomGetEdge(rppoly inside POI)  ;
l_rppoly_eg = geomGetLength(rppoly_edge 2 <= keep < 99999999) ;
l_rppoly_eg_edge_su001=geomSize(l_rppoly_eg 0.005 edges);
l_rppoly = geomButtOrCoin( rppoly l_rppoly_eg_edge_su001 )  ;
rppolyl_r = geomButtOrOver(l_rppoly RPDMYi_noRF)  ; P+POLY resistor w/i silicide >=  2 (2-Terminals)
;
;* Define device -- xdev rnpolyl
rnpoly = geomAnd(rpoly NP)  ; ALL N+POLY resistor w/i silicide
rnpoly_edge = geomGetEdge(rnpoly inside POI)  ;
l_rnpoly_eg = geomGetLength(rnpoly_edge 2 <= keep < 99999999) ;
l_rnpoly_eg_edge_su001=geomSize(l_rnpoly_eg 0.005 edges);
l_rnpoly = geomButtOrCoin( rnpoly l_rnpoly_eg_edge_su001 )  ;
rnpolyl_r = geomButtOrOver(l_rnpoly RPDMYi)  ; N+POLY resistor w/i silicide >=  2 (2-Terminals)
;
;* Define device -- xdev rpodl
rpod1 = geomAnd(rod PP)  ; P+OD resistor w/i silicide
rpod = geomAnd(rpod1 NW)  ; P+OD resistor w/i silicide
rpod_edge = geomGetEdge(rpod inside diff)  ;
l_rpod = geomGetLength(rpod_edge 2 <= keep < 99999999) ;
l_rpod_edge_su001=geomSize(l_rpod 0.005 edges);
rpodl_r1 = geomButtOrCoin( rpod l_rpod_edge_su001 )  ;
rpodl_r = geomButtOrOver(rpodl_r1 RPDMYi)  ; P+OD resistor w/i silicide >= 2 (2-Terminals)
;
;* Define device -- xdev rnodl
rnod1 = geomAnd(rod NP)  ; ALL N+OD resistor w/i silicide
rnod = geomAndNot(rnod1 NW)  ; ALL N+OD resistor w/i silicide
rnod_edge = geomGetEdge(rnod inside diff)  ;
l_rnod = geomGetLength(rnod_edge 2 <= keep < 99999999) ;
l_rnod_edge_su001=geomSize(l_rnod 0.005 edges);
rnodl_r1 = geomButtOrCoin( rnod l_rnod_edge_su001 )  ;
rnodl_r = geomButtOrOver(rnodl_r1 RPDMYi)  ; N+OD resistor w/i silicide >= 2  (2-Terminals)
;
;* Define device -- xdev rppolys
s_rppoly = geomAndNot(rppoly l_rppoly)  ;
rppolys_r = geomButtOrOver(s_rppoly RPDMYi_noRF)  ; P+POLY resistor w/i silicide < 2 (2-Terminals)
;
;* Define device -- xdev rnpolys
s_rnpoly = geomAndNot(rnpoly l_rnpoly)  ;
rnpolys_r = geomButtOrOver(s_rnpoly RPDMYi)  ; N+POLY resistor w/i silicide < 2 (2-Terminals)
;
;* Define device -- xdev rpods
rpods_r1 = geomAndNot(rpod rpodl_r1)  ;
rpods_r = geomButtOrOver(rpods_r1 RPDMYi)  ; P+OD resistor w/i silicide < 2 (2-Terminals)
;
;* Define device -- xdev rnods
rnods_r1 = geomAndNot(rnod rnodl_r1)  ;
rnods_r = geomButtOrOver(rnods_r1 RPDMYi)  ; N+OD resistor w/i silicide < 2  (2-Terminals)
;
;* Define device -- xdev rnwsti_m
nwsti_mr = geomButtOrOver(nwsti_r1 NWDMY1)  ; NWDMY*NW --> nwsti (3-Terminals)
;
;* Define device -- xdev rnwod_m
nwod_mr = geomButtOrOver(nwod_r1 NWDMY1)  ; NWDMY*NW*RPO*diff --> nwod (3-Terminals)
;
;* Define device -- xdev rppolywo_m
RPDMY1_noRF = geomAndNot(RPDMY1 geomButtOrOver(RPDMY1 RFDMY))  ;
rppolywo_d = geomButtOrOver(rppolywo_r1 RPDMY1_noRF)  ;  P+POLY resistor w/o silicide (3-Terminals)
;
;* Define device -- xdev rnpolywo_m
rnpolywo_d = geomButtOrOver(rnpolywo_r1 RPDMY1_noRF)  ;  N+POLY resistor w/o silicide (3-Terminals)
;
;* Define device -- xdev rppolyl_m
rppolyl_d1 = geomAndNot(l_rppoly rppolyl_r)  ;
rppolyl_d = geomButtOrOver(rppolyl_d1 RPDMY1_noRF)  ; P+POLY resistor w/i silicide >=  2 (3-Terminals)
;
;* Define device -- xdev rnpolyl_m
rnpolyl_d1 = geomAndNot(l_rnpoly rnpolyl_r)  ;
rnpolyl_d = geomButtOrOver(rnpolyl_d1 RPDMY1)  ; N+POLY resistor w/i silicide >=  2 (3-Terminals)
;
;* Define device -- xdev rppolys_m
rppolys_d1 = geomAndNot(s_rppoly rppolys_r)  ;
rppolys_d = geomButtOrOver(rppolys_d1 RPDMY1_noRF)  ; P+POLY resistor w/i silicide < 2 (3-Terminals)
;
;* Define device -- xdev rnpolys_m
rnpolys_d1 = geomAndNot(s_rnpoly rnpolys_r)  ;
rnpolys_d = geomButtOrOver(rnpolys_d1 RPDMY1)  ; N+POLY resistor w/i silicide < 2 (3-Terminals)
;
;* Define device -- xdev rpodwo_m
rpodwo_mr = geomButtOrOver(rpodwo_r1 RPDMY1)  ; P+OD resistor w/o silicide (3-Terminals)
;
;* Define device -- xdev rnodwo_m
rnodwo_mr = geomButtOrOver(rnodwo_r1 RPDMY1)  ; N+OD resistor w/o silicide (3-Terminals)
;
;* Define device -- xdev rpodl_m
rpodl_mr = geomButtOrOver(rpodl_r1 RPDMY1)  ; P+OD resistor w/i silicide >= 2 (3-Terminals)
;
;* Define device -- xdev rnodl_m
rnodl_mr = geomButtOrOver(rnodl_r1 RPDMY1)  ; N+OD resistor w/i silicide >= 2  (3-Terminals)
;
;* Define device -- xdev rpods_m
rpods_mr = geomButtOrOver(rpods_r1 RPDMY1)  ; P+OD resistor w/i silicide < 2 (3-Terminals)
;
;* Define device -- xdev rnods_m
rnods_mr = geomButtOrOver(rnods_r1 RPDMY1)  ; N+OD resistor w/i silicide < 2  (3-Terminals)
;
;* Define device -- xdev dnwpsub
dnwdio_b = geomButtOrOver(nxwell DNW)  ;
dnwdio_a = geomInside(nxwell DNW)  ;
dnwdio_k = geomAndNot(dnwdio_b dnwdio_a)  ;
dnwdio1 = geomButtOrOver(DNW dnwdio_k)  ;
dnwdio = geomAndNot(dnwdio1 rfdmy56)  ;
;
;* Define device -- xdev pwdnw
rwdio1 = geomAndNot(DNW nxwell)  ;
rwdio2 = geomAndNot(rwdio1 geomButtOrOver(rwdio1 BJTDMY))  ;
rwdio = geomAndNot(rwdio2 rfdmy56)  ;
;
;* Define device -- xdev nmos_rf_mlvt
gate_rfnnw = geomAndNot(gate_rf nxwell)  ; gate_rf not inside nwell
ngate_rf1 = geomAnd(gate_rfnnw NP)  ;
ngate_rf2 = geomAndNot(ngate_rf1 NT_Ni)  ;
OD_thk = geomOr(OD25 OD18)  ;
OD2 = geomOr(OD_thk OD33)  ;
ngate_rf3 = geomAndNot(ngate_rf2 OD2)  ;
ngate_rfmlv = geomAnd(ngate_rf3 ILVT)  ; CORE RF MLVT nmos
ngate_nthin_mlv1 = geomButtOrOver(nthin ngate_rfmlv)  ;
ngate_nthin_mlv2 = geomInside(ngate_nthin_mlv1 DNW)  ;
ngate_nthin_mlv = geomAndNot(ngate_nthin_mlv2 RFDMY6T)  ; nmos_rf_mlvt
;
;* Define device -- xdev nmos_rf_mlvt_nodnw
ngate_nthin_mlvnodnw = geomOutside(ngate_nthin_mlv1 DNW)  ; nmos_rf_mlvt_nodnw
;
;* Define device -- xdev pmos_rf_mlvt
gate_rfnw = geomAnd(gate_rf nxwell)  ; gate_rf inside nwell
pgate_rf1 = geomAnd(gate_rfnw PP)  ;
pgate_rf2 = geomAndNot(pgate_rf1 NT_Ni)  ;
pgate_rf3 = geomAndNot(pgate_rf2 OD2)  ;
pgate_rfmlv = geomAnd(pgate_rf3 ILVT)  ; CORE RF MLVT pmos gate
pgate_pthin_mlv1 = geomButtOrOver(pthin pgate_rfmlv)  ;
pgate_pthin_mlv2 = geomInside(pgate_pthin_mlv1 DNW)  ;
pgate_pthin_mlv = geomAndNot(pgate_pthin_mlv2 RFDMY5T)  ; pmos_rf_mlvt
;
;* Define device -- xdev pmos_rf_mlvt_nw
pgate_pthin_mlvnw1 = geomOutside(pgate_pthin_mlv1 DNW)  ;
pgate_pthin_mlvnw = geomAndNot(pgate_pthin_mlvnw1 RFDMY5T)  ; pmos_rf_mlvt_nw
;
;* Define device -- xdev nmos_rf_mlvt_6t
ngate_nthin_mlv_6t = geomAnd(ngate_nthin_mlv2 RFDMY6T)  ; nmos_rf_mlvt_6t
;
;* Define device -- xdev pmos_rf_mlvt_5t
pgate_pthin_mlv_5t = geomAnd(pgate_pthin_mlv2 RFDMY5T)  ; pmos_rf_mlvt_5t
;
;* Define device -- xdev pmos_rf_mlvt_nw_5t
pgate_pthin_mlvnw_5t = geomAnd(pgate_pthin_mlvnw1 RFDMY5T)  ; pmos_rf_mlvt_nw_5t
;
;* Define device -- xdev nmos_rf
ngate_rfa = geomAndNot(ngate_rf3 VTH_N)  ;
ngate_rfb = geomAndNot(ngate_rfa VTL_N)  ;
ngate_rf = geomAndNot(ngate_rfb ILVT)  ; CORE RF nmos
ngate_nthin1 = geomButtOrOver(nthin ngate_rf)  ;
ngate_nthin2 = geomInside(ngate_nthin1 DNW)  ;
ngate_nthin = geomAndNot(ngate_nthin2 RFDMY6T)  ; nmos_rf
;
;* Define device -- xdev nmos_rf_nodnw
ngate_nthin_nodnw = geomOutside(ngate_nthin1 DNW)  ; nmos_rf_nodnw
;
;* Define device -- xdev nmos_rf_hvt
ngate_rfhv = geomAnd(ngate_rf3 VTH_N)  ; CORE RF HVT nmos
ngate_nthin_hv1 = geomButtOrOver(nthin ngate_rfhv)  ;
ngate_nthin_hv2 = geomInside(ngate_nthin_hv1 DNW)  ;
ngate_nthin_hv = geomAndNot(ngate_nthin_hv2 RFDMY6T)  ; nmos_rf_hvt
;
;* Define device -- xdev nmos_rf_hvt_nodnw
ngate_nthin_hvnodnw = geomOutside(ngate_nthin_hv1 DNW)  ; nmos_rf_hvt_nodnw
;
;* Define device -- xdev nmos_rf_lvt
ngate_rflv = geomAnd(ngate_rf3 VTL_N)  ; CORE RF LVT nmos
ngate_nthin_lv1 = geomButtOrOver(nthin ngate_rflv)  ;
ngate_nthin_lv2 = geomInside(ngate_nthin_lv1 DNW)  ;
ngate_nthin_lv = geomAndNot(ngate_nthin_lv2 RFDMY6T)  ; nmos_rf_lvt
;
;* Define device -- xdev nmos_rf_lvt_nodnw
ngate_nthin_lvnodnw = geomOutside(ngate_nthin_lv1 DNW)  ; nmos_rf_lvt_nodnw
;
;* Define device -- xdev nmos_rf_25
ngate_rfio1 = geomAnd(ngate_rf2 OD2)  ;
ngate_rfio2 = geomAndNot(ngate_rfio1 VTH_N)  ;
ngate_rfio3 = geomAndNot(ngate_rfio2 VTL_N)  ;
ngate_rf_25a = geomAnd(ngate_rfio3 OD25)  ;
ngate_rf_25b = geomAndNot(ngate_rf_25a OD25_33)  ;
ngate_rf_25 = geomAndNot(ngate_rf_25b OD25_18)  ;
ngate_nthin_251 = geomButtOrOver(nthin ngate_rf_25)  ;
ngate_nthin_252 = geomInside(ngate_nthin_251 DNW)  ;
ngate_nthin_25 = geomAndNot(ngate_nthin_252 RFDMY6T)  ; nmos_rf_25
;
;* Define device -- xdev nmos_rf_25_nodnw
ngate_nthin_25nodnw = geomOutside(ngate_nthin_251 DNW)  ; nmos_rf_25_nodnw
;
;* Define device -- xdev nmos_rf_25od
ngate_rf_25od = geomAnd(ngate_rf_25a OD25_33)  ; RF 2.5v nmos over_drive 3.3v
ngate_nthin_253 = geomButtOrOver(nthin ngate_rf_25od)  ;
ngate_nthin_254 = geomInside(ngate_nthin_253 DNW)  ;
ngate_nthin_25od = geomAndNot(ngate_nthin_254 RFDMY6T)  ; nmos_rf_25od33 over_drive 3.3v
;
;* Define device -- xdev nmos_rf_25_nodnwod
ngate_nthin_25nodnwod = geomOutside(ngate_nthin_253 DNW)  ; nmos_rf_25_nodnw over_drive 3.3v
;
;* Define device -- xdev nmos_rf_25ud
ngate_rf_25ud = geomAnd(ngate_rf_25a OD25_18)  ; RF 2.5v nmos over_drive 1.8v
ngate_nthin_255 = geomButtOrOver(nthin ngate_rf_25ud)  ;
ngate_nthin_256 = geomInside(ngate_nthin_255 DNW)  ;
ngate_nthin_25ud = geomAndNot(ngate_nthin_256 RFDMY6T)  ; nmos_rf_25ud18  under_drive 1.8v
;
;* Define device -- xdev nmos_rf_25_nodnwud
ngate_nthin_25nodnwud = geomOutside(ngate_nthin_255 DNW)  ; nmos_rf_25_nodnw under_drive 1.8v
;
;* Define device -- xdev nmos_rf_18
ngate_rf_18 = geomAnd(ngate_rfio3 OD18)  ; RF 1.8V nmos
ngate_nthin_181 = geomButtOrOver(nthin ngate_rf_18)  ;
ngate_nthin_182 = geomInside(ngate_nthin_181 DNW)  ;
ngate_nthin_18 = geomAndNot(ngate_nthin_182 RFDMY6T)  ; nmos_rf_18
;
;* Define device -- xdev nmos_rf_18_nodnw
ngate_nthin_18nodnw = geomOutside(ngate_nthin_181 DNW)  ; nmos_rf_18_nodnw
;
;* Define device -- xdev nmos_rf_na18
ngate_rf_18na1 = geomAnd(ngate_rf1 NT_Ni)  ;
ngate_rf_18na2 = geomAnd(ngate_rf_18na1 OD18)  ;
ngate_rf_18na3 = geomAndNot(ngate_rf_18na2 VTH_N)  ;
ngate_rf_18na4 = geomAndNot(ngate_rf_18na3 VTL_N)  ;
ngate_rf_18na = geomAndNot(ngate_rf_18na4 ILVT)  ; IO 1.8v Native RF NMOS
ngate_nthin_18na1 = geomButtOrOver(nthin ngate_rf_18na)  ;
ngate_nthin_18na2 = geomAndNot(ngate_nthin_18na1 DNW)  ;
ngate_nthin_18na = geomAndNot(ngate_nthin_18na2 RFDMY6T)  ; nmos_rf_na18
;
;* Define device -- xdev nmos_rf_33
ngate_rf_33 = geomAnd(ngate_rfio3 OD33)  ; RF 3.3v nmos
ngate_nthin_331 = geomButtOrOver(nthin ngate_rf_33)  ;
ngate_nthin_332 = geomInside(ngate_nthin_331 DNW)  ;
ngate_nthin_33 = geomAndNot(ngate_nthin_332 RFDMY6T)  ; nmos_rf_33
;
;* Define device -- xdev nmos_rf_33_nodnw
ngate_nthin_33nodnw = geomOutside(ngate_nthin_331 DNW)  ; nmos_rf_33_nodnw
;
;* Define device -- xdev nmos_rf_6t
ngate_nthin_6t = geomAnd(ngate_nthin2 RFDMY6T)  ; nmos_rf_6t
;
;* Define device -- xdev nmos_rf_hvt_6t
ngate_nthin_hv_6t = geomAnd(ngate_nthin_hv2 RFDMY6T)  ; nmos_rf_hvt_6t
;
;* Define device -- xdev nmos_rf_lvt_6t
ngate_nthin_lv_6t = geomAnd(ngate_nthin_lv2 RFDMY6T)  ; nmos_rf_lvt_6t
;
;* Define device -- xdev nmos_rf_25_6t
ngate_nthin_25_6t = geomAnd(ngate_nthin_252 RFDMY6T)  ; nmos_rf_25_6t
;
;* Define device -- xdev nmos_rf_25od33_6t
ngate_nthin_25od_6t = geomAnd(ngate_nthin_254 RFDMY6T)  ; nmos_rf_25od33_6t over_drive 3.3v 6T
;
;* Define device -- xdev nmos_rf_25ud18_6t
ngate_nthin_25ud_6t = geomAnd(ngate_nthin_256 RFDMY6T)  ; nmos_rf_25ud18_6t under_drive 1.8v 6T
;
;* Define device -- xdev nmos_rf_18_6t
ngate_nthin_18_6t = geomAnd(ngate_nthin_182 RFDMY6T)  ; nmos_rf_18_6t
;
;* Define device -- xdev nmos_rf_33_6t
ngate_nthin_33_6t = geomAnd(ngate_nthin_332 RFDMY6T)  ; nmos_rf_33_6t
;
;* Define device -- xdev pmos_rf
pgate_rfa = geomAndNot(pgate_rf3 VTH_P)  ;
pgate_rfb = geomAndNot(pgate_rfa VTL_P)  ;
pgate_rf = geomAndNot(pgate_rfb ILVT)  ; CORE RF pmos gate
pgate_pthin1 = geomButtOrOver(pthin pgate_rf)  ;
pgate_pthin2 = geomInside(pgate_pthin1 DNW)  ;
pgate_pthin = geomAndNot(pgate_pthin2 RFDMY5T)  ; pmos_rf
;
;* Define device -- xdev pmos_rf_nw
pgate_pthin_nw1 = geomOutside(pgate_pthin1 DNW)  ;
pgate_pthin_nw = geomAndNot(pgate_pthin_nw1 RFDMY5T)  ; pmos_rf_nw
;
;* Define device -- xdev pmos_rf_hvt
pgate_rfhv = geomAnd(pgate_rf3 VTH_P)  ; CORE RF HVT pmos gatg
pgate_pthin_hv1 = geomButtOrOver(pthin pgate_rfhv)  ;
pgate_pthin_hv2 = geomInside(pgate_pthin_hv1 DNW)  ;
pgate_pthin_hv = geomAndNot(pgate_pthin_hv2 RFDMY5T)  ; pmos_rf_hvt
;
;* Define device -- xdev pmos_rf_hvt_nw
pgate_pthin_hvnw1 = geomOutside(pgate_pthin_hv1 DNW)  ;
pgate_pthin_hvnw = geomAndNot(pgate_pthin_hvnw1 RFDMY5T)  ; pmos_rf_hvt_nw
;
;* Define device -- xdev pmos_rf_lvt
pgate_rflv = geomAnd(pgate_rf3 VTL_P)  ; CORE RF LVT pmos gate
pgate_pthin_lv1 = geomButtOrOver(pthin pgate_rflv)  ;
pgate_pthin_lv2 = geomInside(pgate_pthin_lv1 DNW)  ;
pgate_pthin_lv = geomAndNot(pgate_pthin_lv2 RFDMY5T)  ; pmos_rf_lvt
;
;* Define device -- xdev pmos_rf_lvt_nw
pgate_pthin_lvnw1 = geomOutside(pgate_pthin_lv1 DNW)  ;
pgate_pthin_lvnw = geomAndNot(pgate_pthin_lvnw1 RFDMY5T)  ; pmos_rf_lvt_nw
;
;* Define device -- xdev pmos_rf_25
pgate_rfio1 = geomAnd(pgate_rf2 OD2)  ;
pgate_rfio2 = geomAndNot(pgate_rfio1 VTH_P)  ;
pgate_rfio3 = geomAndNot(pgate_rfio2 VTL_P)  ;
pgate_rf_25a = geomAnd(pgate_rfio3 OD25)  ;
pgate_rf_25b = geomAndNot(pgate_rf_25a OD25_33)  ;
pgate_rf_25 = geomAndNot(pgate_rf_25b OD25_18)  ;
pgate_pthin_251 = geomButtOrOver(pthin pgate_rf_25)  ;
pgate_pthin_252 = geomInside(pgate_pthin_251 DNW)  ;
pgate_pthin_25 = geomAndNot(pgate_pthin_252 RFDMY5T)  ; pmos_rf_25
;
;* Define device -- xdev pmos_rf_25_nw
pgate_pthin_25nw1 = geomOutside(pgate_pthin_251 DNW)  ;
pgate_pthin_25nw = geomAndNot(pgate_pthin_25nw1 RFDMY5T)  ; pmos_rf_25_nw
;
;* Define device -- xdev pmos_rf_25od
pgate_rf_25od = geomAnd(pgate_rf_25a OD25_33)  ; RF 2.5v pmos gate over_drive 3.3v
pgate_pthin_253 = geomButtOrOver(pthin pgate_rf_25od)  ;
pgate_pthin_254 = geomInside(pgate_pthin_253 DNW)  ;
pgate_pthin_25od = geomAndNot(pgate_pthin_254 RFDMY5T)  ; pmos_rf_25 over_drive 3.3v
;
;* Define device -- xdev pmos_rf_25_nwod
pgate_pthin_25nwod1 = geomOutside(pgate_pthin_253 DNW)  ;
pgate_pthin_25nwod = geomAndNot(pgate_pthin_25nwod1 RFDMY5T)  ; pmos_rf_25od33_nw over_drive 3.3v
;
;* Define device -- xdev pmos_rf_25ud
pgate_rf_25ud = geomAnd(pgate_rf_25a OD25_18)  ; RF 2.5v pmos gate over_drive 1.8v
pgate_pthin_255 = geomButtOrOver(pthin pgate_rf_25ud)  ;
pgate_pthin_256 = geomInside(pgate_pthin_255 DNW)  ;
pgate_pthin_25ud = geomAndNot(pgate_pthin_256 RFDMY5T)  ; pmos_rf_25ud18 under_drive 1.8v
;
;* Define device -- xdev pmos_rf_25_nwud
pgate_pthin_25nwud1 = geomOutside(pgate_pthin_255 DNW)  ;
pgate_pthin_25nwud = geomAndNot(pgate_pthin_25nwud1 RFDMY5T)  ; pmos_rf_25ud18_nw under_drive 1.8v
;
;* Define device -- xdev pmos_rf_18
pgate_rf_18 = geomAnd(pgate_rfio3 OD18)  ; RF 1.8V pmos gate
pgate_pthin_181 = geomButtOrOver(pthin pgate_rf_18)  ;
pgate_pthin_182 = geomInside(pgate_pthin_181 DNW)  ;
pgate_pthin_18 = geomAndNot(pgate_pthin_182 RFDMY5T)  ; pmos_rf_18
;
;* Define device -- xdev pmos_rf_18_nw
pgate_pthin_18nw1 = geomOutside(pgate_pthin_181 DNW)  ;
pgate_pthin_18nw = geomAndNot(pgate_pthin_18nw1 RFDMY5T)  ; pmos_rf_18_nw
;
;* Define device -- xdev pmos_rf_33
pgate_rf_33 = geomAnd(pgate_rfio3 OD33)  ; RF 3.3v pmos gate
pgate_pthin_331 = geomButtOrOver(pthin pgate_rf_33)  ;
pgate_pthin_332 = geomInside(pgate_pthin_331 DNW)  ;
pgate_pthin_33 = geomAndNot(pgate_pthin_332 RFDMY5T)  ; pmos_rf_33
;
;* Define device -- xdev pmos_rf_33_nw
pgate_pthin_33nw1 = geomOutside(pgate_pthin_331 DNW)  ;
pgate_pthin_33nw = geomAndNot(pgate_pthin_33nw1 RFDMY5T)  ; pmos_rf_33_nw
;
;* Define device -- xdev pmos_rf_5t
pgate_pthin_5t = geomAnd(pgate_pthin2 RFDMY5T)  ; pmos_rf_5t
;
;* Define device -- xdev pmos_rf_nw_5t
pgate_pthin_nw_5t = geomAnd(pgate_pthin_nw1 RFDMY5T)  ; pmos_rf_nw_5t
;
;* Define device -- xdev pmos_rf_hvt_5t
pgate_pthin_hv_5t = geomAnd(pgate_pthin_hv2 RFDMY5T)  ; pmos_rf_hvt_5t
;
;* Define device -- xdev pmos_rf_hvt_nw_5t
pgate_pthin_hvnw_5t = geomAnd(pgate_pthin_hvnw1 RFDMY5T)  ; pmos_rf_hvt_nw_5t
;
;* Define device -- xdev pmos_rf_lvt_5t
pgate_pthin_lv_5t = geomAnd(pgate_pthin_lv2 RFDMY5T)  ; pmos_rf_lvt_5t
;
;* Define device -- xdev pmos_rf_lvt_nw_5t
pgate_pthin_lvnw_5t = geomAnd(pgate_pthin_lvnw1 RFDMY5T)  ; pmos_rf_lvt_nw_5t
;
;* Define device -- xdev pmos_rf_25_5t
pgate_pthin_25_5t = geomAnd(pgate_pthin_252 RFDMY5T)  ; pmos_rf_25_5t
;
;* Define device -- xdev pmos_rf_25_nw_5t
pgate_pthin_25nw_5t = geomAnd(pgate_pthin_25nw1 RFDMY5T)  ; pmos_rf_25_nw_5t
;
;* Define device -- xdev pmos_rf_25od33_5t
pgate_pthin_25od_5t = geomAnd(pgate_pthin_254 RFDMY5T)  ; pmos_rf_25_5t over_drive 3.3v 5T
;
;* Define device -- xdev pmos_rf_25od33_nw_5t
pgate_pthin_25nwod_5t = geomAnd(pgate_pthin_25nwod1 RFDMY5T)  ; pmos_rf_25od33_nw_5t over_drive 3.3v
;
;* Define device -- xdev pmos_rf_25ud18_5t
pgate_pthin_25ud_5t = geomAnd(pgate_pthin_256 RFDMY5T)  ; pmos_rf_25ud18_5t under_drive 1.8v 5T
;
;* Define device -- xdev pmos_rf_25ud18_nw_5t
pgate_pthin_25nwud_5t = geomAnd(pgate_pthin_25nwud1 RFDMY5T)  ; pmos_rf_25ud18_nw_5t under_drive 1.8v 5T
;
;* Define device -- xdev pmos_rf_18_5t
pgate_pthin_18_5t = geomAnd(pgate_pthin_182 RFDMY5T)  ; pmos_rf_18_5t
;
;* Define device -- xdev pmos_rf_18_nw_5t
pgate_pthin_18nw_5t = geomAnd(pgate_pthin_18nw1 RFDMY5T)  ; pmos_rf_18_nw_5t
;
;* Define device -- xdev pmos_rf_33_5t
pgate_pthin_33_5t = geomAnd(pgate_pthin_332 RFDMY5T)  ; pmos_rf_33_5t
;
;* Define device -- xdev pmos_rf_33_nw_5t
pgate_pthin_33nw_5t = geomAnd(pgate_pthin_33nw1 RFDMY5T)  ; pmos_rf_33_nw_5t
;
;* Define device -- xdev xjvar
VAR_RFi = geomAnd(VAR RFDMY)  ;
VAR_RF1 = geomAndNot(VAR_RFi SBDDMY)  ;
VAR_RF = geomButtOrOver(VAR_RF1 gate_a)  ;
XJ_RF = geomAndNot(VAR_RF1 VAR_RF)  ;
jvar1_rf = geomAnd(nxwell XJ_RF)  ;
jvar2_rf = geomButtOrOver(jvar1_rf tpdiff)  ;
jvar_rf1 = geomButtOrOver(jvar2_rf tndiff)  ;
jvar_rf = geomAnd(jvar_rf1 DNW)  ;
;
;* Define device -- xdev xjvar_nw
jvar3_rf = geomAnd(jvar_rf1 tpdiff)  ;
tpdiff_jvar = geomAnd(tpdiff jvar_rf1)  ;
tndiff_jvar = geomAnd(tndiff jvar_rf1)  ;
jvar_rfnw = geomAndNot(jvar_rf1 DNW)  ;
;
;* Define device -- xdev moscap_rf
var_nw_rf = geomAnd(nxwell VAR_RF)  ;
var_nw1_rf = geomAndNot(var_nw_rf OD18)  ;
var_nw2_rf = geomAndNot(var_nw1_rf OD25)  ;
var_nw3_rf1 = geomAndNot(var_nw2_rf OD33)  ;
var_nw3_rf2 = geomAndNot(var_nw3_rf1 geomButtOrOver(var_nw3_rf1 VTH_P))  ;
var_nw3_rf = geomAnd(var_nw3_rf2 DNW)  ;
;
;* Define device -- xdev pmoscap_rf
vargt2_rf = geomAnd(gate_a_rf VAR_RF)  ;
OD2a = geomOr(OD25 OD25_18)  ;
OD2b = geomOr(OD2a OD25_33)  ;
OD2c = geomOr(OD2b OD18)  ;
OD2_mos = geomOr(OD2c OD33)  ;
vargt_rf1 = geomAndNot(vargt2_rf OD2_mos)  ;
vargt_rf = geomAndNot(vargt_rf1 VTH_P)  ; RF Varactor on thin oxide
;
;* Define device -- xdev moscap_rf_nw
var_nw3_rf_nw = geomAndNot(var_nw3_rf2 DNW)  ;
;
;* Define device -- xdev moscap_rf_hvt
var_nw3_rf3 = geomButtOrOver(var_nw3_rf1 VTH_P)  ;
var_nw3_rf_hvt = geomAnd(var_nw3_rf3 DNW)  ;
;
;* Define device -- xdev moscap_rf_hvt_nw
vargt_rf_hvt = geomAnd(vargt_rf1 VTH_P)  ; RF Varactor on thin oxide with VTH_P
var_nw3_rf_hvt_nw = geomAndNot(var_nw3_rf3 DNW)  ;
;
;* Define device -- xdev moscap_rf25
var_nw_rf25a = geomAnd(var_nw_rf OD25)  ;
var_nw_rf25 = geomAnd(var_nw_rf25a DNW)  ;
;
;* Define device -- xdev pmoscap_rf25
vargt_rf25 = geomAnd(vargt2_rf OD25)  ; RF Varactor on 2.5v thick oxide
;
;* Define device -- xdev moscap_rf25_nw
var_nw_rf25_nw = geomAndNot(var_nw_rf25a DNW)  ;
;
;* Define device -- xdev moscap_rf18
var_nw_rf18a = geomAnd(var_nw_rf OD18)  ;
var_nw_rf18 = geomAnd(var_nw_rf18a DNW)  ;
;
;* Define device -- xdev pmoscap_rf18
vargt_rf18 = geomAnd(vargt2_rf OD18)  ; RF Varactor on 1.8v thick oxide
;
;* Define device -- xdev moscap_rf18_nw
var_nw_rf18_nw = geomAndNot(var_nw_rf18a DNW)  ;
;
;* Define device -- xdev moscap_rf33
var_nw_rf33a = geomAnd(var_nw_rf OD33)  ;
var_nw_rf33 = geomAnd(var_nw_rf33a DNW)  ;
;
;* Define device -- xdev moscap_rf33_nw
vargt_rf33 = geomAnd(vargt2_rf OD33)  ; RF Varactor on 3.3v thick oxide
var_nw_rf33_nw = geomAndNot(var_nw_rf33a DNW)  ;
;
;* Define device -- xdev sbd_rf
sbd_rfnw_org1 = geomButtOrOver(sbd_nw schottky_n)  ;
sbd_rfnw_org = geomButtOrOver(sbd_rfnw_org1 schottky_p)  ;
sbd_rfdnw = geomButtOrOver(sbd_rfnw_org DNW)  ;
;
;* Define device -- xdev sbd_rf_nw
sbd_rfnw = geomAndNot(sbd_rfnw_org geomButtOrOver(sbd_rfnw_org DNW))  ;
;
;* Define device -- xdev rppolyl_rf
rppolyl_rf1 = geomAndNot(rppolyl_d1 rppolyl_d)  ;
rppolyl_rf = geomAnd(rppolyl_rf1 RFDMY)  ; RF P+POLY resistor w/i silicide >=  2 (3-Terminals)
;
;* Define device -- xdev rppolys_rf
rppolys_rf1 = geomAndNot(rppolys_d1 rppolyl_d)  ;
rppolys_rf = geomAnd(rppolys_rf1 RFDMY)  ; RF P+POLY resistor w/i silicide < 2 (3-Terminals) 
;
;* Define device -- xdev rppolywo_rf
rppolywo_rf = geomAnd(rppolywo_r1 RFDMY)  ;  RF P+POLY resistor w/o silicide (3-terminals)
;
;* Define device -- xdev ndio_hia_rf
ndio_hia1 = geomAnd(ndio1a HIADMY)  ;
ndio_hia2 = geomAnd(ndio_hia1 psub)  ;
ndio_hia3 = geomAndNot(ndio_hia2 OD18)  ;
ndio_hia4 = geomAndNot(ndio_hia3 OD25)  ;
ndio_hia5 = geomAndNot(ndio_hia4 OD33)  ;
ndio_hia6 = geomAndNot(ndio_hia5 DCO)  ;
ndio_hia7 = geomAndNot(ndio_hia6 NT_Ni)  ;
ndio_hia8 = geomAndNot(ndio_hia7 VTH_N)  ;
ndio_hia9 = geomAndNot(ndio_hia8 VTL_N)  ;
ndio_hia10 = geomAndNot(ndio_hia9 ILVT)  ;
ndio_hia = geomAnd(ndio_hia10 RFDMY)  ;
;
;* Define device -- xdev pdio_hia_rf
pdio_hia1 = geomAnd(pdio1a HIADMY)  ;
pdio_hia2 = geomAnd(pdio_hia1 nxwell)  ;
pdio_hia3 = geomAndNot(pdio_hia2 OD18)  ;
pdio_hia4 = geomAndNot(pdio_hia3 OD25)  ;
pdio_hia5 = geomAndNot(pdio_hia4 OD33)  ;
pdio_hia6 = geomAndNot(pdio_hia5 DCO)  ;
pdio_hia7 = geomAndNot(pdio_hia6 VTH_P)  ;
pdio_hia8 = geomAndNot(pdio_hia7 VTL_P)  ;
pdio_hia9 = geomAndNot(pdio_hia8 ILVT)  ;
pdio_hia = geomAnd(pdio_hia9 RFDMY)  ;
pvar_rf1 = geomAndNot(VAR_RF nxwell)  ;
pvar_rf2 = geomAnd(pvar_rf1 DNW)  ;
pvar_rf3 = geomAndNot(pvar_rf2 OD33)  ;
pvar_rf4 = geomAndNot(pvar_rf3 OD18)  ;
pvar_rf = geomAndNot(pvar_rf4 OD25)  ;
pvar_rf18a = geomAnd(pvar_rf3 OD18)  ;
pvar_rf18 = geomAndNot(pvar_rf18a OD25)  ;
pvar_rf25 = geomAnd(pvar_rf4 OD25)  ;
;
;* Define device -- xdev spiral_std_mu_z
std_ind1 = geomAnd(M9 IND_STD)  ;
std_ind21 = geomAnd(M8 IND_STD)  ;
std_ind2 = geomButtOrOver(std_ind21 IND_RAD)  ;
std_ind3 = geomOr(std_ind1 std_ind2)  ;
std_ind = geomButtOrOver(std_ind3 IND_RAD)  ;
std_ind_m = geomAnd(std_ind1 std_ind2)  ;
;
;* Define device -- xdev spiral_sym_mu_z
sym_ind1 = geomAnd(M9 IND_SYM)  ;
sym_ind2 = geomAnd(M8 IND_SYM)  ;
sym_ind3 = geomOr(sym_ind1 sym_ind2)  ;
sym_ind = geomButtOrOver(sym_ind3 IND_RAD)  ;
sym_ind_m = geomAnd(sym_ind1 sym_ind2)  ;
;
;* Define device -- xdev spiral_sym_ct_mu_z
ct_ind1 = geomAnd(M9 IND_CT)  ;
ct_ind2 = geomAnd(M8 IND_CT)  ;
ct_inda1 = geomOr(ct_ind1 ct_ind2)  ;
ct_inda = geomButtOrOver(ct_inda1 IND_NR)  ;
ct_ind3 = geomAnd(M7 IND_CT)  ;
ct_ind4 = geomOr(ct_inda ct_ind3)  ;
ct_ind = geomButtOrOver(ct_ind4 IND_RAD)  ;
ct_ind_m = geomAnd(ct_ind1 ct_ind2)  ;
;
;* Define device -- xdev mimcap_sin_3t
mim_top = geomAnd(ctm cbm)  ;
;
;* Define device -- xdev lincap
lin_nw1 = geomAnd(nxwell VTDN)  ;
lin_nw2 = geomAndNot(lin_nw1 RFDMY)  ;
lin_nw3 = geomAndNot(lin_nw2 OD25)  ;
lin_nw = geomAnd(lin_nw3 DNW)  ; Linear Cap
lingt1 = geomAnd(vargt1 VTDN)  ;
lingt = geomAndNot(lingt1 OD25)  ;
;
;* Define device -- xdev lincap_25
lin_nw4 = geomAnd(lin_nw2 OD25)  ;
lin_nw_25 = geomAnd(lin_nw4 DNW)  ; 2.5 Linear Cap
lingt_25 = geomAnd(lingt1 OD25)  ;
;
;* Define device -- xdev lincap_rf
lin_nw5 = geomAnd(lin_nw1 RFDMY)  ;
lin_nw6 = geomAndNot(lin_nw5 OD25)  ;
lin_nw_rf = geomAnd(lin_nw6 DNW)  ; RF Linear Cap
lingt2 = geomAnd(gate_a_rf NW)  ;
lingt3 = geomAnd(lingt2 NP)  ;
lingt4 = geomAnd(lingt3 VTDN)  ;
lingt_rf = geomAndNot(lingt4 OD25)  ;
;
;* Define device -- xdev lincap_rf_25
lin_nw7 = geomAnd(lin_nw5 OD25)  ;
lin_nw_rf_25 = geomAnd(lin_nw7 DNW)  ; RF 2.5 Linear Cap
lingt_rf_25 = geomAnd(lingt4 OD25)  ;
;
;* Define ERC or other layers
stimer = geomAndNot(SRM SRAMTIMER)  ;
dfm_gate1 = geomAndNot(gate1 geomButtOrOver(gate1 stimer))  ;
dfm_gate2 = geomSize(dfm_gate1 wped)  ; 
nw_ntn = geomOr(NW NT_Ni)  ;
nIO = geomAndNot(OD2 nw_ntn)  ; nmos IO for WPE (clear tone)
c_nmIO_aux = geomAnd(dfm_gate2 nIO)  ;
d_nmcore = geomOr(OD2 nw_ntn)  ; nmos core for WPE (Dark tone)
nCore = geomAndNot(BULK d_nmcore)  ; nmos core for WPE (clear tone)
c_nmcore_aux = geomAnd(dfm_gate2 nCore)  ;
c_pmall1 = geomAndNot(NW NT_Ni)  ;
pCore = geomAndNot(c_pmall1 OD33)  ; pmos all for WPE (clear tone)
c_pmcore_aux = geomAnd(dfm_gate2 pCore)  ;
erc_nmos_gates = geomAndNot(tngate1 VAR)  ;
gate_a1 = geomAndNot(gate1 stimer)  ;
erc_pmos_gates = geomAndNot(tpgate1 VAR)  ;
nt_n = geomCat(NT_Ni)  ;
c_nt_n_aux = geomAnd(dfm_gate2 nt_n)  ;
nxwell_float1 = geomAndNot(nxwell geomButtOrOver(nxwell VAR))  ; exclude nwell under VAR for floating nwell check
nxwell_float2 = geomAndNot(nxwell_float1 geomButtOrOver(nxwell_float1 trwell))  ; exclude nwell resistor for floating nwell check
nxwell_float = geomAndNot(nxwell_float2 TCDDMY)  ; exclude dummy nwell under TCDDMY
pIO = geomAnd(c_pmall1 OD33)  ; pmos IO 3.3V WPE
c_pmIO_aux = geomAnd(dfm_gate2 pIO)  ;


; ***** logic operation from XDEV statements *****
MOM_pin3 = geomAnd( metal3 MOMDMY22 )    
MOM_pin4 = geomAnd( metal4 MOMDMY22 )    
MOM_pin5 = geomAnd( metal5 MOMDMY22 )    
MOM_pin6 = geomAnd( metal6 MOMDMY22 )    
MOM_pin7 = geomAnd( metal7 MOMDMY22 )    
F_reg1a = drc( MOM_field1 0 < sep < 0.29 opposite parallel shielded)    
F_reg1  = geomAndNot( geomAnd( F_reg1a MOMDMY1 ) M1 )  
F_reg2a = drc( MOM_field2 0 < sep < 0.29 opposite parallel shielded)    
F_reg2  = geomAndNot( geomAnd( F_reg2a MOMDMY2 ) M2 )  
F_reg3a = drc( MOM_field3 0 < sep < 0.29 opposite parallel shielded)    
F_reg3  = geomAndNot( geomAnd( F_reg3a MOMDMY3 ) M3 )  
F_reg4a = drc( MOM_field4 0 < sep < 0.29 opposite parallel shielded)    
F_reg4  = geomAndNot( geomAnd( F_reg4a MOMDMY4 ) M4 )  
F_reg5a = drc( MOM_field5 0 < sep < 0.29 opposite parallel shielded)    
F_reg5  = geomAndNot( geomAnd( F_reg5a MOMDMY5 ) M5 )  
mom13_1 = geomButtOrOver( MOMDMY3 MOM_field1 )
mom13_2 = geomButtOrOver( mom13_1 MOM_field2 )
mom13_3 = geomButtOrOver( mom13_2 MOM_field3 )
mom13_Left4 = geomAndNot( mom13_3 geomButtOrOver( mom13_3 MOM_field4 ) )
mom13_Left5 = geomAndNot( mom13_Left4 geomButtOrOver( mom13_Left4 MOM_field5 ) )
mom13_Left6 = geomAndNot( mom13_Left5 geomButtOrOver( mom13_Left5 MOM_field6 ) )
mom13_Left7 = geomAndNot( mom13_Left6 geomButtOrOver( mom13_Left6 MOM_field7 ) )
mom13_reg1 = geomAndNot( mom13_Left7 geomButtOrOver( mom13_Left7 RFDMY ) )
mom13_reg2 = geomAndNot( mom13_reg1 MOMDMY22 )
mom13_reg  = geomAndNot( mom13_reg2 MAC )
mom13_reg_rf1 = geomButtOrOver( mom13_Left7 RFDMY )
mom13_reg_rf2 = geomAndNot( mom13_reg_rf1 MOMDMY22 )
mom13_reg_rf  = geomAndNot( mom13_reg_rf2 MAC )    
mom13_mx_reg1 = geomButtOrOver( MOMDMY22 mom13_Left7 )
mom13_mx_reg  = geomAndNot( mom13_mx_reg1 MAC )    
mom13_mx_aux1 = geomAnd( mom13_Left7 MOMDMY22 )
mom13_mx_aux  = geomAndNot( mom13_mx_aux1 MAC )    
mom14_1 = geomButtOrOver( MOMDMY4 MOM_field1 )
mom14_2 = geomButtOrOver( mom14_1 MOM_field2 )
mom14_3 = geomButtOrOver( mom14_2 MOM_field3 )
mom14_4 = geomButtOrOver( mom14_3 MOM_field4 )
mom14_Left5 = geomAndNot( mom14_4 geomButtOrOver( mom14_4 MOM_field5 ) )
mom14_Left6 = geomAndNot( mom14_Left5 geomButtOrOver( mom14_Left5 MOM_field6 ) )
mom14_Left7 = geomAndNot( mom14_Left6 geomButtOrOver( mom14_Left6 MOM_field7 ) )
mom14_reg1 = geomAndNot( mom14_Left7 geomButtOrOver( mom14_Left7 RFDMY ) )
mom14_reg2 = geomAndNot( mom14_reg1 MOMDMY22 )
mom14_reg  = geomAndNot( mom14_reg2 MAC )
mom14_reg_rf1 = geomButtOrOver( mom14_Left7 RFDMY )
mom14_reg_rf2 = geomAndNot( mom14_reg_rf1 MOMDMY22 )
mom14_reg_rf  = geomAndNot( mom14_reg_rf2 MAC )    
mom14_mx_reg1 = geomButtOrOver( MOMDMY22 mom14_Left7 )
mom14_mx_reg  = geomAndNot( mom14_mx_reg1 MAC )    
mom14_mx_aux1 = geomAnd( mom14_Left7 MOMDMY22 )
mom14_mx_aux  = geomAndNot( mom14_mx_aux1 MAC )    
mom15_1 = geomButtOrOver( MOMDMY5 MOM_field1 )
mom15_2 = geomButtOrOver( mom15_1 MOM_field2 )
mom15_3 = geomButtOrOver( mom15_2 MOM_field3 )
mom15_4 = geomButtOrOver( mom15_3 MOM_field4 )
mom15_5 = geomButtOrOver( mom15_4 MOM_field5 )
mom15_Left6 = geomAndNot( mom15_5 geomButtOrOver( mom15_5 MOM_field6 ) )
mom15_Left7 = geomAndNot( mom15_Left6 geomButtOrOver( mom15_Left6 MOM_field7 ) )
mom15_reg1 = geomAndNot( mom15_Left7 geomButtOrOver( mom15_Left7 RFDMY ) )
mom15_reg2 = geomAndNot( mom15_reg1 MOMDMY22 )
mom15_reg  = geomAndNot( mom15_reg2 MAC )
mom15_reg_rf1 = geomButtOrOver( mom15_Left7 RFDMY )
mom15_reg_rf2 = geomAndNot( mom15_reg_rf1 MOMDMY22 )
mom15_reg_rf  = geomAndNot( mom15_reg_rf2 MAC )    
mom15_mx_reg1 = geomButtOrOver( MOMDMY22 mom15_Left7 )
mom15_mx_reg  = geomAndNot( mom15_mx_reg1 MAC )    
mom15_mx_aux1 = geomAnd( mom15_Left7 MOMDMY22 )
mom15_mx_aux  = geomAndNot( mom15_mx_aux1 MAC )    
mom16_1 = geomButtOrOver( MOMDMY6 MOM_field1 )
mom16_2 = geomButtOrOver( mom16_1 MOM_field2 )
mom16_3 = geomButtOrOver( mom16_2 MOM_field3 )
mom16_4 = geomButtOrOver( mom16_3 MOM_field4 )
mom16_5 = geomButtOrOver( mom16_4 MOM_field5 )
mom16_6 = geomButtOrOver( mom16_5 MOM_field6 )
mom16_Left7 = geomAndNot( mom16_6 geomButtOrOver( mom16_6 MOM_field7 ) )
mom16_reg1 = geomAndNot( mom16_Left7 geomButtOrOver( mom16_Left7 RFDMY ) )
mom16_reg2 = geomAndNot( mom16_reg1 MOMDMY22 )
mom16_reg  = geomAndNot( mom16_reg2 MAC )
mom16_reg_rf1 = geomButtOrOver( mom16_Left7 RFDMY )
mom16_reg_rf2 = geomAndNot( mom16_reg_rf1 MOMDMY22 )
mom16_reg_rf  = geomAndNot( mom16_reg_rf2 MAC )    
mom16_mx_reg1 = geomButtOrOver( MOMDMY22 mom16_Left7 )
mom16_mx_reg  = geomAndNot( mom16_mx_reg1 MAC )    
mom16_mx_aux1 = geomAnd( mom16_Left7 MOMDMY22 )
mom16_mx_aux  = geomAndNot( mom16_mx_aux1 MAC )    
mom17_1 = geomButtOrOver( MOMDMY7 MOM_field1 )
mom17_2 = geomButtOrOver( mom17_1 MOM_field2 )
mom17_3 = geomButtOrOver( mom17_2 MOM_field3 )
mom17_4 = geomButtOrOver( mom17_3 MOM_field4 )
mom17_5 = geomButtOrOver( mom17_4 MOM_field5 )
mom17_6 = geomButtOrOver( mom17_5 MOM_field6 )
mom17_7 = geomButtOrOver( mom17_6 MOM_field7 )
mom17_reg1 = geomAndNot( mom17_7 geomButtOrOver( mom17_7 RFDMY ) )
mom17_reg2 = geomAndNot( mom17_reg1 MOMDMY22 )
mom17_reg  = geomAndNot( mom17_reg2 MAC )
mom17_reg_rf1 = geomButtOrOver( mom17_7 RFDMY )
mom17_reg_rf2 = geomAndNot( mom17_reg_rf1 MOMDMY22 )
mom17_reg_rf  = geomAndNot( mom17_reg_rf2 MAC )    
mom17_mx_reg1 = geomButtOrOver( MOMDMY22 mom17_7 )
mom17_mx_reg  = geomAndNot( mom17_mx_reg1 MAC )    
mom17_mx_aux1 = geomAnd( mom17_7 MOMDMY22 )
mom17_mx_aux  = geomAndNot( mom17_mx_aux1 MAC )    
mom24_1 = geomAndNot( MOMDMY4 geomButtOrOver( MOMDMY4 MOM_field1 ) )
mom24_2 = geomButtOrOver( mom24_1 MOM_field2 )
mom24_3 = geomButtOrOver( mom24_2 MOM_field3 )
mom24_4 = geomButtOrOver( mom24_3 MOM_field4 )
mom24_Left5 = geomAndNot( mom24_4 geomButtOrOver( mom24_4 MOM_field5 ) )
mom24_Left6 = geomAndNot( mom24_Left5 geomButtOrOver( mom24_Left5 MOM_field6 ) )
mom24_Left7 = geomAndNot( mom24_Left6 geomButtOrOver( mom24_Left6 MOM_field7 ) )
mom24_reg1 = geomAndNot( mom24_Left7 geomButtOrOver( mom24_Left7 RFDMY ) )
mom24_reg2 = geomAndNot( mom24_reg1 MOMDMY22 )
mom24_reg  = geomAndNot( mom24_reg2 MAC )
mom24_reg_rf1 = geomButtOrOver( mom24_Left7 RFDMY )
mom24_reg_rf2 = geomAndNot( mom24_reg_rf1 MOMDMY22 )
mom24_reg_rf  = geomAndNot( mom24_reg_rf2 MAC )    
mom24_mx_reg1 = geomButtOrOver( MOMDMY22 mom24_Left7 )
mom24_mx_reg  = geomAndNot( mom24_mx_reg1 MAC )    
mom24_mx_aux1 = geomAnd( mom24_Left7 MOMDMY22 )
mom24_mx_aux  = geomAndNot( mom24_mx_aux1 MAC )    
mom25_1 = geomAndNot( MOMDMY5 geomButtOrOver( MOMDMY5 MOM_field1 ) )
mom25_2 = geomButtOrOver( mom25_1 MOM_field2 )
mom25_3 = geomButtOrOver( mom25_2 MOM_field3 )
mom25_4 = geomButtOrOver( mom25_3 MOM_field4 )
mom25_5 = geomButtOrOver( mom25_4 MOM_field5 )
mom25_Left6 = geomAndNot( mom25_5 geomButtOrOver( mom25_5 MOM_field6 ) )
mom25_Left7 = geomAndNot( mom25_Left6 geomButtOrOver( mom25_Left6 MOM_field7 ) )
mom25_reg1 = geomAndNot( mom25_Left7 geomButtOrOver( mom25_Left7 RFDMY ) )
mom25_reg2 = geomAndNot( mom25_reg1 MOMDMY22 )
mom25_reg  = geomAndNot( mom25_reg2 MAC )
mom25_reg_rf1 = geomButtOrOver( mom25_Left7 RFDMY )
mom25_reg_rf2 = geomAndNot( mom25_reg_rf1 MOMDMY22 )
mom25_reg_rf  = geomAndNot( mom25_reg_rf2 MAC )    
mom25_mx_reg1 = geomButtOrOver( MOMDMY22 mom25_Left7 )
mom25_mx_reg  = geomAndNot( mom25_mx_reg1 MAC )    
mom25_mx_aux1 = geomAnd( mom25_Left7 MOMDMY22 )
mom25_mx_aux  = geomAndNot( mom25_mx_aux1 MAC )    
mom26_1 = geomAndNot( MOMDMY6 geomButtOrOver( MOMDMY6 MOM_field1 ) )
mom26_2 = geomButtOrOver( mom26_1 MOM_field2 )
mom26_3 = geomButtOrOver( mom26_2 MOM_field3 )
mom26_4 = geomButtOrOver( mom26_3 MOM_field4 )
mom26_5 = geomButtOrOver( mom26_4 MOM_field5 )
mom26_6 = geomButtOrOver( mom26_5 MOM_field6 )
mom26_Left7 = geomAndNot( mom26_6 geomButtOrOver( mom26_6 MOM_field7 ) )
mom26_reg1 = geomAndNot( mom26_Left7 geomButtOrOver( mom26_Left7 RFDMY ) )
mom26_reg2 = geomAndNot( mom26_reg1 MOMDMY22 )
mom26_reg  = geomAndNot( mom26_reg2 MAC )
mom26_reg_rf1 = geomButtOrOver( mom26_Left7 RFDMY )
mom26_reg_rf2 = geomAndNot( mom26_reg_rf1 MOMDMY22 )
mom26_reg_rf  = geomAndNot( mom26_reg_rf2 MAC )    
mom26_mx_reg1 = geomButtOrOver( MOMDMY22 mom26_Left7 )
mom26_mx_reg  = geomAndNot( mom26_mx_reg1 MAC )    
mom26_mx_aux1 = geomAnd( mom26_Left7 MOMDMY22 )
mom26_mx_aux  = geomAndNot( mom26_mx_aux1 MAC )    
mom27_1 = geomAndNot( MOMDMY7 geomButtOrOver( MOMDMY7 MOM_field1 ) )
mom27_2 = geomButtOrOver( mom27_1 MOM_field2 )
mom27_3 = geomButtOrOver( mom27_2 MOM_field3 )
mom27_4 = geomButtOrOver( mom27_3 MOM_field4 )
mom27_5 = geomButtOrOver( mom27_4 MOM_field5 )
mom27_6 = geomButtOrOver( mom27_5 MOM_field6 )
mom27_7 = geomButtOrOver( mom27_6 MOM_field7 )
mom27_reg1 = geomAndNot( mom27_7 geomButtOrOver( mom27_7 RFDMY ) )
mom27_reg2 = geomAndNot( mom27_reg1 MOMDMY22 )
mom27_reg  = geomAndNot( mom27_reg2 MAC )
mom27_reg_rf1 = geomButtOrOver( mom27_7 RFDMY )
mom27_reg_rf2 = geomAndNot( mom27_reg_rf1 MOMDMY22 )
mom27_reg_rf  = geomAndNot( mom27_reg_rf2 MAC )    
mom27_mx_reg1 = geomButtOrOver( MOMDMY22 mom27_7 )
mom27_mx_reg  = geomAndNot( mom27_mx_reg1 MAC )    
mom27_mx_aux1 = geomAnd( mom27_7 MOMDMY22 )
mom27_mx_aux  = geomAndNot( mom27_mx_aux1 MAC )    
mom35_1 = geomAndNot( MOMDMY5 geomButtOrOver( MOMDMY5 MOM_field1 ) )
mom35_2 = geomAndNot( mom35_1 geomButtOrOver( mom35_1 MOM_field2 ) )
mom35_3 = geomButtOrOver( mom35_2 MOM_field3 )
mom35_4 = geomButtOrOver( mom35_3 MOM_field4 )
mom35_5 = geomButtOrOver( mom35_4 MOM_field5 )
mom35_Left6 = geomAndNot( mom35_5 geomButtOrOver( mom35_5 MOM_field6 ) )
mom35_Left7 = geomAndNot( mom35_Left6 geomButtOrOver( mom35_Left6 MOM_field7 ) )
mom35_reg1 = geomAndNot( mom35_Left7 geomButtOrOver( mom35_Left7 RFDMY ) )
mom35_reg2 = geomAndNot( mom35_reg1 MOMDMY22 )
mom35_reg  = geomAndNot( mom35_reg2 MAC )
mom35_reg_rf1 = geomButtOrOver( mom35_Left7 RFDMY )
mom35_reg_rf2 = geomAndNot( mom35_reg_rf1 MOMDMY22 )
mom35_reg_rf  = geomAndNot( mom35_reg_rf2 MAC )    
mom35_mx_reg1 = geomButtOrOver( MOMDMY22 mom35_Left7 )
mom35_mx_reg  = geomAndNot( mom35_mx_reg1 MAC )    
mom35_mx_aux1 = geomAnd( mom35_Left7 MOMDMY22 )
mom35_mx_aux  = geomAndNot( mom35_mx_aux1 MAC )    
mom36_1 = geomAndNot( MOMDMY6 geomButtOrOver( MOMDMY6 MOM_field1 ) )
mom36_2 = geomAndNot( mom36_1 geomButtOrOver( mom36_1 MOM_field2 ) )
mom36_3 = geomButtOrOver( mom36_2 MOM_field3 )
mom36_4 = geomButtOrOver( mom36_3 MOM_field4 )
mom36_5 = geomButtOrOver( mom36_4 MOM_field5 )
mom36_6 = geomButtOrOver( mom36_5 MOM_field6 )
mom36_Left7 = geomAndNot( mom36_6 geomButtOrOver( mom36_6 MOM_field7 ) )
mom36_reg1 = geomAndNot( mom36_Left7 geomButtOrOver( mom36_Left7 RFDMY ) )
mom36_reg2 = geomAndNot( mom36_reg1 MOMDMY22 )
mom36_reg  = geomAndNot( mom36_reg2 MAC )
mom36_reg_rf1 = geomButtOrOver( mom36_Left7 RFDMY )
mom36_reg_rf2 = geomAndNot( mom36_reg_rf1 MOMDMY22 )
mom36_reg_rf  = geomAndNot( mom36_reg_rf2 MAC )    
mom36_mx_reg1 = geomButtOrOver( MOMDMY22 mom36_Left7 )
mom36_mx_reg  = geomAndNot( mom36_mx_reg1 MAC )    
mom36_mx_aux1 = geomAnd( mom36_Left7 MOMDMY22 )
mom36_mx_aux  = geomAndNot( mom36_mx_aux1 MAC )    
mom37_1 = geomAndNot( MOMDMY7 geomButtOrOver( MOMDMY7 MOM_field1 ) )
mom37_2 = geomAndNot( mom37_1 geomButtOrOver( mom37_1 MOM_field2 ) )
mom37_3 = geomButtOrOver( mom37_2 MOM_field3 )
mom37_4 = geomButtOrOver( mom37_3 MOM_field4 )
mom37_5 = geomButtOrOver( mom37_4 MOM_field5 )
mom37_6 = geomButtOrOver( mom37_5 MOM_field6 )
mom37_7 = geomButtOrOver( mom37_6 MOM_field7 )
mom37_reg1 = geomAndNot( mom37_7 geomButtOrOver( mom37_7 RFDMY ) )
mom37_reg2 = geomAndNot( mom37_reg1 MOMDMY22 )
mom37_reg  = geomAndNot( mom37_reg2 MAC )
mom37_reg_rf1 = geomButtOrOver( mom37_7 RFDMY )
mom37_reg_rf2 = geomAndNot( mom37_reg_rf1 MOMDMY22 )
mom37_reg_rf  = geomAndNot( mom37_reg_rf2 MAC )    
mom37_mx_reg1 = geomButtOrOver( MOMDMY22 mom37_7 )
mom37_mx_reg  = geomAndNot( mom37_mx_reg1 MAC )    
mom37_mx_aux1 = geomAnd( mom37_7 MOMDMY22 )
mom37_mx_aux  = geomAndNot( mom37_mx_aux1 MAC )    
mom46_1 = geomAndNot( MOMDMY6 geomButtOrOver( MOMDMY6 MOM_field1 ) )
mom46_2 = geomAndNot( mom46_1 geomButtOrOver( mom46_1 MOM_field2 ) )
mom46_3 = geomAndNot( mom46_2 geomButtOrOver( mom46_2 MOM_field3 ) )
mom46_4 = geomButtOrOver( mom46_3 MOM_field4 )
mom46_5 = geomButtOrOver( mom46_4 MOM_field5 )
mom46_6 = geomButtOrOver( mom46_5 MOM_field6 )
mom46_Left7 = geomAndNot( mom46_6 geomButtOrOver( mom46_6 MOM_field7 ) )
mom46_reg1 = geomAndNot( mom46_Left7 geomButtOrOver( mom46_Left7 RFDMY ) )
mom46_reg2 = geomAndNot( mom46_reg1 MOMDMY22 )
mom46_reg  = geomAndNot( mom46_reg2 MAC )
mom46_reg_rf1 = geomButtOrOver( mom46_Left7 RFDMY )
mom46_reg_rf2 = geomAndNot( mom46_reg_rf1 MOMDMY22 )
mom46_reg_rf  = geomAndNot( mom46_reg_rf2 MAC )    
mom46_mx_reg1 = geomButtOrOver( MOMDMY22 mom46_Left7 )
mom46_mx_reg  = geomAndNot( mom46_mx_reg1 MAC )    
mom46_mx_aux1 = geomAnd( mom46_Left7 MOMDMY22 )
mom46_mx_aux  = geomAndNot( mom46_mx_aux1 MAC )    
mom47_1 = geomAndNot( MOMDMY7 geomButtOrOver( MOMDMY7 MOM_field1 ) )
mom47_2 = geomAndNot( mom47_1 geomButtOrOver( mom47_1 MOM_field2 ) )
mom47_3 = geomAndNot( mom47_2 geomButtOrOver( mom47_2 MOM_field3 ) )
mom47_4 = geomButtOrOver( mom47_3 MOM_field4 )
mom47_5 = geomButtOrOver( mom47_4 MOM_field5 )
mom47_6 = geomButtOrOver( mom47_5 MOM_field6 )
mom47_7 = geomButtOrOver( mom47_6 MOM_field7 )
mom47_reg1 = geomAndNot( mom47_7 geomButtOrOver( mom47_7 RFDMY ) )
mom47_reg2 = geomAndNot( mom47_reg1 MOMDMY22 )
mom47_reg  = geomAndNot( mom47_reg2 MAC )
mom47_reg_rf1 = geomButtOrOver( mom47_7 RFDMY )
mom47_reg_rf2 = geomAndNot( mom47_reg_rf1 MOMDMY22 )
mom47_reg_rf  = geomAndNot( mom47_reg_rf2 MAC )    
mom47_mx_reg1 = geomButtOrOver( MOMDMY22 mom47_7 )
mom47_mx_reg  = geomAndNot( mom47_mx_reg1 MAC )    
mom47_mx_aux1 = geomAnd( mom47_7 MOMDMY22 )
mom47_mx_aux  = geomAndNot( mom47_mx_aux1 MAC )    
mom57_1 = geomAndNot( MOMDMY7 geomButtOrOver( MOMDMY7 MOM_field1 ) )
mom57_2 = geomAndNot( mom57_1 geomButtOrOver( mom57_1 MOM_field2 ) )
mom57_3 = geomAndNot( mom57_2 geomButtOrOver( mom57_2 MOM_field3 ) )
mom57_4 = geomAndNot( mom57_3 geomButtOrOver( mom57_3 MOM_field4 ) )
mom57_5 = geomButtOrOver( mom57_4 MOM_field5 )
mom57_6 = geomButtOrOver( mom57_5 MOM_field6 )
mom57_7 = geomButtOrOver( mom57_6 MOM_field7 )
mom57_reg1 = geomAndNot( mom57_7 geomButtOrOver( mom57_7 RFDMY ) )
mom57_reg2 = geomAndNot( mom57_reg1 MOMDMY22 )
mom57_reg  = geomAndNot( mom57_reg2 MAC )
mom57_reg_rf1 = geomButtOrOver( mom57_7 RFDMY )
mom57_reg_rf2 = geomAndNot( mom57_reg_rf1 MOMDMY22 )
mom57_reg_rf  = geomAndNot( mom57_reg_rf2 MAC )    
mom57_mx_reg1 = geomButtOrOver( MOMDMY22 mom57_7 )
mom57_mx_reg  = geomAndNot( mom57_mx_reg1 MAC )    
mom57_mx_aux1 = geomAnd( mom57_7 MOMDMY22 )
mom57_mx_aux  = geomAndNot( mom57_mx_aux1 MAC )    
sym_w1  = drc(sym_ind width < 31 opposite parallel shielded)        ; "31" is a trade number from spice model
sym_w2  = geomGetRectangle(sym_w1)
sym_w3  = geomAndNot( sym_w2 geomButtOrOver( sym_w2 indm9 ) )    
sym_w   = geomAndNot( sym_w3  geomButtOrOver( sym_w3 sym_ind2 ) )  
ct_w1 = drc(ct_inda width < 31 opposite parallel shielded)        ; "31" is a trade number from spice model
ct_w2 = geomGetRectangle(ct_w1) 
ct_w3  = geomAndNot( ct_w2 geomButtOrOver( ct_w2 indm9 ) )
ct_w  = geomAndNot( ct_w3 geomButtOrOver( ct_w3 ct_ind2 ) )
std_w1 = drc(std_ind width < 31 opposite parallel shielded)        ; "31" is a trade number from spice model
std_w2 = geomGetRectangle(std_w1)
std_w  = geomAndNot( std_w2 geomButtOrOver( std_w2 indm9 ) )    
mim_block = geomAnd(ctm cbm)
RFDMYall = geomOr(RFDMY RFDMYUD)
shield1 = geomOr(metal6 metal5)
shield2 = geomAnd(shield1 ctm)
shield3 = geomAnd(shield2 RFDMY)
shield  = geomAndNot( shield3 geomButtOrOver( shield3 CTMDMYUD))    
shieldud = geomAnd(shield2 RFDMYUD)
RCTM = geomButtOrOver(mim_block VIA7i)
RCBM = geomButtOrOver(cbm RCTM)
OCBM = geomAndNot(RCBM RCTM)
ctm_via = geomAnd(RCTM VIA7i)
cbm_via = geomAnd(OCBM VIA7i)
tvia1 = geomAndNot(VIA7i ctm_via)
VIA7 = geomAndNot(tvia1 cbm_via)
VIA8 = geomCat( VIA8i ) 
L_EG1 = geomGetEdge(ctm inside metal8)
L_EG_RG1 = geomSize(L_EG1 0.005 edges)
CTM_EG_RG = geomSize(RCTM 0.005 edges)
L_EG_RG   = geomButtOrOver(CTM_EG_RG L_EG_RG1)
RCTM_RF1 = geomAnd(RCTM RFDMY)
RCTM_RF2 = geomButtOrOver(RCTM_RF1 shield)
RCTM_RF  = geomAndNot(RCTM_RF2 RFDMYUD)
RCTM_RF1P5 = geomAnd(RCTM_RF CAP1P5)                ; cap unit 1.5f RF wium
RCTM_RF2P0 = geomAnd(RCTM_RF CAP2P0)                ; cap unit 2.0f RF wium
RCTM_RF1P0 = geomAnd(RCTM_RF CAP1P0)                ; cap unit 1.0f RF wium
RCTM_RF_woum1   = geomAndNot(RCTM_RF1 geomButtOrOver(RCTM_RF1 shield))
RCTM_RF_woum_ex = geomButtOrOver(RCTM_RF_woum1 CTMDMYUD)    
RCTM_RF_woum    = geomAndNot(RCTM_RF_woum1 RCTM_RF_woum_ex)    
RCTM_RF1P5_woum = geomAnd(RCTM_RF_woum CAP1P5)      ; cap unit 1.5f RF woum
RCTM_RF2P0_woum = geomAnd(RCTM_RF_woum CAP2P0)      ; cap unit 2.0f RF woum
RCTM_RF1P0_woum = geomAnd(RCTM_RF_woum CAP1P0)      ; cap unit 1.0f RF woum
RCTM_RFUD1 = geomAnd(RCTM RFDMYUD)
RCTM_RFUD = geomButtOrOver(RCTM_RFUD1 shieldud)
RCTM_RF1P5UD = geomAnd(RCTM_RFUD CAP1P5)                ; cap unit 1.5f RF wium UD
RCTM_RF2P0UD = geomAnd(RCTM_RFUD CAP2P0)                ; cap unit 2.0f RF wium UD
RCTM_RF1P0UD = geomAnd(RCTM_RFUD CAP1P0)                ; cap unit 1.0f RF wium UD
RCTM_R1 = geomAndNot(RCTM RFDMYall)
RCTM_R  = geomAndNot(RCTM_R1 CTMDMYUD)    
RCTM_RUD1 = geomAndNot(RCTM RFDMYUD)
RCTM_RUD  = geomAnd(RCTM_RUD1 CTMDMYUD)
RCTM_R_3T = geomAnd( RCTM_R1 MIM_3TDMY )
RCTM_R_2T = geomAndNot( RCTM_R MIM_3TDMY )
RCTM_R_2TUD = geomAndNot(RCTM_RUD MIM_3TDMY)
RCTM_R1P5 = geomAnd(RCTM_R_2T CAP1P5)                ; cap unit 1.5f 2T
RCTM_R2P0 = geomAnd(RCTM_R_2T CAP2P0)                ; cap unit 2.0f 2T
RCTM_R1P0 = geomAnd(RCTM_R_2T CAP1P0)                ; cap unit 1.0f 2T
RCTM_R1P5UD = geomAnd(RCTM_R_2TUD CAP1P5)            ; cap unit 1.5f 2TUD
RCTM_R2P0UD = geomAnd(RCTM_R_2TUD CAP2P0)            ; cap unit 2.0f 2TUD
RCTM_R1P0UD = geomAnd(RCTM_R_2TUD CAP1P0)            ; cap unit 1.0f 2TUD
RCTM_R1P5_3T = geomAnd(RCTM_R_3T CAP1P5)             ; cap unit 1.5f 3T
RCTM_R2P0_3T = geomAnd(RCTM_R_3T CAP2P0)             ; cap unit 2.0f 3T
RCTM_R1P0_3T = geomAnd(RCTM_R_3T CAP1P0)             ; cap unit 1.0f 3T
MIM_TERM = geomSize( RCTM_R_3T 0.005 )
mim_psub_via = geomAnd( MIM_TERM psub )
mim_nw_via   = geomAnd( MIM_TERM nxwell )   
RF_MIM_TERM1 = geomSize( RCTM_RF_woum 0.005 )
RF_MIM_TERM  = geomAndNot( RF_MIM_TERM1 RCTM_RF_woum )    
rfmim_psub_via = geomAnd( RF_MIM_TERM psub )
rfmim_nw_via   = geomAnd( RF_MIM_TERM nxwell )    
w_fac   = drc(tndiff_jvar tpdiff_jvar sep < 0.29 opposite)
w_fac1   = drc(tndiff_jvar tpdiff_jvar sep < 0.29 opposite)
sbd_w = drc(schottky_p schottky_n sep < 0.325 opposite)
m1_pad = geomAnd(M1 RFPADDMY) ;
m2_pad = geomAnd(M2 RFPADDMY) ;
m3_pad = geomAnd(M3 RFPADDMY) ;
m4_pad = geomAnd(M4 RFPADDMY) ;
m5_pad = geomAnd(M5 RFPADDMY) ;
m6_pad = geomAnd(M6 RFPADDMY) ;
m7_pad = geomAnd(M7 RFPADDMY) ;
m8_pad = geomAnd(M8 RFPADDMY) ;
m9_pad = geomAnd(M9 RFPADDMY) ;
ap_pad = geomAnd(AP RFPADDMY) ;
bot_dmy1 = geomOr(m1_pad m2_pad) ;
bot_dmy2 = geomOr(bot_dmy1 m3_pad) ;
bot_dmy3 = geomOr(bot_dmy2 m4_pad) ;
bot_dmy4 = geomOr(bot_dmy3 m5_pad) ;
bot_dmy5 = geomOr(bot_dmy4 m6_pad) ;
bot_dmy6 = geomOr(bot_dmy5 m7_pad) ;
bot_dmy = geomCat(bot_dmy6) ;
rfpad1 = geomAnd(ap_pad m9_pad);
rfpad2 = geomAnd(rfpad1 m8_pad);
rfpad3 = geomAnd(rfpad2 PP);
rfpad4 = geomAnd(rfpad3 PO);
rfpad5 = geomButtOrOver(rfpad4 VIA8);
rfpad6 = geomButtOrOver(rfpad5 CB);
rfpad  = geomButtOrOver(rfpad6 CB2);
ext_rfpad = geomGetBBox(rfpad);   
D_0a = geomAnd(rfpad RFPADDMY1);
D_0b = geomAndNot(D_0a geomButtOrOver(D_0a RFPADDMY2));
rfpad_0 = geomAndNot(D_0b geomButtOrOver(D_0b RFPADDMY3));
D_15a = geomAndNot(rfpad geomButtOrOver(rfpad RFPADDMY1));
D_15b = geomAnd(D_15a RFPADDMY2);
rfpad_15 = geomAndNot(D_15b geomButtOrOver(D_15b RFPADDMY3));
D_23a = geomAndNot(rfpad geomButtOrOver(rfpad RFPADDMY1));
D_23b = geomAndNot(D_23a geomButtOrOver(D_23a RFPADDMY2));
rfpad_23 = geomAnd(D_23b RFPADDMY3);

;#############################################
;# CONNECTION                                #
;#############################################
ntap_not_var = geomAndNot(ntap VAR)
    ;--- geomConnect ---
geomConnect(
buttOrOver(gate1_not_IO2 poly)
    buttOrOver(ntap ntap_not_var)
    buttOrOver(gate1 poly)
    via( nplug  cnbase1 tndiff ) 
    buttOrOver(metal6 mom6m2)
    buttOrOver(metal6 mom6p1)
    via( VIA5  metal6 metal5 ) 
    buttOrOver(metal6 mom6p2)
    buttOrOver(metal6 mom6m1)
    buttOrOver(d_nd25hvd tndiff)
    buttOrOver(metal7 mom7p1)
    buttOrOver(metal7 indm9c)
    buttOrOver(metal7 mom7m1)
    via( VIA6  metal7 metal6 ) 
    buttOrOver(metal7 mom7m2)
    buttOrOver(metal7 mom7p2)
    buttOrOver(n_pplug tpdiff)
    buttOrOver(gate1_not_IO2 poly)
    buttOrOver(cnemit1 tndiff)
    buttOrOver(s_nd25hvdw tndiff)
    buttOrOver(ncoll1 nxwell_npn)
    via( VIA6  MOM_field7 MOM_field6 ) 
    buttOrOver(MOM_field7 metal7)
    buttOrOver(nplug tndiff)
    via( odCont  metal1 d_nd25hvdw ) 
    via( odCont  metal1 schottky_n ) 
    via( polyCont  metal1 poly ) 
    via( odCont  metal1 d_pd25hvd ) 
    via( odCont  metal1 s_pd25hvd ) 
    via( odCont  metal1 d_nd25hvd ) 
    via( odCont  metal1 s_nd25hvd ) 
    via( odCont  metal1 s_tpdiff ) 
    via( odCont  metal1 s_tndiff ) 
    via( odCont  metal1 tpdiff ) 
    via( polyCont  metal1 poly2 ) 
    via( odCont  metal1 d_tpdiff ) 
    via( odCont  metal1 schottky_p ) 
    via( odCont  metal1 s_nd25hvdw ) 
    via( p3Cont  metal1 p3 ) 
    via( odCont  metal1 d_tndiff ) 
    via( odCont  metal1 tndiff ) 
    buttOrOver(cemit1 tpdiff)
    via( nplug  inbase1 tndiff ) 
    via( VIA4  metal5 metal4 ) 
    buttOrOver(metal5 mom5p1)
    buttOrOver(metal5 mom5m1)
    buttOrOver(metal5 mom5m2)
    buttOrOver(metal5 mom5p2)
    buttOrOver(ptap tpdiff)
    buttOrOver(d_pd25hvd tpdiff)
    via( blc  tpdiff crown ) 
    buttOrOver(metal8 indm9c)
    buttOrOver(pplug tpdiff)
    buttOrOver(iemit1 tpdiff)
    via( pplug  ipbase1 tpdiff ) 
    via( VIA4  MOM_field5 MOM_field4 ) 
    buttOrOver(MOM_field5 metal5)
    via( VIA9  metal10 metal9 ) 
    buttOrOver(metal3 mom3p1)
    via( VIA2  metal3 metal2 ) 
    buttOrOver(metal3 mom3m1)
    buttOrOver(metal3 mom3m2)
    buttOrOver(metal3 mom3p2)
    buttOrOver(inemit1 tndiff)
    buttOrOver(tndiff ydio_hole)
    via( blc  tndiff crown ) 
    via( nplug  tndiff nxwell_npn ) 
    buttOrOver(tndiff ydio_ass)
    buttOrOver(tndiff tpdiff)
    via( VIA5  MOM_field6 MOM_field5 ) 
    buttOrOver(MOM_field6 metal6)
    buttOrOver(d_nd25hvdw tndiff)
    buttOrOver(MOM_field4 metal4)
    via( VIA3  MOM_field4 MOM_field3 ) 
    via( VIA1  metal2 metal1 ) 
    buttOrOver(poly poly_rf)
    buttOrOver(poly poly2)
    buttOrOver(ntap tndiff)
    buttOrOver(s_nd25hvd tndiff)
    buttOrOver(s_pd25hvd tpdiff)
    buttOrOver(MOM_field1 metal1)
    via( odCont  MOM_field1 diff_mom ) 
    via( polyCont  MOM_field1 poly2 ) 
    buttOrOver(metal9 indm9c)
    buttOrOver(metal9 indm9m)
    buttOrOver(metal9 indm9p)
    buttOrOver(metal4 mom4p2)
    buttOrOver(metal4 mom4m1)
    buttOrOver(metal4 mom4m2)
    buttOrOver(metal4 mom4p1)
    via( VIA3  metal4 metal3 ) 
    buttOrOver(MOM_field2 metal2)
    via( VIA1  MOM_field2 MOM_field1 ) 
    buttOrOver(tiod tpdiff)
    buttOrOver(tiod tndiff)
    via( VIA2  MOM_field3 MOM_field2 ) 
    buttOrOver(MOM_field3 metal3)
    via( pplug  cpbase1 tpdiff ) 
    ;common geomConnect in xdev statement----
    via(ctm_via  metal8  ctm)
    via(cbm_via  metal8  cbm)
    via(VIA7  metal8 metal7)
    via(VIA8  metal9  metal8)
    buttOrOver(metal6  shield) 
    buttOrOver(shield  metal6)
    buttOrOver(shieldud  metal6)
    ;--------------------------------

    label( metal1_text  metal1 ) 
    label( metal10_text  metal10 ) 
    label( metal2_text  metal2 ) 
    label( metal3_text  metal3 ) 
    label( metal4_text  metal4 ) 
    label( metal5_text  metal5 ) 
    label( metal6_text  metal6 ) 
    label( metal7_text  metal7 ) 
    label( metal8_text  metal8 ) 
    label( metal9_text  metal9 ) 
    label( metal1_ptext  metal1 ) 
    label( metal10_ptext  metal10 ) 
    label( metal2_ptext  metal2 ) 
    label( metal3_ptext  metal3 ) 
    label( metal4_ptext  metal4 ) 
    label( metal5_ptext  metal5 ) 
    label( metal6_ptext  metal6 ) 
    label( metal7_ptext  metal7 ) 
    label( metal8_ptext  metal8 ) 
    label( metal9_ptext  metal9 ) 
)

if( avSwitch( "Skip_Soft_Connect_Checks") then 
    geomStamp( nxwell tndiff by nplug ) 
    geomStamp( rwel tpdiff by pplug ) 
    geomStamp( n_psub tpdiff by n_pplug ) 
    geomStamp( psub_term tpdiff by pplug ) 
    geomStamp( psub tpdiff by pplug ) 
    geomStamp( RFDMY6T tpdiff by rf_pplug ) 
    geomStamp( RFDMY5T tpdiff by rf_pplug ) 
    geomStamp( RFDMY_hia tpdiff by hiaplug ) 
    geomStamp( coll1 tpdiff by pplug ) 
    geomStamp( poly_term psub by poly_psub_via ) 
    geomStamp( poly_term nxwell by poly_nw_via ) 
    geomStamp( PROBEM5_T psub by PROBEM5_B ) 
    geomStamp( PROBEM5_T nxwell by PROBEM5_B ) 
    geomStamp( PROBEM2_T psub by PROBEM2_B ) 
    geomStamp( PROBEM2_T nxwell by PROBEM2_B ) 
    geomStamp( RFDMY_hia_psub psub by rf_hia_via ) 
    geomStamp( PROBEM3_T psub by PROBEM3_B ) 
    geomStamp( PROBEM3_T nxwell by PROBEM3_B ) 
    geomStamp( PROBEM7_T psub by PROBEM7_B ) 
    geomStamp( PROBEM7_T nxwell by PROBEM7_B ) 
    geomStamp( PROBEM1_T psub by PROBEM1_B ) 
    geomStamp( PROBEM1_T nxwell by PROBEM1_B ) 
    geomStamp( rfdmy56 psub by rfdmy56_via ) 
    geomStamp( PROBEM4_T psub by PROBEM4_B ) 
    geomStamp( PROBEM4_T nxwell by PROBEM4_B ) 
    geomStamp( PROBEM6_T psub by PROBEM6_B ) 
    geomStamp( PROBEM6_T nxwell by PROBEM6_B ) 
    geomStamp( DNW nxwell by dnwc ) 
else 
    geomStamp( nxwell tndiff by nplug multStamp ) 
    geomStamp( rwel tpdiff by pplug multStamp ) 
    if( !avSwitch( "NW_RING" ) then
       geomStamp( n_psub tpdiff by n_pplug multStamp ) 
    ) ;if

    geomStamp( psub_term tpdiff by pplug multStamp ) 
    geomStamp( psub tpdiff by pplug multStamp ) 
    geomStamp( RFDMY6T tpdiff by rf_pplug multStamp ) 
    geomStamp( RFDMY5T tpdiff by rf_pplug multStamp ) 
    geomStamp( RFDMY_hia tpdiff by hiaplug multStamp ) 
    geomStamp( coll1 tpdiff by pplug multStamp ) 
    geomStamp( poly_term psub by poly_psub_via multStamp ) 
    geomStamp( poly_term nxwell by poly_nw_via ) 
    geomStamp( PROBEM5_T psub by PROBEM5_B multStamp ) 
    geomStamp( PROBEM5_T nxwell by PROBEM5_B ) 
    geomStamp( PROBEM2_T psub by PROBEM2_B multStamp ) 
    geomStamp( PROBEM2_T nxwell by PROBEM2_B ) 
    geomStamp( RFDMY_hia_psub psub by rf_hia_via multStamp ) 
    geomStamp( PROBEM3_T psub by PROBEM3_B multStamp ) 
    geomStamp( PROBEM3_T nxwell by PROBEM3_B ) 
    geomStamp( PROBEM7_T psub by PROBEM7_B multStamp ) 
    geomStamp( PROBEM7_T nxwell by PROBEM7_B ) 
    geomStamp( PROBEM1_T psub by PROBEM1_B multStamp ) 
    geomStamp( PROBEM1_T nxwell by PROBEM1_B ) 
    geomStamp( rfdmy56 psub by rfdmy56_via multStamp ) 
    geomStamp( PROBEM4_T psub by PROBEM4_B multStamp ) 
    geomStamp( PROBEM4_T nxwell by PROBEM4_B ) 
    geomStamp( PROBEM6_T psub by PROBEM6_B multStamp ) 
    geomStamp( PROBEM6_T nxwell by PROBEM6_B ) 
    geomStamp( DNW nxwell by dnwc multStamp ) 
) ;if 
;//#############################################
;//# STAMP NODAL INFO. TO DEVICE LAYER         #
;//#############################################
;#############################################
;# DEFINE PROCEDURE                          #
;#############################################
procedure( WPE_predict( pg sd reg WPE WPEtype )
width  = geomGetEdge( pg  butting sd )
length = geomGetEdge( reg inside  pg )
psub_proximity = geomOr( WPEtype )

if( ( WPE == "n" ) then
;    psub_proximity is followeddfm_device_wi_wpe.rul mask logic operation
;psub_proximity = geomSize( WPEtype 0.001 edges )
measureProximity2(
        reg
        psub_proximity
        wped
        output( SCraw SCBraw SCCraw )
        edgeLayers(width length)
        calculateEdges4( scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*( s0+NMOS_BOTTOM_EXT )) - 1/(scale*( s1+NMOS_BOTTOM_EXT ) ))
                         scale*sw * ( 1/(scale*s0) - 1/(scale*s1) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+NMOS_BOTTOM_EXT ))*exp(-10*(scale*( s0+NMOS_BOTTOM_EXT )))/10 ) + ( exp(-10*(scale*( s0+NMOS_BOTTOM_EXT )))/100 ) - ( (scale*( s1+NMOS_BOTTOM_EXT ))*exp(-10*(scale*( s1+NMOS_BOTTOM_EXT )))/10 ) - (exp(-10*(scale*( s1+NMOS_BOTTOM_EXT )))/100 ) )
                         scale*sw * ( (  scale*s0*exp(-10*scale*s0)/10 ) + ( exp(-10*scale*s0)/100 ) - ( scale*s1*exp(-10*scale*s1)/10 ) - (exp(-10*scale*s1)/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( ( (scale*( s0+NMOS_BOTTOM_EXT ))*exp(-20*(scale*( s0+NMOS_BOTTOM_EXT )))/20 ) + ( exp(-20*(scale*( s0+NMOS_BOTTOM_EXT )))/400 ) - ( (scale*( s1+NMOS_BOTTOM_EXT ))*exp(-20*(scale*( s1+NMOS_BOTTOM_EXT )))/20 ) - (exp(-20*(scale*( s1+NMOS_BOTTOM_EXT )))/400  ) )
                         scale*sw * ( (  scale*s0*exp(-20*scale*s0)/20 ) + ( exp(-20*scale*s0)/400 ) - ( scale*s1*exp(-20*scale*s1)/20 ) - (exp(-20*scale*s1)/400 ) )

                        )
        inside shieldedWell
        forceMaxS
)
SCAeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCraw )
SCBeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCBraw )
SCCeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCCraw )
nameParameter(SCAeff "sca")
nameParameter(SCBeff "scb")
nameParameter(SCCeff "scc")

else
if( ( WPE == "p" ) then
;    psub_proximity is followed mask logic operation
;psub_proximity = geomSize( WPEtype 0.001 edges )
measureProximity2(
        reg
        psub_proximity
        wped
        output( SCraw SCBraw SCCraw )
        edgeLayers(width length)
        calculateEdges4( scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*s0) - 1/(scale*s1) )
                         scale*sw * ( 1/(scale*( s0+PMOS_TOP_EXT )) - 1/(scale*( s1+PMOS_TOP_EXT ) ))
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( (  scale*s0*exp(-10*scale*s0)/10 ) + ( exp(-10*scale*s0)/100 ) - ( scale*s1*exp(-10*scale*s1)/10 ) - (exp(-10*scale*s1)/100 ) )
                         scale*sw * ( ( (scale*( s0+PMOS_TOP_EXT ))*exp(-10*(scale*( s0+PMOS_TOP_EXT )))/10 ) + ( exp(-10*(scale*( s0+PMOS_TOP_EXT )))/100 ) - ( (scale*( s1+PMOS_TOP_EXT ))*exp(-10*(scale*( s1+PMOS_TOP_EXT )))/10 ) - (exp(-10*(scale*( s1+PMOS_TOP_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( (  scale*s0*exp(-20*scale*s0)/20 ) + ( exp(-20*scale*s0)/400 ) - ( scale*s1*exp(-20*scale*s1)/20 ) - (exp(-20*scale*s1)/400 ) )
                         scale*sw * ( ( (scale*( s0+PMOS_TOP_EXT ))*exp(-20*(scale*( s0+PMOS_TOP_EXT )))/20 ) + ( exp(-20*(scale*( s0+PMOS_TOP_EXT )))/400 ) - ( (scale*( s1+PMOS_TOP_EXT ))*exp(-20*(scale*( s1+PMOS_TOP_EXT )))/20 ) - (exp(-20*(scale*( s1+PMOS_TOP_EXT )))/400  ) )
                        )
        inside shieldedWell
        forceMaxS
)
SCAeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCraw )
SCBeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCBraw )
SCCeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCCraw )
nameParameter(SCAeff "sca")
nameParameter(SCBeff "scb" )
nameParameter(SCCeff "scc")
 ) ;; end of if WPE ==P
) ;; end of if WPE ==N

)

;#############################################
;# FORM DEVICE                               #
;#############################################
 

if( avSwitch("DFM_LPE") then
  ;------------- Specify path to encrypted lvs files directory (required for DFM LVS) ----------------
  ;DFM_LPE_PATH = "."

  load( "./DFM/constant.txt" ) ; please fill in full DFM path
  load( "./DFM/dfm_device.rul.1" )	 ; please fill in full DFM path

  	
  ;------------------- DFM macro calls ---------------------------------------------------------------
  Weff_Leff_logical_op( poly mdiff gate1 tpdiff tndiff PP NP nplug pplug )
  
  ;mos_Lshape_Nrds( mname reg pg sd bulk spice_mname cellv_name actod gt1 sti_od LOD WPE WPEtype WPEaux DFM strain_si strain_si_layer sod rpo_flag )
  ;------------------- NMOS DEVICE -------------------------------------------------------------------
  mos_Lshape_Nrds( "nch"              ngate            poly tndiff psub   "nch"           "nch ivpcell"               mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_18"           ngate_18         poly tndiff psub   "nch_18"        "nch_18 ivpcell"            mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_18_dnw"       dngate_18        poly tndiff psub   "nch_18"        "nch_18_dnw ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_18_dnw"       dngate_18_mac    poly tndiff psub   "nch_18_mac"    "nch_18_dnw_mac ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_18"           ngate_18_mac     poly tndiff psub   "nch_18_mac"    "nch_18_mac ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25"           ngate_25         poly tndiff psub   "nch_25"        "nch_25 ivpcell"            mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25_dnw"       dngate_25        poly tndiff psub   "nch_25"        "nch_25_dnw ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25_dnw"       dngate_25_mac    poly tndiff psub   "nch_25_mac"    "nch_25_dnw_mac ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25_dnwod"     dngate_25od      poly tndiff psub   "nch_33"        "nch_25_dnwod33 ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25_dnwod"     dngate_25od_mac  poly tndiff psub   "nch_33_mac"    "nch_25_dnwod33_mac ivpcell" mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25_dnwud"     dngate_25ud      poly tndiff psub   "nch_18"        "nch_25_dnwud18 ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25_dnwud"     dngate_25ud_mac  poly tndiff psub   "nch_18_mac"    "nch_25_dnwud18_mac ivpcell" mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25"           ngate_25_mac     poly tndiff psub   "nch_25_mac"    "nch_25_mac ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25od"         ngate_25od       poly tndiff psub   "nch_33"        "nch_25od33 ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25od"         ngate_25od_mac   poly tndiff psub   "nch_33_mac"    "nch_25od33_mac ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25ud"         ngate_25ud       poly tndiff psub   "nch_18"        "nch_25ud18 ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_25ud"         ngate_25ud_mac   poly tndiff psub   "nch_18_mac"    "nch_25ud18_mac ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_33"           ngate_33         poly tndiff psub   "nch_33"        "nch_33 ivpcell"            mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_33_dnw"       dngate_33        poly tndiff psub   "nch_33"        "nch_33_dnw ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_33_dnw"       dngate_33_mac    poly tndiff psub   "nch_33_mac"    "nch_33_dnw_mac ivpcell"    mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_33"           ngate_33_mac     poly tndiff psub   "nch_33_mac"    "nch_33_mac ivpcell"        mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_dnw"          nrgate           poly tndiff psub   "nch"           "nch_dnw ivpcell"           mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_dnw_1tr"      ngate_1tr        poly tndiff psub   "nch_dnw_1tr"   "nch_dnw_1tr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nch_dnw"          nrgate_mac       poly tndiff psub   "nch_mac"       "nch_dnw_mac ivpcell"       mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_dnw_w"        ngate_dnw_w      poly tndiff psub   "nch_w"         "nch_dnw_w ivpcell"         mdiff gate1 OD 1 "n" nCore    0    )
  mos_Lshape_Nrds( "nch_dnw_w_lvt"    ngate_dnw_w_lvt  poly tndiff psub   "nch_w_lvt"     "nch_dnw_w_lvt ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nch_esd18"        ngate_esd18      poly tndiff psub   "nch_esd18"     "nch_esd18 ivpcell"         mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_esd18_dnw"    dngate_esd18     poly tndiff psub   "nch_esd18"     "nch_esd18_dnw ivpcell"     mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_esd18_dnw"    dngate_esd18_mac poly tndiff psub   "nch_esd18_mac" "nch_esd18_dnw_mac ivpcell" mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_esd18"        ngate_esd18_mac  poly tndiff psub   "nch_esd18_mac" "nch_esd18_mac ivpcell"     mdiff gate1 OD 1 "n" nIO      0    )
  mos_Lshape_Nrds( "nch_hvt"          nhvgate          poly tndiff psub   "nch_hvt"       "nch_hvt ivpcell"           mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_hvt_dnw"      n1hvgate         poly tndiff psub   "nch_hvt"       "nch_hvt_dnw ivpcell"       mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_hvt_dnw"      n1hvgate_mac     poly tndiff psub   "nch_hvt_mac"   "nch_hvt_dnw_mac ivpcell"   mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_hvt"          nhvgate_mac      poly tndiff psub   "nch_hvt_mac"   "nch_hvt_mac ivpcell"       mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_lpg"          ngatelpg         poly tndiff psub   "nch_lpg"       "nch_lpg ivpcell"           mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_lpghvt"       nhvgatelpg       poly tndiff psub   "nch_lpghvt"    "nch_lpghvt ivpcell"        mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_lpgna"        nlgatelpg        poly tndiff psub   "nch_lpgna"     "nch_lpgna ivpcell"         mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_lvt"          nlvgate          poly tndiff psub   "nch_lvt"       "nch_lvt ivpcell"           mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_lvt_dnw"      n1lvgate         poly tndiff psub   "nch_lvt"       "nch_lvt_dnw ivpcell"       mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_lvt_dnw"      n1lvgate_mac     poly tndiff psub   "nch_lvt_mac"   "nch_lvt_dnw_mac ivpcell"   mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_lvt"          nlvgate_mac      poly tndiff psub   "nch_lvt_mac"   "nch_lvt_mac ivpcell"       mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch"              ngate_mac        poly tndiff psub   "nch_mac"       "nch_mac ivpcell"           mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_mlvt"         nilvtgate        poly tndiff psub   "nch_mlvt"      "nch_mlvt ivpcell"          mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_mlvt_dnw"     n1ilvtgate       poly tndiff psub   "nch_mlvt"      "nch_mlvt_dnw ivpcell"      mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_mlvt_dnw"     n1ilvtgate_mac   poly tndiff psub   "nch_mlvt_mac"  "nch_mlvt_dnw_mac ivpcell"  mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_mlvt"         nilvtgate_mac    poly tndiff psub   "nch_mlvt_mac"  "nch_mlvt_mac ivpcell"      mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_na"           nlgate           poly tndiff psub   "nch_na"        "nch_na ivpcell"            mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na18"         ngate_18na       poly tndiff psub   "nch_na18"      "nch_na18 ivpcell"          mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na18"         ngate_18na_mac   poly tndiff psub   "nch_na18_mac"  "nch_na18_mac ivpcell"      mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na25"         ngate_25na       poly tndiff psub   "nch_na25"      "nch_na25 ivpcell"          mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na25"         ngate_25na_mac   poly tndiff psub   "nch_na25_mac"  "nch_na25_mac ivpcell"      mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na25od"       ngate_25naod     poly tndiff psub   "nch_na25od33"  "nch_na25od33 ivpcell"      mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na25od"       ngate_25naod_mac poly tndiff psub   "nch_na25od33_mac" "nch_na25od33_mac ivpcell"  mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na25ud"       ngate_25naud     poly tndiff psub   "nch_na18"      "nch_na25ud18 ivpcell"      mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na25ud"       ngate_25naud_mac poly tndiff psub   "nch_na18_mac"  "nch_na25ud18_mac ivpcell"  mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na33"         ngate_33na       poly tndiff psub   "nch_na33"      "nch_na33 ivpcell"          mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na33"         ngate_33na_mac   poly tndiff psub   "nch_na33_mac"  "nch_na33_mac ivpcell"      mdiff gate1 OD 1 "n" nt_n     0    )
  mos_Lshape_Nrds( "nch_na"           nlgate_mac       poly tndiff psub   "nch_na_mac"    "nch_na_mac ivpcell"        mdiff gate1 OD 1 0 NALayer  0    )
  mos_Lshape_Nrds( "nch_timer"        ngate_st         poly tndiff psub   "nch_timer"     "nch_timer ivpcell"         mdiff gate1 OD 1 "n" nCore    0    )
  mos_Lshape_Nrds( "nch_uhvt"         nuhvgate         poly tndiff psub   "nch_uhvt"      "nch_uhvt ivpcell"          mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_uhvt_dnw"     n1uhvgate        poly tndiff psub   "nch_uhvt"      "nch_uhvt_dnw ivpcell"      mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_uhvt_dnw"     n1uhvgate_mac    poly tndiff psub   "nch_uhvt_mac"  "nch_uhvt_dnw_mac ivpcell"  mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_uhvt"         nuhvgate_mac     poly tndiff psub   "nch_uhvt_mac"  "nch_uhvt_mac ivpcell"      mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_ulvt"         nuvgate          poly tndiff psub   "nch_ulvt"      "nch_ulvt ivpcell"          mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_ulvt_dnw"     n1uvgate         poly tndiff psub   "nch_ulvt"      "nch_ulvt_dnw ivpcell"      mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_ulvt_dnw"     n1uvgate_mac     poly tndiff psub   "nch_ulvt_mac"  "nch_ulvt_dnw_mac ivpcell"  mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_ulvt"         nuvgate_mac      poly tndiff psub   "nch_ulvt_mac"  "nch_ulvt_mac ivpcell"      mdiff gate1 OD 1 "n" nCore    1    )
  mos_Lshape_Nrds( "nch_w"            ngate_w1t        poly tndiff psub   "nch_w"         "nch_w ivpcell"             mdiff gate1 OD 1 "n" nCore    0    )
  mos_Lshape_Nrds( "nch_w_lvt"        ngate_w1t_lvt    poly tndiff psub   "nch_w_lvt"     "nch_w_lvt ivpcell"         mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_dphcsr"     ngate_spddphc    poly tndiff psub   "nchpd_dphcsr"  "nchpd_dphcsr ivpcell"      mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_dpsr"       ngate_spddp      poly tndiff psub   "nchpd_dpsr"    "nchpd_dpsr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_hvtdphcsr"  ngate_hvspddphc  poly tndiff psub   "nchpd_hvtdphcsr" "nchpd_hvtdphcsr ivpcell"   mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_hvtdpsr"    ngate_hvspddp    poly tndiff psub   "nchpd_hvtdpsr" "nchpd_hvtdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_hvtsr"      ngate_hvspd      poly tndiff psub   "nchpd_hvtsr"   "nchpd_hvtsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_lpgdpsr"    ngate_spdlpgdp   poly tndiff psub   "nchpd_lpgdpsr" "nchpd_lpgdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_lpgsr"      ngate_spdlpg     poly tndiff psub   "nchpd_lpgsr"   "nchpd_lpgsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_lpgtpsr"    ngate_spdlpgtp   poly tndiff psub   "nchpd_lpgtpsr" "nchpd_lpgtpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_sr"         ngate_spd        poly tndiff psub   "nchpd_sr"      "nchpd_sr ivpcell"          mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_ulpdpsr"    ngate_spdulpdp   poly tndiff psub   "nchpd_ulpdpsr" "nchpd_ulpdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_ulpsr"      ngate_spdulp     poly tndiff psub   "nchpd_ulpsr"   "nchpd_ulpsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_wisr"       ngate_spdwi      poly tndiff psub   "nchpd_wisr"    "nchpd_wisr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpd_wosr"       ngate_spdwo      poly tndiff psub   "nchpd_wosr"    "nchpd_wosr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_dphcsr"     ngate_spgdphc    poly tndiff psub   "nchpg_dphcsr"  "nchpg_dphcsr ivpcell"      mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_dpsr"       ngate_spgdp      poly tndiff psub   "nchpg_dpsr"    "nchpg_dpsr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_hvtdphcsr"  ngate_hvspgdphc  poly tndiff psub   "nchpg_hvtdphcsr" "nchpg_hvtdphcsr ivpcell"   mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_hvtdpsr"    ngate_hvspgdp    poly tndiff psub   "nchpg_hvtdpsr" "nchpg_hvtdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_hvtsr"      ngate_hvspg      poly tndiff psub   "nchpg_hvtsr"   "nchpg_hvtsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_lpgdpsr"    ngate_spglpgdp   poly tndiff psub   "nchpg_lpgdpsr" "nchpg_lpgdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_lpgsr"      ngate_spglpg     poly tndiff psub   "nchpg_lpgsr"   "nchpg_lpgsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_lpgtpsr"    ngate_spglpgtp   poly tndiff psub   "nchpg_lpgtpsr" "nchpg_lpgtpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_sr"         ngate_spg        poly tndiff psub   "nchpg_sr"      "nchpg_sr ivpcell"          mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_ulpdpsr"    ngate_spgulpdp   poly tndiff psub   "nchpg_ulpdpsr" "nchpg_ulpdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_ulpsr"      ngate_spgulp     poly tndiff psub   "nchpg_ulpsr"   "nchpg_ulpsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_wisr"       ngate_spgwi      poly tndiff psub   "nchpg_wisr"    "nchpg_wisr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "nchpg_wosr"       ngate_spgwo      poly tndiff psub   "nchpg_wosr"    "nchpg_wosr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pch"              pgate            poly tpdiff nxwell "pch"           "pch ivpcell"               mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_18"           pgate_18         poly tpdiff nxwell "pch_18"        "pch_18 ivpcell"            mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_18"           pgate_18_mac     poly tpdiff nxwell "pch_18_mac"    "pch_18_mac ivpcell"        mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_25"           pgate_25         poly tpdiff nxwell "pch_25"        "pch_25 ivpcell"            mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_25"           pgate_25_mac     poly tpdiff nxwell "pch_25_mac"    "pch_25_mac ivpcell"        mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_25od"         pgate_25od       poly tpdiff nxwell "pch_33"        "pch_25od33 ivpcell"        mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_25od"         pgate_25od_mac   poly tpdiff nxwell "pch_33_mac"    "pch_25od33_mac ivpcell"    mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_25ud"         pgate_25ud       poly tpdiff nxwell "pch_18"        "pch_25ud18 ivpcell"        mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_25ud"         pgate_25ud_mac   poly tpdiff nxwell "pch_18_mac"    "pch_25ud18_mac ivpcell"    mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_33"           pgate_33         poly tpdiff nxwell "pch_33"        "pch_33 ivpcell"            mdiff gate1 OD 1 "p" pIO      0    )
  mos_Lshape_Nrds( "pch_33"           pgate_33_mac     poly tpdiff nxwell "pch_33_mac"    "pch_33_mac ivpcell"        mdiff gate1 OD 1 "p" pIO      0    )
  mos_Lshape_Nrds( "pch_edc"          pgate_1tr        poly tpdiff nxwell "pch_edc"       "pch_edc ivpcell"           mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_hvt"          phvgate          poly tpdiff nxwell "pch_hvt"       "pch_hvt ivpcell"           mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_hvt"          phvgate_mac      poly tpdiff nxwell "pch_hvt_mac"   "pch_hvt_mac ivpcell"       mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_lpg"          pgatelpg         poly tpdiff nxwell "pch_lpg"       "pch_lpg ivpcell"           mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_lpghvt"       phvgatelpg       poly tpdiff nxwell "pch_lpghvt"    "pch_lpghvt ivpcell"        mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_lvt"          plvgate          poly tpdiff nxwell "pch_lvt"       "pch_lvt ivpcell"           mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_lvt"          plvgate_mac      poly tpdiff nxwell "pch_lvt_mac"   "pch_lvt_mac ivpcell"       mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch"              pgate_mac        poly tpdiff nxwell "pch_mac"       "pch_mac ivpcell"           mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_mlvt"         pilvtgate        poly tpdiff nxwell "pch_mlvt"      "pch_mlvt ivpcell"          mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_mlvt"         pilvtgate_mac    poly tpdiff nxwell "pch_mlvt_mac"  "pch_mlvt_mac ivpcell"      mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_timer"        pgate_st         poly tpdiff nxwell "pch_timer"     "pch_timer ivpcell"         mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_uhvt"         puhvgate         poly tpdiff nxwell "pch_uhvt"      "pch_uhvt ivpcell"          mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_uhvt"         puhvgate_mac     poly tpdiff nxwell "pch_uhvt_mac"  "pch_uhvt_mac ivpcell"      mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_ulvt"         puvgate          poly tpdiff nxwell "pch_ulvt"      "pch_ulvt ivpcell"          mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_ulvt"         puvgate_mac      poly tpdiff nxwell "pch_ulvt_mac"  "pch_ulvt_mac ivpcell"      mdiff gate1 OD 1 "p" pCore    1    )
  mos_Lshape_Nrds( "pch_w"            pgate_w1t        poly tpdiff nxwell "pch_w"         "pch_w ivpcell"             mdiff gate1 OD 1 "p" pCore    0    )
  mos_Lshape_Nrds( "pch_w_lvt"        pgate_w1t_lvt    poly tpdiff nxwell "pch_w_lvt"     "pch_w_lvt ivpcell"         mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_dphcsr"     pgate_sdphc      poly tpdiff nxwell "pchpu_dphcsr"  "pchpu_dphcsr ivpcell"      mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_dpsr"       pgate_sdp        poly tpdiff nxwell "pchpu_dpsr"    "pchpu_dpsr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_hvtdphcsr"  pgate_hvsdphc    poly tpdiff nxwell "pchpu_hvtdphcsr" "pchpu_hvtdphcsr ivpcell"   mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_hvtdpsr"    pgate_hvsdp      poly tpdiff nxwell "pchpu_hvtdpsr" "pchpu_hvtdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_hvtsr"      pgate_hvs        poly tpdiff nxwell "pchpu_hvtsr"   "pchpu_hvtsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_lpgdpsr"    pgate_sdplpg     poly tpdiff nxwell "pchpu_lpgdpsr" "pchpu_lpgdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_lpgsr"      pgate_slpg       poly tpdiff nxwell "pchpu_lpgsr"   "pchpu_lpgsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_lpgtpsr"    pgate_stplpg     poly tpdiff nxwell "pchpu_lpgtpsr" "pchpu_lpgtpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_sr"         pgate_s          poly tpdiff nxwell "pchpu_sr"      "pchpu_sr ivpcell"          mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_ulpdpsr"    pgate_sdpulp     poly tpdiff nxwell "pchpu_ulpdpsr" "pchpu_ulpdpsr ivpcell"     mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_ulpsr"      pgate_sulp       poly tpdiff nxwell "pchpu_ulpsr"   "pchpu_ulpsr ivpcell"       mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_wisr"       pgate_swi        poly tpdiff nxwell "pchpu_wisr"    "pchpu_wisr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )
  mos_Lshape_Nrds( "pchpu_wosr"       pgate_swo        poly tpdiff nxwell "pchpu_wosr"    "pchpu_wosr ivpcell"        mdiff gate1 OD 0 0 NALayer  0    )

else

extractMOS("nch_timer" ngate_st poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_timer" )
  cellView( "nch_timer ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_st butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_st) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_st shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_st shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_st shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_st "model" "nch_timer") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_st
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_st, "n", nCore )
extractMOS("nch_dnw" nrgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch" )
  cellView( "nch_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nrgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nrgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nrgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nrgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nrgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nrgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nrgate "model" "nch") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nrgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nrgate, "n", nCore )
extractMOS("nch_na" nlgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na_mac" )
  cellView( "nch_na_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nlgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlgate_mac "model" "nch_na_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

extractMOS("nch_esd18_dnw" dngate_esd18 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_esd18" )
  cellView( "nch_esd18_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_esd18 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_esd18) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_esd18 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_esd18 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_esd18 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_esd18 "model" "nch_esd18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_esd18
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_esd18, "n", nIO )
extractMOS("nchpg_ulpdpsr" ngate_spgulpdp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_ulpdpsr" )
  cellView( "nchpg_ulpdpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spgulpdp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spgulpdp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spgulpdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spgulpdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spgulpdp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spgulpdp "model" "nchpg_ulpdpsr") 
   ) ;if

extractMOS("nch_18" ngate_18_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18_mac" )
  cellView( "nch_18_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_18_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_18_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_18_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_18_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_18_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_18_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_18_mac "model" "nch_18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_18_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_18_mac, "n", nIO )
extractMOS("nchpg_dpsr" ngate_spgdp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_dpsr" )
  cellView( "nchpg_dpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spgdp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spgdp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spgdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spgdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spgdp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spgdp "model" "nchpg_dpsr") 
   ) ;if

extractMOS("nch_lvt" nlvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lvt" )
  cellView( "nch_lvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nlvgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlvgate "model" "nch_lvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nlvgate, "n", nCore )
extractMOS("nch_na" nlgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na" )
  cellView( "nch_na ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nlgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlgate "model" "nch_na") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nlgate, "n", nt_n )
extractMOS("nch_mlvt" nilvtgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mlvt_mac" )
  cellView( "nch_mlvt_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nilvtgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nilvtgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nilvtgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nilvtgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nilvtgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nilvtgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nilvtgate_mac "model" "nch_mlvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nilvtgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nilvtgate_mac, "n", nCore )
extractMOS("nch_hvt_dnw" n1hvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_hvt_mac" )
  cellView( "nch_hvt_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1hvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1hvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1hvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1hvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1hvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" n1hvgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1hvgate_mac "model" "nch_hvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1hvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1hvgate_mac, "n", nCore )
extractMOS("nch_dnw_w" ngate_dnw_w poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_w" )
  cellView( "nch_dnw_w ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_dnw_w butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_dnw_w) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_dnw_w shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_dnw_w shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_dnw_w shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_dnw_w "model" "nch_w") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_dnw_w
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_dnw_w, "n", nCore )
extractMOS("nch_na25" ngate_25na poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na25" )
  cellView( "nch_na25 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25na butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25na) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25na shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25na shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25na shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25na )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25na "model" "nch_na25") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25na
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25na, "n", nt_n )
extractMOS("nch_25_dnwud" dngate_25ud poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18" )
  cellView( "nch_25_dnwud18 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_25ud butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_25ud) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_25ud shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_25ud shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_25ud shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_25ud )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_25ud "model" "nch_18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_25ud
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_25ud, "n", nIO )
extractMOS("nch_mlvt_dnw" n1ilvtgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mlvt_mac" )
  cellView( "nch_mlvt_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1ilvtgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1ilvtgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1ilvtgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1ilvtgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1ilvtgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" n1ilvtgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1ilvtgate_mac "model" "nch_mlvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1ilvtgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1ilvtgate_mac, "n", nCore )
extractMOS("nchpg_hvtdphcsr" ngate_hvspgdphc poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_hvtdphcsr" )
  cellView( "nchpg_hvtdphcsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_hvspgdphc butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_hvspgdphc) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_hvspgdphc shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_hvspgdphc shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_hvspgdphc shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_hvspgdphc "model" "nchpg_hvtdphcsr") 
   ) ;if

extractMOS("nchpd_wisr" ngate_spdwi poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_wisr" )
  cellView( "nchpd_wisr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdwi butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdwi) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdwi shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdwi shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdwi shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdwi "model" "nchpd_wisr") 
   ) ;if

extractMOS("nch_hvt" nhvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_hvt_mac" )
  cellView( "nch_hvt_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nhvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nhvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nhvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nhvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nhvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nhvgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nhvgate_mac "model" "nch_hvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nhvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nhvgate_mac, "n", nCore )
extractMOS("nch_lpg" ngatelpg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lpg" )
  cellView( "nch_lpg ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngatelpg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngatelpg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngatelpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngatelpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngatelpg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngatelpg "model" "nch_lpg") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngatelpg
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngatelpg, "n", nCore )
extractMOS("nchpd_sr" ngate_spd poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_sr" )
  cellView( "nchpd_sr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spd butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spd) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spd shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spd shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spd shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spd "model" "nchpd_sr") 
   ) ;if

extractMOS("nch_lpghvt" nhvgatelpg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lpghvt" )
  cellView( "nch_lpghvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nhvgatelpg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nhvgatelpg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nhvgatelpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nhvgatelpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nhvgatelpg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nhvgatelpg "model" "nch_lpghvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nhvgatelpg
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nhvgatelpg, "n", nCore )
extractMOS("nch" ngate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch" )
  cellView( "nch ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate "model" "nch") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate, "n", nCore )
extractMOS("nch_18_dnw" dngate_18 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18" )
  cellView( "nch_18_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_18 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_18) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_18 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_18 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_18 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_18 )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_18 "model" "nch_18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_18
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_18, "n", nIO )
extractMOS("nchpg_lpgsr" ngate_spglpg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_lpgsr" )
  cellView( "nchpg_lpgsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spglpg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spglpg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spglpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spglpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spglpg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spglpg "model" "nchpg_lpgsr") 
   ) ;if

extractMOS("nch_w_lvt" ngate_w1t_lvt poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_w_lvt" )
  cellView( "nch_w_lvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_w1t_lvt butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_w1t_lvt) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_w1t_lvt shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_w1t_lvt shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_w1t_lvt shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_w1t_lvt "model" "nch_w_lvt") 
   ) ;if

extractMOS("nch_na18" ngate_18na poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na18" )
  cellView( "nch_na18 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_18na butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_18na) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_18na shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_18na shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_18na shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_18na )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_18na "model" "nch_na18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_18na
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_18na, "n", nt_n )
extractMOS("nchpd_ulpdpsr" ngate_spdulpdp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_ulpdpsr" )
  cellView( "nchpd_ulpdpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdulpdp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdulpdp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdulpdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdulpdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdulpdp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdulpdp "model" "nchpd_ulpdpsr") 
   ) ;if

extractMOS("nch_ulvt" nuvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_ulvt_mac" )
  cellView( "nch_ulvt_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nuvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nuvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nuvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nuvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nuvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nuvgate_mac "model" "nch_ulvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nuvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nuvgate_mac, "n", nCore )
extractMOS("nch_ulvt_dnw" n1uvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_ulvt_mac" )
  cellView( "nch_ulvt_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1uvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1uvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1uvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1uvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1uvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1uvgate_mac "model" "nch_ulvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1uvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1uvgate_mac, "n", nCore )
extractMOS("nch_ulvt" nuvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_ulvt" )
  cellView( "nch_ulvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nuvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nuvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nuvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nuvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nuvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nuvgate "model" "nch_ulvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nuvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nuvgate, "n", nCore )
extractMOS("nch_lvt" nlvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lvt_mac" )
  cellView( "nch_lvt_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nlvgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlvgate_mac "model" "nch_lvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nlvgate_mac, "n", nCore )
extractMOS("nch_dnw_1tr" ngate_1tr poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_dnw_1tr" )
  cellView( "nch_dnw_1tr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_1tr butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_1tr) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_1tr shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_1tr shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_1tr shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_1tr "model" "nch_dnw_1tr") 
   ) ;if

extractMOS("nch_25_dnwod" dngate_25od poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33" )
  cellView( "nch_25_dnwod33 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_25od butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_25od) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_25od shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_25od shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_25od shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_25od )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_25od "model" "nch_33") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_25od
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_25od, "n", nIO )
extractMOS("nchpg_ulpsr" ngate_spgulp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_ulpsr" )
  cellView( "nchpg_ulpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spgulp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spgulp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spgulp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spgulp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spgulp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spgulp "model" "nchpg_ulpsr") 
   ) ;if

extractMOS("nchpg_lpgtpsr" ngate_spglpgtp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_lpgtpsr" )
  cellView( "nchpg_lpgtpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spglpgtp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spglpgtp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spglpgtp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spglpgtp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spglpgtp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spglpgtp "model" "nchpg_lpgtpsr") 
   ) ;if

extractMOS("nch_uhvt" nuhvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_uhvt" )
  cellView( "nch_uhvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nuhvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nuhvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nuhvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nuhvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nuhvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nuhvgate "model" "nch_uhvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nuhvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nuhvgate, "n", nCore )
extractMOS("nchpg_hvtdpsr" ngate_hvspgdp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_hvtdpsr" )
  cellView( "nchpg_hvtdpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_hvspgdp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_hvspgdp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_hvspgdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_hvspgdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_hvspgdp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_hvspgdp "model" "nchpg_hvtdpsr") 
   ) ;if

extractMOS("nch_esd18" ngate_esd18 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_esd18" )
  cellView( "nch_esd18 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_esd18 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_esd18) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_esd18 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_esd18 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_esd18 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_esd18 "model" "nch_esd18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_esd18
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_esd18, "n", nIO )
extractMOS("nchpd_dphcsr" ngate_spddphc poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_dphcsr" )
  cellView( "nchpd_dphcsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spddphc butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spddphc) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spddphc shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spddphc shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spddphc shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spddphc "model" "nchpd_dphcsr") 
   ) ;if

extractMOS("nchpg_wisr" ngate_spgwi poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_wisr" )
  cellView( "nchpg_wisr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spgwi butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spgwi) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spgwi shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spgwi shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spgwi shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spgwi "model" "nchpg_wisr") 
   ) ;if

extractMOS("nch_na25ud" ngate_25naud poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na18" )
  cellView( "nch_na25ud18 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25naud butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25naud) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25naud shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25naud shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25naud shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25naud )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25naud "model" "nch_na18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25naud
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25naud, "n", nt_n )
extractMOS("nch_25od" ngate_25od_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33_mac" )
  cellView( "nch_25od33_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25od_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25od_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25od_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25od_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25od_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25od_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25od_mac "model" "nch_33_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25od_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25od_mac, "n", nIO )
extractMOS("nch_lpgna" nlgatelpg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lpgna" )
  cellView( "nch_lpgna ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlgatelpg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlgatelpg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlgatelpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlgatelpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlgatelpg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlgatelpg "model" "nch_lpgna") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlgatelpg
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nlgatelpg, "n", nt_n )
extractMOS("nch_esd18" ngate_esd18_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_esd18_mac" )
  cellView( "nch_esd18_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_esd18_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_esd18_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_esd18_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_esd18_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_esd18_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_esd18_mac "model" "nch_esd18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_esd18_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_esd18_mac, "n", nIO )
extractMOS("nchpd_ulpsr" ngate_spdulp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_ulpsr" )
  cellView( "nchpd_ulpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdulp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdulp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdulp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdulp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdulp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdulp "model" "nchpd_ulpsr") 
   ) ;if

extractMOS("nch_ulvt_dnw" n1uvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_ulvt" )
  cellView( "nch_ulvt_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1uvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1uvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1uvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1uvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1uvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1uvgate "model" "nch_ulvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1uvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1uvgate, "n", nCore )
extractMOS("nch_25ud" ngate_25ud_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18_mac" )
  cellView( "nch_25ud18_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25ud_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25ud_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25ud_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25ud_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25ud_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25ud_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25ud_mac "model" "nch_18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25ud_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25ud_mac, "n", nIO )
extractMOS("nchpg_sr" ngate_spg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_sr" )
  cellView( "nchpg_sr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spg "model" "nchpg_sr") 
   ) ;if

extractMOS("nchpd_wosr" ngate_spdwo poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_wosr" )
  cellView( "nchpd_wosr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdwo butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdwo) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdwo shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdwo shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdwo shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdwo "model" "nchpd_wosr") 
   ) ;if

extractMOS("nch" ngate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mac" )
  cellView( "nch_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_mac "model" "nch_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_mac, "n", nCore )
extractMOS("nch_na18" ngate_18na_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na18_mac" )
  cellView( "nch_na18_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_18na_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_18na_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_18na_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_18na_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_18na_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_18na_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_18na_mac "model" "nch_na18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_18na_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_18na_mac, "n", nt_n )
extractMOS("nch_hvt" nhvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_hvt" )
  cellView( "nch_hvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nhvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nhvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nhvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nhvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nhvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nhvgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nhvgate "model" "nch_hvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nhvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nhvgate, "n", nCore )
extractMOS("nch_na33" ngate_33na_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na33_mac" )
  cellView( "nch_na33_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_33na_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_33na_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_33na_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_33na_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_33na_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_33na_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_33na_mac "model" "nch_na33_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_33na_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_33na_mac, "n", nt_n )
extractMOS("nch_25_dnwud" dngate_25ud_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18_mac" )
  cellView( "nch_25_dnwud18_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_25ud_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_25ud_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_25ud_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_25ud_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_25ud_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_25ud_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_25ud_mac "model" "nch_18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_25ud_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_25ud_mac, "n", nIO )
extractMOS("nchpd_lpgdpsr" ngate_spdlpgdp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_lpgdpsr" )
  cellView( "nchpd_lpgdpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdlpgdp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdlpgdp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdlpgdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdlpgdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdlpgdp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdlpgdp "model" "nchpd_lpgdpsr") 
   ) ;if

extractMOS("nch_esd18_dnw" dngate_esd18_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_esd18_mac" )
  cellView( "nch_esd18_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_esd18_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_esd18_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_esd18_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_esd18_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_esd18_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_esd18_mac "model" "nch_esd18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_esd18_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_esd18_mac, "n", nIO )
extractMOS("nch_dnw" nrgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mac" )
  cellView( "nch_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nrgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nrgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nrgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nrgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nrgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nrgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nrgate_mac "model" "nch_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nrgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nrgate_mac, "n", nCore )
extractMOS("nchpd_hvtsr" ngate_hvspd poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_hvtsr" )
  cellView( "nchpd_hvtsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_hvspd butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_hvspd) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_hvspd shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_hvspd shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_hvspd shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_hvspd "model" "nchpd_hvtsr") 
   ) ;if

extractMOS("nch_25" ngate_25_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_25_mac" )
  cellView( "nch_25_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25_mac "model" "nch_25_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25_mac, "n", nIO )
extractMOS("nch_w" ngate_w1t poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_w" )
  cellView( "nch_w ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_w1t butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_w1t) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_w1t shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_w1t shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_w1t shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_w1t "model" "nch_w") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_w1t
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_w1t, "n", nCore )
extractMOS("nchpg_dphcsr" ngate_spgdphc poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_dphcsr" )
  cellView( "nchpg_dphcsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spgdphc butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spgdphc) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spgdphc shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spgdphc shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spgdphc shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spgdphc "model" "nchpg_dphcsr") 
   ) ;if

extractMOS("nch_25_dnw" dngate_25_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_25_mac" )
  cellView( "nch_25_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_25_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_25_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_25_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_25_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_25_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_25_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_25_mac "model" "nch_25_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_25_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_25_mac, "n", nIO )
extractMOS("nch_18_dnw" dngate_18_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18_mac" )
  cellView( "nch_18_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_18_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_18_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_18_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_18_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_18_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_18_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_18_mac "model" "nch_18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_18_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_18_mac, "n", nIO )
extractMOS("nch_uhvt_dnw" n1uhvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_uhvt_mac" )
  cellView( "nch_uhvt_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1uhvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1uhvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1uhvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1uhvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1uhvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1uhvgate_mac "model" "nch_uhvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1uhvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1uhvgate_mac, "n", nCore )
extractMOS("nch_25_dnw" dngate_25 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_25" )
  cellView( "nch_25_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_25 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_25) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_25 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_25 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_25 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_25 )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_25 "model" "nch_25") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_25
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_25, "n", nIO )
extractMOS("nch_lvt_dnw" n1lvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lvt" )
  cellView( "nch_lvt_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1lvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1lvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1lvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1lvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1lvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" n1lvgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1lvgate "model" "nch_lvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1lvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1lvgate, "n", nCore )
extractMOS("nchpd_hvtdphcsr" ngate_hvspddphc poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_hvtdphcsr" )
  cellView( "nchpd_hvtdphcsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_hvspddphc butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_hvspddphc) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_hvspddphc shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_hvspddphc shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_hvspddphc shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_hvspddphc "model" "nchpd_hvtdphcsr") 
   ) ;if

extractMOS("nch_na25od" ngate_25naod poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na25od33" )
  cellView( "nch_na25od33 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25naod butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25naod) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25naod shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25naod shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25naod shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25naod )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25naod "model" "nch_na25od33") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25naod
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25naod, "n", nt_n )
extractMOS("nch_25od" ngate_25od poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33" )
  cellView( "nch_25od33 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25od butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25od) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25od shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25od shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25od shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25od )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25od "model" "nch_33") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25od
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25od, "n", nIO )
extractMOS("nch_na33" ngate_33na poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na33" )
  cellView( "nch_na33 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_33na butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_33na) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_33na shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_33na shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_33na shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_33na )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_33na "model" "nch_na33") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_33na
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_33na, "n", nt_n )
extractMOS("nch_uhvt" nuhvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_uhvt_mac" )
  cellView( "nch_uhvt_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nuhvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nuhvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nuhvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nuhvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nuhvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nuhvgate_mac "model" "nch_uhvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nuhvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nuhvgate_mac, "n", nCore )
extractMOS("nchpg_lpgdpsr" ngate_spglpgdp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_lpgdpsr" )
  cellView( "nchpg_lpgdpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spglpgdp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spglpgdp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spglpgdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spglpgdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spglpgdp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spglpgdp "model" "nchpg_lpgdpsr") 
   ) ;if

extractMOS("nchpd_lpgsr" ngate_spdlpg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_lpgsr" )
  cellView( "nchpd_lpgsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdlpg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdlpg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdlpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdlpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdlpg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdlpg "model" "nchpd_lpgsr") 
   ) ;if

extractMOS("nch_na25od" ngate_25naod_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na25od33_mac" )
  cellView( "nch_na25od33_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25naod_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25naod_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25naod_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25naod_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25naod_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25naod_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25naod_mac "model" "nch_na25od33_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25naod_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25naod_mac, "n", nt_n )
extractMOS("nchpg_wosr" ngate_spgwo poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_wosr" )
  cellView( "nchpg_wosr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spgwo butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spgwo) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spgwo shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spgwo shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spgwo shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spgwo "model" "nchpg_wosr") 
   ) ;if

extractMOS("nch_33_dnw" dngate_33_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33_mac" )
  cellView( "nch_33_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_33_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_33_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_33_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_33_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_33_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_33_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_33_mac "model" "nch_33_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_33_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_33_mac, "n", nIO )
extractMOS("nch_na25ud" ngate_25naud_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na18_mac" )
  cellView( "nch_na25ud18_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25naud_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25naud_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25naud_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25naud_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25naud_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25naud_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25naud_mac "model" "nch_na18_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25naud_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25naud_mac, "n", nt_n )
extractMOS("nch_na25" ngate_25na_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_na25_mac" )
  cellView( "nch_na25_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25na_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25na_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25na_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25na_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25na_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25na_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25na_mac "model" "nch_na25_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25na_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25na_mac, "n", nt_n )
extractMOS("nchpd_hvtdpsr" ngate_hvspddp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_hvtdpsr" )
  cellView( "nchpd_hvtdpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_hvspddp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_hvspddp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_hvspddp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_hvspddp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_hvspddp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_hvspddp "model" "nchpd_hvtdpsr") 
   ) ;if

extractMOS("nch_mlvt" nilvtgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mlvt" )
  cellView( "nch_mlvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nilvtgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nilvtgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nilvtgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nilvtgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nilvtgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nilvtgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nilvtgate "model" "nch_mlvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nilvtgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nilvtgate, "n", nCore )
extractMOS("nch_25_dnwod" dngate_25od_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33_mac" )
  cellView( "nch_25_dnwod33_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_25od_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_25od_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_25od_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_25od_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_25od_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_25od_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_25od_mac "model" "nch_33_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_25od_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_25od_mac, "n", nIO )
extractMOS("nch_dnw_w_lvt" ngate_dnw_w_lvt poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_w_lvt" )
  cellView( "nch_dnw_w_lvt ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_dnw_w_lvt butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_dnw_w_lvt) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_dnw_w_lvt shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_dnw_w_lvt shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_dnw_w_lvt shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_dnw_w_lvt "model" "nch_w_lvt") 
   ) ;if

extractMOS("nch_18" ngate_18 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18" )
  cellView( "nch_18 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_18 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_18) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_18 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_18 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_18 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_18 )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_18 "model" "nch_18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_18
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_18, "n", nIO )
extractMOS("nch_lvt_dnw" n1lvgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_lvt_mac" )
  cellView( "nch_lvt_dnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1lvgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1lvgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1lvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1lvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1lvgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" n1lvgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1lvgate_mac "model" "nch_lvt_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1lvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1lvgate_mac, "n", nCore )
extractMOS("nch_33" ngate_33_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33_mac" )
  cellView( "nch_33_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_33_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_33_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_33_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_33_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_33_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_33_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_33_mac "model" "nch_33_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_33_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_33_mac, "n", nIO )
extractMOS("nch_33_dnw" dngate_33 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33" )
  cellView( "nch_33_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (dngate_33 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (dngate_33) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") dngate_33 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") dngate_33 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") dngate_33 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" dngate_33 )
   if( !avSwitch( "spice_extraction") then
     saveProperty( dngate_33 "model" "nch_33") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( dngate_33
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, dngate_33, "n", nIO )
extractMOS("nchpg_hvtsr" ngate_hvspg poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpg_hvtsr" )
  cellView( "nchpg_hvtsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_hvspg butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_hvspg) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_hvspg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_hvspg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_hvspg shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_hvspg "model" "nchpg_hvtsr") 
   ) ;if

extractMOS("nchpd_dpsr" ngate_spddp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_dpsr" )
  cellView( "nchpd_dpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spddp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spddp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spddp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spddp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spddp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spddp "model" "nchpd_dpsr") 
   ) ;if

extractMOS("nchpd_lpgtpsr" ngate_spdlpgtp poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nchpd_lpgtpsr" )
  cellView( "nchpd_lpgtpsr ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_spdlpgtp butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_spdlpgtp) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_spdlpgtp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_spdlpgtp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_spdlpgtp shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_spdlpgtp "model" "nchpd_lpgtpsr") 
   ) ;if

extractMOS("nch_25ud" ngate_25ud poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_18" )
  cellView( "nch_25ud18 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25ud butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25ud) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25ud shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25ud shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25ud shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25ud )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25ud "model" "nch_18") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25ud
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25ud, "n", nIO )
extractMOS("nch_uhvt_dnw" n1uhvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_uhvt" )
  cellView( "nch_uhvt_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1uhvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1uhvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1uhvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1uhvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1uhvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1uhvgate "model" "nch_uhvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1uhvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1uhvgate, "n", nCore )
extractMOS("nch_33" ngate_33 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_33" )
  cellView( "nch_33 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_33 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_33) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_33 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_33 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_33 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_33 )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_33 "model" "nch_33") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_33
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_33, "n", nIO )
extractMOS("nch_hvt_dnw" n1hvgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_hvt" )
  cellView( "nch_hvt_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1hvgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1hvgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1hvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1hvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1hvgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" n1hvgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1hvgate "model" "nch_hvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1hvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1hvgate, "n", nCore )
extractMOS("nch_25" ngate_25 poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_25" )
  cellView( "nch_25 ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25 butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_25) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_25 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_25 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_25 shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_25 )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_25 "model" "nch_25") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_25, "n", nIO )
extractMOS("nch_mlvt_dnw" n1ilvtgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mlvt" )
  cellView( "nch_mlvt_dnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (n1ilvtgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (n1ilvtgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") n1ilvtgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") n1ilvtgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") n1ilvtgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" n1ilvtgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( n1ilvtgate "model" "nch_mlvt") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( n1ilvtgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, n1ilvtgate, "n", nCore )
extractMOS("pch_25" pgate_25 poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_25" )
  cellView( "pch_25 ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25 butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_25) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_25 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_25 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_25 shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_25 )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_25 "model" "pch_25") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_25, "p", pCore )
extractMOS("pch_25ud" pgate_25ud poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_18" )
  cellView( "pch_25ud18 ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25ud butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_25ud) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_25ud shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_25ud shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_25ud shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_25ud )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_25ud "model" "pch_18") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25ud
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_25ud, "p", pCore )
extractMOS("pchpu_ulpdpsr" pgate_sdpulp poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_ulpdpsr" )
  cellView( "pchpu_ulpdpsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_sdpulp butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_sdpulp) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_sdpulp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_sdpulp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_sdpulp shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_sdpulp "model" "pchpu_ulpdpsr") 
  ) ;if 

extractMOS("pch_lvt" plvgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_lvt" )
  cellView( "pch_lvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (plvgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (plvgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") plvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") plvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") plvgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" plvgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( plvgate "model" "pch_lvt") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( plvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, plvgate, "p", pCore )
extractMOS("pch_25od" pgate_25od poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_33" )
  cellView( "pch_25od33 ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25od butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_25od) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_25od shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_25od shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_25od shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_25od )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_25od "model" "pch_33") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25od
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_25od, "p", pCore )
extractMOS("pch_ulvt" puvgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_ulvt_mac" )
  cellView( "pch_ulvt_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (puvgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (puvgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") puvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") puvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") puvgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( puvgate_mac "model" "pch_ulvt_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( puvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, puvgate_mac, "p", pCore )
extractMOS("pch_lpg" pgatelpg poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_lpg" )
  cellView( "pch_lpg ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgatelpg butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgatelpg) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgatelpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgatelpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgatelpg shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgatelpg "model" "pch_lpg") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgatelpg
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgatelpg, "p", pCore )
extractMOS("pch_hvt" phvgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_hvt" )
  cellView( "pch_hvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (phvgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (phvgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") phvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") phvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") phvgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" phvgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( phvgate "model" "pch_hvt") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( phvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, phvgate, "p", pCore )
extractMOS("pch" pgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_mac" )
  cellView( "pch_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_mac "model" "pch_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_mac, "p", pCore )
extractMOS("pch_hvt" phvgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_hvt_mac" )
  cellView( "pch_hvt_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (phvgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (phvgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") phvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") phvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") phvgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" phvgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( phvgate_mac "model" "pch_hvt_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( phvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, phvgate_mac, "p", pCore )
extractMOS("pch_w" pgate_w1t poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_w" )
  cellView( "pch_w ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_w1t butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_w1t) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_w1t shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_w1t shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_w1t shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_w1t "model" "pch_w") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_w1t
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_w1t, "p", pCore )
extractMOS("pchpu_hvtsr" pgate_hvs poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_hvtsr" )
  cellView( "pchpu_hvtsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_hvs butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_hvs) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_hvs shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_hvs shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_hvs shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_hvs "model" "pchpu_hvtsr") 
  ) ;if 

extractMOS("pch_uhvt" puhvgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_uhvt_mac" )
  cellView( "pch_uhvt_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (puhvgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (puhvgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") puhvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") puhvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") puhvgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( puhvgate_mac "model" "pch_uhvt_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( puhvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, puhvgate_mac, "p", pCore )
extractMOS("pch_lvt" plvgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_lvt_mac" )
  cellView( "pch_lvt_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (plvgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (plvgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") plvgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") plvgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") plvgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" plvgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( plvgate_mac "model" "pch_lvt_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( plvgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, plvgate_mac, "p", pCore )
extractMOS("pch_33" pgate_33_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_33_mac" )
  cellView( "pch_33_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_33_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_33_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_33_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_33_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_33_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_33_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_33_mac "model" "pch_33_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_33_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_33_mac, "p", pIO )
extractMOS("pchpu_dphcsr" pgate_sdphc poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_dphcsr" )
  cellView( "pchpu_dphcsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_sdphc butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_sdphc) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_sdphc shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_sdphc shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_sdphc shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_sdphc "model" "pchpu_dphcsr") 
  ) ;if 

extractMOS("pchpu_dpsr" pgate_sdp poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_dpsr" )
  cellView( "pchpu_dpsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_sdp butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_sdp) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_sdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_sdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_sdp shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_sdp "model" "pchpu_dpsr") 
  ) ;if 

extractMOS("pchpu_sr" pgate_s poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_sr" )
  cellView( "pchpu_sr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_s butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_s) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_s shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_s shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_s shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_s "model" "pchpu_sr") 
  ) ;if 

extractMOS("pchpu_hvtdphcsr" pgate_hvsdphc poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_hvtdphcsr" )
  cellView( "pchpu_hvtdphcsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_hvsdphc butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_hvsdphc) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_hvsdphc shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_hvsdphc shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_hvsdphc shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_hvsdphc "model" "pchpu_hvtdphcsr") 
  ) ;if 

extractMOS("pch_33" pgate_33 poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_33" )
  cellView( "pch_33 ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_33 butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_33) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_33 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_33 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_33 shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_33 )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_33 "model" "pch_33") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_33
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_33, "p", pIO )
extractMOS("pch_25ud" pgate_25ud_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_18_mac" )
  cellView( "pch_25ud18_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25ud_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_25ud_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_25ud_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_25ud_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_25ud_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_25ud_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_25ud_mac "model" "pch_18_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25ud_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_25ud_mac, "p", pCore )
extractMOS("pch_w_lvt" pgate_w1t_lvt poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_w_lvt" )
  cellView( "pch_w_lvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_w1t_lvt butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_w1t_lvt) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_w1t_lvt shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_w1t_lvt shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_w1t_lvt shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_w1t_lvt "model" "pch_w_lvt") 
  ) ;if 

extractMOS("pch_uhvt" puhvgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_uhvt" )
  cellView( "pch_uhvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (puhvgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (puhvgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") puhvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") puhvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") puhvgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( puhvgate "model" "pch_uhvt") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( puhvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, puhvgate, "p", pCore )
extractMOS("pchpu_lpgtpsr" pgate_stplpg poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_lpgtpsr" )
  cellView( "pchpu_lpgtpsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_stplpg butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_stplpg) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_stplpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_stplpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_stplpg shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_stplpg "model" "pchpu_lpgtpsr") 
  ) ;if 

extractMOS("pch_18" pgate_18_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_18_mac" )
  cellView( "pch_18_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_18_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_18_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_18_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_18_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_18_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_18_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_18_mac "model" "pch_18_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_18_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_18_mac, "p", pCore )
extractMOS("pch_mlvt" pilvtgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_mlvt_mac" )
  cellView( "pch_mlvt_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pilvtgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pilvtgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pilvtgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pilvtgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pilvtgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pilvtgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pilvtgate_mac "model" "pch_mlvt_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pilvtgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pilvtgate_mac, "p", pCore )
extractMOS("pch_timer" pgate_st poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_timer" )
  cellView( "pch_timer ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_st butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_st) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_st shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_st shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_st shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_st "model" "pch_timer") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_st
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_st, "p", pCore )
extractMOS("pch_lpghvt" phvgatelpg poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_lpghvt" )
  cellView( "pch_lpghvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (phvgatelpg butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (phvgatelpg) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") phvgatelpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") phvgatelpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") phvgatelpg shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( phvgatelpg "model" "pch_lpghvt") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( phvgatelpg
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, phvgatelpg, "p", pCore )
extractMOS("pchpu_wisr" pgate_swi poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_wisr" )
  cellView( "pchpu_wisr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_swi butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_swi) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_swi shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_swi shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_swi shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_swi "model" "pchpu_wisr") 
  ) ;if 

extractMOS("pchpu_ulpsr" pgate_sulp poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_ulpsr" )
  cellView( "pchpu_ulpsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_sulp butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_sulp) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_sulp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_sulp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_sulp shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_sulp "model" "pchpu_ulpsr") 
  ) ;if 

extractMOS("pch_ulvt" puvgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_ulvt" )
  cellView( "pch_ulvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (puvgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (puvgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") puvgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") puvgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") puvgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( puvgate "model" "pch_ulvt") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( puvgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, puvgate, "p", pCore )
extractMOS("pchpu_lpgdpsr" pgate_sdplpg poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_lpgdpsr" )
  cellView( "pchpu_lpgdpsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_sdplpg butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_sdplpg) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_sdplpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_sdplpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_sdplpg shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_sdplpg "model" "pchpu_lpgdpsr") 
  ) ;if 

extractMOS("pch_mlvt" pilvtgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_mlvt" )
  cellView( "pch_mlvt ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pilvtgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pilvtgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pilvtgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pilvtgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pilvtgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pilvtgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pilvtgate "model" "pch_mlvt") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pilvtgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pilvtgate, "p", pCore )
extractMOS("pchpu_lpgsr" pgate_slpg poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_lpgsr" )
  cellView( "pchpu_lpgsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_slpg butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_slpg) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_slpg shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_slpg shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_slpg shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_slpg "model" "pchpu_lpgsr") 
  ) ;if 

extractMOS("pchpu_wosr" pgate_swo poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_wosr" )
  cellView( "pchpu_wosr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_swo butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_swo) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_swo shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_swo shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_swo shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_swo "model" "pchpu_wosr") 
  ) ;if 

extractMOS("pchpu_hvtdpsr" pgate_hvsdp poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pchpu_hvtdpsr" )
  cellView( "pchpu_hvtdpsr ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_hvsdp butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_hvsdp) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_hvsdp shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_hvsdp shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_hvsdp shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_hvsdp "model" "pchpu_hvtdpsr") 
  ) ;if 

extractMOS("pch_25od" pgate_25od_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_33_mac" )
  cellView( "pch_25od33_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25od_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_25od_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_25od_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_25od_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_25od_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_25od_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_25od_mac "model" "pch_33_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25od_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_25od_mac, "p", pCore )
extractMOS("pch" pgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch" )
  cellView( "pch ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate "model" "pch") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate, "p", pCore )
extractMOS("pch_25" pgate_25_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_25_mac" )
  cellView( "pch_25_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_25_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_25_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_25_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_25_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_25_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_25_mac "model" "pch_25_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_25_mac, "p", pCore )
extractMOS("pch_18" pgate_18 poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_18" )
  cellView( "pch_18 ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_18 butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_18) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_18 shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_18 shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_18 shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_18 )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_18 "model" "pch_18") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_18
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_18, "p", pCore )
extractMOS("pch_edc" pgate_1tr poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_edc" )
  cellView( "pch_edc ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_1tr butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_1tr) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_1tr shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_1tr shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_1tr shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_1tr "model" "pch_edc") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_1tr
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_1tr, "p", pCore )
) ; if

extractLDD("nch_hv25_sdnw" ngate_25hvd poly("G") s_nd25hvd("S") d_nd25hvd("D") psub("B")
  spiceModel( "nch_hv25_sdnw" )
  cellView( "nch_hv25 ivpcell")
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25hvd butting d_nd25hvd) 1e-6)
   area_NMOS = measureParameter(area (ngate_25hvd) 1e-12)
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS)
   areaS     = measureParameter(area (s_nd25hvd) 1e-12)
   periS     = measureParameter(perimeter (s_nd25hvd) 1e-6)
   areaD     = measureParameter(area (d_nd25hvd) 1e-12)
   periD     = measureParameter(perimeter (d_nd25hvd) 1e-6)
   attachParameter( areaS  ("as" "S") ngate_25hvd shared)
   attachParameter( periS  ("ps" "S") ngate_25hvd shared)
   attachParameter( areaD  ("ad" "D") ngate_25hvd shared)
   attachParameter( periD  ("pd" "D") ngate_25hvd shared)
   if( avSwitch("ZERO_NRDS") then
   nrSD = calculateParameter(l_NMOS - l_NMOS)
   attachParameter( nrSD ("nrd" "D") ("nrs" "S") ngate_25hvd shared)
   else
   nrS = calculateParameter(((areaS/w_NMOS)/w_NMOS))
   nrD = calculateParameter(((areaD/w_NMOS)/w_NMOS))
   attachParameter( nrS  ("nrs" "S") ngate_25hvd shared)
   attachParameter( nrD  ("nrd" "D") ngate_25hvd shared)
   )
   nameParameter( w_NMOS "w" )
   nameParameter( l_NMOS "l" )
   attachParameter( w_NMOS "wf" ngate_25hvd )
   if( !avSwitch( "spice_extraction") then
      saveProperty( ngate_25hvd "model" "nch_hv25_sdnw") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25hvd
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

WPE_predict( poly, s_nd25hvd, ngate_25hvd, "n", nIO )

extractLDD("nch_hv25_snw" ngate_25hvdw poly("G") s_nd25hvdw("S") d_nd25hvdw("D") psub("B")
  spiceModel( "nch_hv25_snw" )
  cellView( "nch_hv25 ivpcell")
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25hvdw butting d_nd25hvdw) 1e-6)
   area_NMOS = measureParameter(area (ngate_25hvdw) 1e-12)
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS)
   areaS     = measureParameter(area (s_nd25hvdw) 1e-12)
   periS     = measureParameter(perimeter (s_nd25hvdw) 1e-6)
   areaD     = measureParameter(area (d_nd25hvdw) 1e-12)
   periD     = measureParameter(perimeter (d_nd25hvdw) 1e-6)
   attachParameter( areaS  ("as" "S") ngate_25hvdw shared)
   attachParameter( periS  ("ps" "S") ngate_25hvdw shared)
   attachParameter( areaD  ("ad" "D") ngate_25hvdw shared)
   attachParameter( periD  ("pd" "D") ngate_25hvdw shared)
   if( avSwitch("ZERO_NRDS") then
   nrSD = calculateParameter(l_NMOS - l_NMOS)
   attachParameter( nrSD ("nrd" "D") ("nrs" "S") ngate_25hvdw shared)
   else
   nrS = calculateParameter(((areaS/w_NMOS)/w_NMOS))
   nrD = calculateParameter(((areaD/w_NMOS)/w_NMOS))
   attachParameter( nrS  ("nrs" "S") ngate_25hvdw shared)
   attachParameter( nrD  ("nrd" "D") ngate_25hvdw shared)
   )
   nameParameter( w_NMOS "w" )
   nameParameter( l_NMOS "l" )
   attachParameter( w_NMOS "wf" ngate_25hvdw )
   if( !avSwitch( "spice_extraction") then
      saveProperty( ngate_25hvdw "model" "nch_hv25_snw") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25hvdw
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

WPE_predict( poly, s_nd25hvdw, ngate_25hvdw, "n", nIO )

extractLDD("nch_hv25_sdnw" ngate_25hvd_mac poly("G") s_nd25hvd("S") d_nd25hvd("D") psub("B")
  spiceModel( "nch_hv25_sdnw_mac" )
  cellView( "nch_hv25_mac ivpcell")
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25hvd_mac butting d_nd25hvd) 1e-6)
   area_NMOS = measureParameter(area (ngate_25hvd_mac) 1e-12)
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS)
   areaS     = measureParameter(area (s_nd25hvd) 1e-12)
   periS     = measureParameter(perimeter (s_nd25hvd) 1e-6)
   areaD     = measureParameter(area (d_nd25hvd) 1e-12)
   periD     = measureParameter(perimeter (d_nd25hvd) 1e-6)
   attachParameter( areaS  ("as" "S") ngate_25hvd_mac shared)
   attachParameter( periS  ("ps" "S") ngate_25hvd_mac shared)
   attachParameter( areaD  ("ad" "D") ngate_25hvd_mac shared)
   attachParameter( periD  ("pd" "D") ngate_25hvd_mac shared)
   if( avSwitch("ZERO_NRDS") then
   nrSD = calculateParameter(l_NMOS - l_NMOS)
   attachParameter( nrSD ("nrd" "D") ("nrs" "S") ngate_25hvd_mac shared)
   else
   nrS = calculateParameter(((areaS/w_NMOS)/w_NMOS))
   nrD = calculateParameter(((areaD/w_NMOS)/w_NMOS))
   attachParameter( nrS  ("nrs" "S") ngate_25hvd_mac shared)
   attachParameter( nrD  ("nrd" "D") ngate_25hvd_mac shared)
   )
   nameParameter( w_NMOS "w" )
   nameParameter( l_NMOS "l" )
   attachParameter( w_NMOS "wf" ngate_25hvd_mac )
   if( !avSwitch( "spice_extraction") then
      saveProperty( ngate_25hvd_mac "model" "nch_hv25_sdnw_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25hvd_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

WPE_predict( poly, s_nd25hvd, ngate_25hvd_mac, "n", nIO )

extractLDD("nch_hv25_snw" ngate_25hvdw_mac poly("G") s_nd25hvdw("S") d_nd25hvdw("D") psub("B")
  spiceModel( "nch_hv25_snw_mac" )
  cellView( "nch_hv25_mac ivpcell")
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_25hvdw_mac butting d_nd25hvdw) 1e-6)
   area_NMOS = measureParameter(area (ngate_25hvdw_mac) 1e-12)
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS)
   areaS     = measureParameter(area (s_nd25hvdw) 1e-12)
   periS     = measureParameter(perimeter (s_nd25hvdw) 1e-6)
   areaD     = measureParameter(area (d_nd25hvdw) 1e-12)
   periD     = measureParameter(perimeter (d_nd25hvdw) 1e-6)
   attachParameter( areaS  ("as" "S") ngate_25hvdw_mac shared)
   attachParameter( periS  ("ps" "S") ngate_25hvdw_mac shared)
   attachParameter( areaD  ("ad" "D") ngate_25hvdw_mac shared)
   attachParameter( periD  ("pd" "D") ngate_25hvdw_mac shared)
   if( avSwitch("ZERO_NRDS") then
   nrSD = calculateParameter(l_NMOS - l_NMOS)
   attachParameter( nrSD ("nrd" "D") ("nrs" "S") ngate_25hvdw_mac shared)
   else
   nrS = calculateParameter(((areaS/w_NMOS)/w_NMOS))
   nrD = calculateParameter(((areaD/w_NMOS)/w_NMOS))
   attachParameter( nrS  ("nrs" "S") ngate_25hvdw_mac shared)
   attachParameter( nrD  ("nrd" "D") ngate_25hvdw_mac shared)
   )
   nameParameter( w_NMOS "w" )
   nameParameter( l_NMOS "l" )
   attachParameter( w_NMOS "wf" ngate_25hvdw_mac )
   if( !avSwitch( "spice_extraction") then
      saveProperty( ngate_25hvdw_mac "model" "nch_hv25_snw_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_25hvdw_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

WPE_predict( poly, s_nd25hvdw, ngate_25hvdw_mac, "n", nIO )

extractLDD("pch_hv25_spw" pgate_25hvd_mac poly("G") s_pd25hvd("S") d_pd25hvd("D") nxwell("B")
  spiceModel( "pch_hv25_spw_mac" )
  cellView( "pch_hv25_mac ivpcell")
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25hvd_mac butting d_pd25hvd) 1e-6)
   area_PMOS = measureParameter(area (pgate_25hvd_mac) 1e-12)
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS)
   areaS     = measureParameter(area (s_pd25hvd) 1e-12)
   periS     = measureParameter(perimeter (s_pd25hvd) 1e-6)
   areaD     = measureParameter(area (d_pd25hvd) 1e-12)
   periD     = measureParameter(perimeter (d_pd25hvd) 1e-6)
   attachParameter( areaS  ("as" "S") pgate_25hvd_mac shared)
   attachParameter( periS  ("ps" "S") pgate_25hvd_mac shared)
   attachParameter( areaD  ("ad" "D") pgate_25hvd_mac shared)
   attachParameter( periD  ("pd" "D") pgate_25hvd_mac shared)
   if( avSwitch("ZERO_NRDS") then
   nrSD = calculateParameter(l_PMOS - l_PMOS)
   attachParameter( nrSD ("nrd" "D") ("nrs" "S") pgate_25hvd_mac shared)
   else
   nrS = calculateParameter(((areaS/w_PMOS)/w_PMOS))
   nrD = calculateParameter(((areaD/w_PMOS)/w_PMOS))
   attachParameter( nrS  ("nrs" "S") pgate_25hvd_mac shared)
   attachParameter( nrD  ("nrd" "D") pgate_25hvd_mac shared)
   )
   nameParameter( w_PMOS "w" )
   nameParameter( l_PMOS "l" )
   attachParameter( w_PMOS "wf" pgate_25hvd_mac )
   if( !avSwitch( "spice_extraction") then
      saveProperty( pgate_25hvd_mac "model" "pch_hv25_spw_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25hvd_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

WPE_predict( poly, s_pd25hvd, pgate_25hvd_mac, "p", pCore )

extractLDD("pch_hv25_spw" pgate_25hvd poly("G") s_pd25hvd("S") d_pd25hvd("D") nxwell("B")
  spiceModel( "pch_hv25_spw" )
  cellView( "pch_hv25 ivpcell")
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_25hvd butting d_pd25hvd) 1e-6)
   area_PMOS = measureParameter(area (pgate_25hvd) 1e-12)
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS)
   areaS     = measureParameter(area (s_pd25hvd) 1e-12)
   periS     = measureParameter(perimeter (s_pd25hvd) 1e-6)
   areaD     = measureParameter(area (d_pd25hvd) 1e-12)
   periD     = measureParameter(perimeter (d_pd25hvd) 1e-6)
   attachParameter( areaS  ("as" "S") pgate_25hvd shared)
   attachParameter( periS  ("ps" "S") pgate_25hvd shared)
   attachParameter( areaD  ("ad" "D") pgate_25hvd shared)
   attachParameter( periD  ("pd" "D") pgate_25hvd shared)
   if( avSwitch("ZERO_NRDS") then
   nrSD = calculateParameter(l_PMOS - l_PMOS)
   attachParameter( nrSD ("nrd" "D") ("nrs" "S") pgate_25hvd shared)
   else
   nrS = calculateParameter(((areaS/w_PMOS)/w_PMOS))
   nrD = calculateParameter(((areaD/w_PMOS)/w_PMOS))
   attachParameter( nrS  ("nrs" "S") pgate_25hvd shared)
   attachParameter( nrD  ("nrd" "D") pgate_25hvd shared)
   )
   nameParameter( w_PMOS "w" )
   nameParameter( l_PMOS "l" )
   attachParameter( w_PMOS "wf" pgate_25hvd )
   if( !avSwitch( "spice_extraction") then
      saveProperty( pgate_25hvd "model" "pch_hv25_spw") 
   ) ;if

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_25hvd
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

WPE_predict( poly, s_pd25hvd, pgate_25hvd, "p", pCore )

extractBJT("pnp10" cemit10 coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp10" )
  cellView( "pnp ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit10) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit10 "model" "pnp10") 
   ) ;if

extractBJT("pnp2" cemit2 coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp2" )
  cellView( "pnp ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit2) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit2 "model" "pnp2") 
   ) ;if

extractBJT("npn5" cnemit5_mac ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn5_mis" )
  cellView( "npn_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit5_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit5_mac "model" "npn5_mis") 
   ) ;if

extractBJT("pnp10" cemit10_mac coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp10_mis" )
  cellView( "pnp_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit10_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit10_mac "model" "pnp10_mis") 
   ) ;if

extractBJT("pnp10_s" cemit10s coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp10_s" )
  cellView( "pnp_s ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit10s) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit10s "model" "pnp10_s") 
   ) ;if

extractBJT("npn5" cnemit5 ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn5" )
  cellView( "npn ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit5) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit5 "model" "npn5") 
   ) ;if

extractBJT("pnp10_s" cemit10s_mac coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp10_s_mis" )
  cellView( "pnp_s_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit10s_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit10s_mac "model" "pnp10_s_mis") 
   ) ;if

extractBJT("npn2" cnemit2_mac ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn2_mis" )
  cellView( "npn_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit2_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit2_mac "model" "npn2_mis") 
   ) ;if

extractBJT("npn10_s" cnemit10s ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn10_s" )
  cellView( "npn_s ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit10s) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit10s "model" "npn10_s") 
   ) ;if

extractBJT("pnp2_s" cemit2s_mac coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp2_s_mis" )
  cellView( "pnp_s_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit2s_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit2s_mac "model" "pnp2_s_mis") 
   ) ;if

extractBJT("npn2" cnemit2 ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn2" )
  cellView( "npn ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit2) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit2 "model" "npn2") 
   ) ;if

extractBJT("npn5_s" cnemit5s ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn5_s" )
  cellView( "npn_s ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit5s) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit5s "model" "npn5_s") 
   ) ;if

extractBJT("npn10" cnemit10_mac ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn10_mis" )
  cellView( "npn_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit10_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit10_mac "model" "npn10_mis") 
   ) ;if

extractBJT("npn5_s" cnemit5s_mac ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn5_s_mis" )
  cellView( "npn_s_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit5s_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit5s_mac "model" "npn5_s_mis") 
   ) ;if

extractBJT("pnp5" cemit5_mac coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp5_mis" )
  cellView( "pnp_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit5_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit5_mac "model" "pnp5_mis") 
   ) ;if

extractBJT("npn2_s" cnemit2s_mac ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn2_s_mis" )
  cellView( "npn_s_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit2s_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit2s_mac "model" "npn2_s_mis") 
   ) ;if

extractBJT("pnp5" cemit5 coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp5" )
  cellView( "pnp ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit5) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit5 "model" "pnp5") 
   ) ;if

extractBJT("npn10" cnemit10 ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn10" )
  cellView( "npn ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit10) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit10 "model" "npn10") 
   ) ;if

extractBJT("npn2_s" cnemit2s ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn2_s" )
  cellView( "npn_s ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit2s) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit2s "model" "npn2_s") 
   ) ;if

extractBJT("pnp5_s" cemit5s_mac coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp5_s_mis" )
  cellView( "pnp_s_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit5s_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit5s_mac "model" "pnp5_s_mis") 
   ) ;if

extractBJT("npn10_s" cnemit10s_mac ncoll1("C") cpbase1("B") cnemit1("E")
  spiceModel( "npn10_s_mis" )
  cellView( "npn_s_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cnemit10s_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnemit10s_mac "model" "npn10_s_mis") 
   ) ;if

extractBJT("pnp2" cemit2_mac coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp2_mis" )
  cellView( "pnp_mis ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit2_mac) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit2_mac "model" "pnp2_mis") 
   ) ;if

extractBJT("pnp2_s" cemit2s coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp2_s" )
  cellView( "pnp_s ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit2s) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit2s "model" "pnp2_s") 
   ) ;if

extractBJT("pnp5_s" cemit5s coll1("C") cnbase1("B") cemit1("E")
  spiceModel( "pnp5_s" )
  cellView( "pnp_s ivpcell" )
  flagMalformed)
   area_BJT = measureParameter(area (cemit5s) 1e-12) 
   nameParameter( area_BJT "area" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cemit5s "model" "pnp5_s") 
   ) ;if

extractDIODE("ndio_lvt" ndiol psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_lvt" )
  cellView( "ndio_lvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndiol) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndiol) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndiol "model" "ndio_lvt") 
   ) ;if

extractDIODE("ndio_na33" ndio_33na psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_na33" )
  cellView( "ndio_na33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_33na) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_33na) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_33na "model" "ndio_na33") 
   ) ;if

extractDIODE("ndio_na25ud" ndio_25naud psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_na18" )
  cellView( "ndio_na25ud18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_25naud) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_25naud) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_25naud "model" "ndio_na18") 
   ) ;if

extractDIODE("nwdio_18" inwdio_18 psub("PLUS") nxwell("MINUS")
  spiceModel( "nwdio_18" )
  cellView( "nwdio_18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (inwdio_18) 1e-12) 
   pj_DIO   = measureParameter(perimeter (inwdio_18) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( inwdio_18 "model" "nwdio_18") 
   ) ;if

extractDIODE("ndio_esd" ydio psub("PLUS") ydio_hole("MINUS")
  spiceModel( "ndio_esd" )
  cellView( "ndio_esd ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ydio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ydio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ydio "model" "ndio_esd") 
   ) ;if

extractDIODE("nwdio_25" inwdio_25 psub("PLUS") nxwell("MINUS")
  spiceModel( "nwdio_25" )
  cellView( "nwdio_25 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (inwdio_25) 1e-12) 
   pj_DIO   = measureParameter(perimeter (inwdio_25) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( inwdio_25 "model" "nwdio_25") 
   ) ;if

extractDIODE("ndio_na" cndion psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_na" )
  cellView( "ndio_na ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cndion) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cndion) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cndion "model" "ndio_na") 
   ) ;if

extractDIODE("ndio_25ud" indio_25ud psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_18" )
  cellView( "ndio_25ud18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (indio_25ud) 1e-12) 
   pj_DIO   = measureParameter(perimeter (indio_25ud) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( indio_25ud "model" "ndio_18") 
   ) ;if

extractDIODE("pdio_mlvt" pdioilvt tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_mlvt" )
  cellView( "pdio_mlvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdioilvt) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdioilvt) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdioilvt "model" "pdio_mlvt") 
   ) ;if

extractDIODE("ndio_lpghvt" ndiohlpg psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_lpghvt" )
  cellView( "ndio_lpghvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndiohlpg) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndiohlpg) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndiohlpg "model" "ndio_lpghvt") 
   ) ;if

extractDIODE("ndio_25od" indio_25od psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_33" )
  cellView( "ndio_25od33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (indio_25od) 1e-12) 
   pj_DIO   = measureParameter(perimeter (indio_25od) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( indio_25od "model" "ndio_33") 
   ) ;if

extractDIODE("pdio_33" ipdio_33 tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_33" )
  cellView( "pdio_33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ipdio_33) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ipdio_33) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ipdio_33 "model" "pdio_33") 
   ) ;if

extractDIODE("pdio_25ud" ipdio_25ud tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_18" )
  cellView( "pdio_25ud18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ipdio_25ud) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ipdio_25ud) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ipdio_25ud "model" "pdio_18") 
   ) ;if

extractDIODE("pdio_lvt" pdiol tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_lvt" )
  cellView( "pdio_lvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdiol) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdiol) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdiol "model" "pdio_lvt") 
   ) ;if

extractDIODE("pdio_18" ipdio_18 tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_18" )
  cellView( "pdio_18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ipdio_18) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ipdio_18) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ipdio_18 "model" "pdio_18") 
   ) ;if

extractDIODE("ndio_18" indio_18 psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_18" )
  cellView( "ndio_18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (indio_18) 1e-12) 
   pj_DIO   = measureParameter(perimeter (indio_18) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( indio_18 "model" "ndio_18") 
   ) ;if

extractDIODE("ndio_25" indio_25 psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_25" )
  cellView( "ndio_25 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (indio_25) 1e-12) 
   pj_DIO   = measureParameter(perimeter (indio_25) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( indio_25 "model" "ndio_25") 
   ) ;if

extractDIODE("nwdio_33" inwdio_33 psub("PLUS") nxwell("MINUS")
  spiceModel( "nwdio_33" )
  cellView( "nwdio_33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (inwdio_33) 1e-12) 
   pj_DIO   = measureParameter(perimeter (inwdio_33) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( inwdio_33 "model" "nwdio_33") 
   ) ;if

extractDIODE("pdio" cpdio tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio" )
  cellView( "pdio ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cpdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cpdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cpdio "model" "pdio") 
   ) ;if

extractDIODE("ndio_na18" ndio_18na psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_na18" )
  cellView( "ndio_na18 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_18na) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_18na) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_18na "model" "ndio_na18") 
   ) ;if

extractDIODE("ndio" cndio psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio" )
  cellView( "ndio ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cndio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cndio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cndio "model" "ndio") 
   ) ;if

extractDIODE("ndio_lpg" cndiolpg psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_lpg" )
  cellView( "ndio_lpg ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cndiolpg) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cndiolpg) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cndiolpg "model" "ndio_lpg") 
   ) ;if

extractDIODE("pdio_25" ipdio_25 tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_25" )
  cellView( "pdio_25 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ipdio_25) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ipdio_25) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ipdio_25 "model" "pdio_25") 
   ) ;if

extractDIODE("ndio_mlvt" cndioilvt psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_mlvt" )
  cellView( "ndio_mlvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cndioilvt) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cndioilvt) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cndioilvt "model" "ndio_mlvt") 
   ) ;if

extractDIODE("pdio_lpg" cpdiolpg tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_lpg" )
  cellView( "pdio_lpg ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cpdiolpg) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cpdiolpg) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cpdiolpg "model" "pdio_lpg") 
   ) ;if

extractDIODE("ndio_33" indio_33 psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_33" )
  cellView( "ndio_33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (indio_33) 1e-12) 
   pj_DIO   = measureParameter(perimeter (indio_33) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( indio_33 "model" "ndio_33") 
   ) ;if

extractDIODE("pdio_25od" ipdio_25od tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_33" )
  cellView( "pdio_25od33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ipdio_25od) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ipdio_25od) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ipdio_25od "model" "pdio_33") 
   ) ;if

extractDIODE("nwdio" cnwdio psub("PLUS") nxwell("MINUS")
  spiceModel( "nwdio" )
  cellView( "nwdio ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cnwdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cnwdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cnwdio "model" "nwdio") 
   ) ;if

extractDIODE("pdio_w" epdio tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_w" )
  cellView( "pdio_w ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (epdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (epdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( epdio "model" "pdio_w") 
   ) ;if

extractDIODE("ndio_hvt" ndioh psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_hvt" )
  cellView( "ndio_hvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndioh) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndioh) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndioh "model" "ndio_hvt") 
   ) ;if

extractDIODE("ndio_na25" ndio_25na psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_na25" )
  cellView( "ndio_na25 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_25na) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_25na) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_25na "model" "ndio_na25") 
   ) ;if

extractDIODE("pdio_hvt" pdioh tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_hvt" )
  cellView( "pdio_hvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdioh) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdioh) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdioh "model" "pdio_hvt") 
   ) ;if

extractDIODE("ndio_na25od" ndio_25naod psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_na25od33" )
  cellView( "ndio_na25od33 ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_25naod) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_25naod) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_25naod "model" "ndio_na25od33") 
   ) ;if

extractDIODE("ndio_w" endio psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_w" )
  cellView( "ndio_w ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (endio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (endio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( endio "model" "ndio_w") 
   ) ;if

extractDIODE("ndio_lpgna" cndionlpg psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_lpgna" )
  cellView( "ndio_lpgna ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (cndionlpg) 1e-12) 
   pj_DIO   = measureParameter(perimeter (cndionlpg) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( cndionlpg "model" "ndio_lpgna") 
   ) ;if

extractDIODE("pdio_lpghvt" pdiohlpg tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_lpghvt" )
  cellView( "pdio_lpghvt ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdiohlpg) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdiohlpg) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdiohlpg "model" "pdio_lpghvt") 
   ) ;if

extractCAP("CM" mim_r p3("TOP") crown("BOT")
flagMalformed) 
   area_CAP = measureParameter(area (mim_r) 1e-12) 
   pj_CAP = measureParameter(perimeter (mim_r) 1e-6) 
   cap_CAP1  = calculateParameter( area_CAP * 0 ) 
   cap_CAP2  = calculateParameter( pj_CAP * 0 ) 
   cap_CAP  = calculateParameter( cap_CAP1+cap_CAP2 ) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   nameParameter( area_CAP "AREA" ) 
   nameParameter( cap_CAP "VALUE" ) 
   attachParameter( lt "lt" mim_r )
   attachParameter( wt "wt" mim_r )


;* User define devices 
extractDevice( "rnods_m" rnods_mr tndiff("PLUS" "MINUS") psub("BULK") physical
      spiceModel( "rnods_m" )
      cellView( "rnod_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rnods_mr) 1e-12)
   wr  = measureParameter( length ( rnods_mr butting tndiff ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rnods_mr)
   attachParameter( wr "w" rnods_mr)
   attachParameter( wr "wr" rnods_mr)
   attachParameter( lr "lr" rnods_mr)
   attachParameter( wr "wSim" rnods_mr)
   attachParameter( lr "lSim" rnods_mr)
   attachParameter( wr "sumW" rnods_mr)
   attachParameter( lr "sumL" rnods_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnods_mr "model" "rnods_m")
)

extractDevice("lincap" lin_nw poly("PLUS") tndiff("MINUS")
   spiceModel("lincap")
   cellView("lincap ivpcell")
   flagMalformed
)
   mr1  = measureParameter(figCount (lin_nw enclosing lingt))
   gr    = measureParameter(figCount (lin_nw enclosing nthin))
   mr    = calculateParameter(mr1/gr)
   wr1 = measureParameter(length (lingt butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/mr1)
   a1  = measureParameter(area (lingt) 1e-12)
   lr  = calculateParameter(a1/(wr*mr1))
   attachParameter(wr "wr" lin_nw)
   attachParameter(lr "lr" lin_nw)
   attachParameter(mr "mr" lin_nw)
   attachParameter(gr "gr" lin_nw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(lin_nw "model" "lincap")
)

extractDevice("pmos_rf_18_nw_5t" pgate_pthin_18nw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_18_nw_5t")
   cellView( "pmos_rf_18_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_18nw_5t enclosing pgate_rf_18))
   WD = measureParameter(length (pgate_rf_18 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_18 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_18nw_5t)
   attachParameter(lr "lr" pgate_pthin_18nw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_18nw_5t "model" "pmos_rf_18_nw_5t")
)

extractDevice("nmos_rf_nodnw" ngate_nthin_nodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf")
   cellView( "nmos_rf_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_nodnw enclosing ngate_rf))
   WD = measureParameter(length (ngate_rf butting d_tndiff))
   WS = measureParameter(length (ngate_rf butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_nodnw)
   attachParameter(lr "lr" ngate_nthin_nodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_nodnw "model" "nmos_rf")
)

extractDevice("pmos_rf_hvt_5t" pgate_pthin_hv_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_hvt_5t")
   cellView( "pmos_rf_hvt_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_hv_5t enclosing pgate_rfhv))
   WD = measureParameter(length (pgate_rfhv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfhv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_hv_5t)
   attachParameter(lr "lr" pgate_pthin_hv_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_hv_5t "model" "pmos_rf_hvt_5t")
)

extractDevice("pmos_rf_18_nw" pgate_pthin_18nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_18_nw")
   cellView( "pmos_rf_18_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_18nw enclosing pgate_rf_18))
   WD = measureParameter(length (pgate_rf_18 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_18 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_18nw)
   attachParameter(lr "lr" pgate_pthin_18nw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_18nw "model" "pmos_rf_18_nw")
)

extractDevice("nmos_rf_18_nodnw" ngate_nthin_18nodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_18")
   cellView( "nmos_rf_18_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_18nodnw enclosing ngate_rf_18))
   WD = measureParameter(length (ngate_rf_18 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_18 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_18nodnw)
   attachParameter(lr "lr" ngate_nthin_18nodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_18nodnw "model" "nmos_rf_18")
)

extractDevice("pmos_rf_18_5t" pgate_pthin_18_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_18_5t")
   cellView( "pmos_rf_18_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_18_5t enclosing pgate_rf_18))
   WD = measureParameter(length (pgate_rf_18 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_18 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_18_5t)
   attachParameter(lr "lr" pgate_pthin_18_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_18_5t "model" "pmos_rf_18_5t")
)

extractDevice("moscap_rf18" var_nw_rf18 poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf18")
   cellView("moscap_rf18 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw_rf18 enclosing vargt_rf18))
   gr    = measureParameter(figCount (var_nw_rf18 enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf18 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf18) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw_rf18)
   attachParameter(lr "lr" var_nw_rf18)
   attachParameter(br "br" var_nw_rf18)
   attachParameter(gr "gr" var_nw_rf18)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw_rf18 "model" "moscap_rf18")
)

extractDevice("nmos_rf_25ud" ngate_nthin_25ud d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_18")
   cellView( "nmos_rf_25ud18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25ud enclosing ngate_rf_25ud))
   WD = measureParameter(length (ngate_rf_25ud butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25ud butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25ud)
   attachParameter(lr "lr" ngate_nthin_25ud)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25ud "model" "nmos_rf_18")
)

extractDevice("nmoscap_33" vargt_33 poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap_33")
   cellView( "nmoscap_33 ivpcell" )
   flagMalformed)

   A    = measureParameter(area (vargt_33) 1e-12)
   lr   = measureParameter(length (vargt_33 coincident nthin) 0.5e-6)
   wr   =  calculateParameter( A/lr )
   attachParameter(lr "lr" vargt_33)
   attachParameter(wr "wr" vargt_33)
if( !avSwitch( "spice_extraction") then
	   saveProperty(vargt_33 "model" "nmoscap_33")
)

extractDevice("probe3" PROBEM3 metal3("TOP") PROBEM3_T("BULK")
   spiceModel("probe3")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM3) 1e-6)
   a = measureParameter(area (PROBEM3) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM3 "model" "probe3")
)

extractDevice("pmos_rf_25" pgate_pthin_25 d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_25")
   cellView( "pmos_rf_25 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25 enclosing pgate_rf_25))
   WD = measureParameter(length (pgate_rf_25 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25)
   attachParameter(lr "lr" pgate_pthin_25)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25 "model" "pmos_rf_25")
)

extractDevice("lowcpad_d23" rfpad_23 metal10("APAD") poly("AVSS")
   spiceModel("lowcpad_d23")
   cellView("lowcpad ivpcell")
   flagMalformed
)
   area_PAD = measureParameter(area (ext_rfpad) 1e-12) 
   pj_PAD = measureParameter(perimeter (ext_rfpad) 1e-6) 
   P_2_PAD  = calculateParameter(pj_PAD * pj_PAD)
   AC4      = calculateParameter(area_PAD * 16)
   KKK1     = calculateParameter(P_2_PAD - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_PAD+SQ)/4)
   wt       = calculateParameter((pj_PAD-SQ)/4)
   lay = calculateParameter( 9 * lt / lt )
   attachParameter(wt "wt" rfpad_23)
   attachParameter(lt "lt" rfpad_23)
   attachParameter(lay "lay" rfpad_23)

if( !avSwitch( "spice_extraction") then
	   saveProperty(rfpad_23 "model" "lowcpad_d23")
)

extractDevice("nmos_rf_lvt_nodnw" ngate_nthin_lvnodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_lvt")
   cellView( "nmos_rf_lvt_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_lvnodnw enclosing ngate_rflv))
   WD = measureParameter(length (ngate_rflv butting d_tndiff))
   WS = measureParameter(length (ngate_rflv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_lvnodnw)
   attachParameter(lr "lr" ngate_nthin_lvnodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_lvnodnw "model" "nmos_rf_lvt")
)

extractDevice("nmos_rf_25ud18_6t" ngate_nthin_25ud_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_18_6t")
   cellView( "nmos_rf_25ud18_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25ud_6t enclosing ngate_rf_25ud))
   WD = measureParameter(length (ngate_rf_25ud butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25ud butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25ud_6t)
   attachParameter(lr "lr" ngate_nthin_25ud_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25ud_6t "model" "nmos_rf_18_6t")
)

extractDevice( "rnpolyl_m" rnpolyl_d poly("PLUS" "MINUS") poly_term("BULK") physical
      spiceModel( "rnpolyl_m" )
      cellView( "rnpoly_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rnpolyl_d) 1e-12)
   wr  = measureParameter( length ( rnpolyl_d butting poly ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rnpolyl_d)
   attachParameter( wr "w" rnpolyl_d)
   attachParameter( wr "wr" rnpolyl_d)
   attachParameter( lr "lr" rnpolyl_d)
   attachParameter( wr "wSim" rnpolyl_d)
   attachParameter( lr "lSim" rnpolyl_d)
   attachParameter( wr "sumW" rnpolyl_d)
   attachParameter( lr "sumL" rnpolyl_d)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnpolyl_d "model" "rnpolyl_m")
)

extractDevice("pmoscap_rf18" pvar_rf18 poly("PLUS") tpdiff("MINUS") DNW("BULK")
   spiceModel("pmoscap_rf18")
   cellView("pmoscap_rf18 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (pvar_rf18 enclosing vargt_rf18))
   gr    = measureParameter(figCount (pvar_rf18 enclosing pthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf18 butting tpdiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf18) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" pvar_rf18)
   attachParameter(lr "lr" pvar_rf18)
   attachParameter(br "br" pvar_rf18)
   attachParameter(gr "gr" pvar_rf18)
if( !avSwitch( "spice_extraction") then
	   saveProperty(pvar_rf18 "model" "pmoscap_rf18")
)

extractDevice("pmos_rf_mlvt_5t" pgate_pthin_mlv_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_mlvt_5t")
   cellView( "pmos_rf_mlvt_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_mlv_5t enclosing pgate_rfmlv))
   WD = measureParameter(length (pgate_rfmlv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfmlv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_mlv_5t)
   attachParameter(lr "lr" pgate_pthin_mlv_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_mlv_5t "model" "pmos_rf_mlvt_5t")
)

extractDevice("rpods" rpods_r tpdiff("PLUS" "MINUS") physical
   spiceModel("rpods")
   cellView( "rpod ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rpods_r) 1e-12) 
   w  = measureParameter(length (rpods_r butting tpdiff) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rpods_r)
   attachParameter( l "l" rpods_r)
   attachParameter( w "wSim" rpods_r)
   attachParameter( l "lSim" rpods_r)
   attachParameter( w "sumW" rpods_r)
   attachParameter( l "sumL" rpods_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rpods_r "model" "rpods")
)

extractDevice("nmos_rf_mlvt_6t" ngate_nthin_mlv_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_mlvt_6t")
   cellView( "nmos_rf_mlvt_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_mlv_6t enclosing ngate_rfmlv))
   WD = measureParameter(length (ngate_rfmlv butting d_tndiff))
   WS = measureParameter(length (ngate_rfmlv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_mlv_6t)
   attachParameter(lr "lr" ngate_nthin_mlv_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_mlv_6t "model" "nmos_rf_mlvt_6t")
)

extractDevice( "rnodwo_m" rnodwo_mr tndiff("PLUS" "MINUS") psub("BULK") physical
      spiceModel( "rnodwo_m" )
      cellView( "rnodwo_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rnodwo_mr) 1e-12)
   wr  = measureParameter( length ( rnodwo_mr butting tndiff ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rnodwo_mr)
   attachParameter( wr "w" rnodwo_mr)
   attachParameter( wr "wr" rnodwo_mr)
   attachParameter( lr "lr" rnodwo_mr)
   attachParameter( wr "wSim" rnodwo_mr)
   attachParameter( lr "lSim" rnodwo_mr)
   attachParameter( wr "sumW" rnodwo_mr)
   attachParameter( lr "sumL" rnodwo_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnodwo_mr "model" "rnodwo_m")
)

extractDevice("nmos_rf_25" ngate_nthin_25 d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_25")
   cellView( "nmos_rf_25 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25 enclosing ngate_rf_25))
   WD = measureParameter(length (ngate_rf_25 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25)
   attachParameter(lr "lr" ngate_nthin_25)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25 "model" "nmos_rf_25")
)

extractDevice("rm8" mt8res metal8("PLUS") metal8("MINUS") physical
   spiceModel("rmzw")
   cellView( "rm8 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt8res) 1e-12) 
   w  = measureParameter(length (mt8res butting metal8) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt8res "model" "rmzw")
)

extractDevice("xjvar_nw" jvar_rfnw tpdiff("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("xjvar_nw")
   cellView( "xjvar_nw ivpcell" )
   flagMalformed
)
   nr  = measureParameter(figCount (jvar_rfnw enclosing jvar3_rf))
   wr1 = measureParameter(length (jvar3_rf butting w_fac1))
   w   = calculateParameter(( wr1/(2*nr))*1e-6)
   a1  = measureParameter(area (jvar3_rf) 1e-12)
   l   = calculateParameter( a1/(w*nr))
   nameParameter(nr "nr")
   attachParameter(w "w" jvar_rfnw)
   attachParameter(l "l" jvar_rfnw)
   attachParameter(w "wr" jvar_rfnw)
   attachParameter(l "lr" jvar_rfnw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(jvar_rfnw "model" "xjvar_nw")
)

extractDevice( "rpods_m" rpods_mr tpdiff("PLUS" "MINUS") nxwell("BULK") physical
      spiceModel( "rpods_m" )
      cellView( "rpod_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rpods_mr) 1e-12)
   wr  = measureParameter( length ( rpods_mr butting tpdiff ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rpods_mr)
   attachParameter( wr "w" rpods_mr)
   attachParameter( wr "wr" rpods_mr)
   attachParameter( lr "lr" rpods_mr)
   attachParameter( wr "wSim" rpods_mr)
   attachParameter( lr "lSim" rpods_mr)
   attachParameter( wr "sumW" rpods_mr)
   attachParameter( lr "sumL" rpods_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rpods_mr "model" "rpods_m")
)

extractDevice("rm6" mt6res metal6("PLUS") metal6("MINUS") physical
   spiceModel("rmxw")
   cellView( "rm6 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt6res) 1e-12) 
   w  = measureParameter(length (mt6res butting metal6) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt6res "model" "rmxw")
)

extractDevice("pmos_rf_25_nwud" pgate_pthin_25nwud d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_18_nw")
   cellView( "pmos_rf_25_nwud18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25nwud enclosing pgate_rf_25ud))
   WD = measureParameter(length (pgate_rf_25ud butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25ud butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25nwud)
   attachParameter(lr "lr" pgate_pthin_25nwud)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25nwud "model" "pmos_rf_18_nw")
)

extractDevice("nmoscap_25" vargt_25 poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap_25")
   cellView( "nmoscap_25 ivpcell" )
   flagMalformed)

   A    = measureParameter(area (vargt_25) 1e-12)
   lr   = measureParameter(length (vargt_25 coincident nthin) 0.5e-6)
   wr   =  calculateParameter( A/lr )
   attachParameter(lr "lr" vargt_25)
   attachParameter(wr "wr" vargt_25)
if( !avSwitch( "spice_extraction") then
	   saveProperty(vargt_25 "model" "nmoscap_25")
)

extractDevice("rnpolyl" rnpolyl_r poly("PLUS" "MINUS") physical
   spiceModel("rnpolyl")
   cellView( "rnpoly ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rnpolyl_r) 1e-12) 
   w  = measureParameter(length (rnpolyl_r butting poly) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rnpolyl_r)
   attachParameter( l "l" rnpolyl_r)
   attachParameter( w "wSim" rnpolyl_r)
   attachParameter( l "lSim" rnpolyl_r)
   attachParameter( w "sumW" rnpolyl_r)
   attachParameter( l "sumL" rnpolyl_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnpolyl_r "model" "rnpolyl")
)

extractDevice("sbd_rf" sbd_rfdnw schottky_p("PLUS") schottky_n("MINUS") psub("BULK")
   spiceModel("sbd_rf")
   cellView( "sbd_rf ivpcell" )
   flagMalformed
)
   nf  = measureParameter(figCount (sbd_rfdnw enclosing schottky_p))
   w1  = measureParameter(length (schottky_p butting sbd_w))
   w   = calculateParameter(( w1/(2*nf))*1e-6)
   a   = measureParameter(area (schottky_p) 1e-12)
   l   = calculateParameter( a/(w*nf))
   
   nameParameter(nf "nf")
   attachParameter(w "w" sbd_rfdnw)
   attachParameter(l "l" sbd_rfdnw)

if( !avSwitch( "spice_extraction") then
	   saveProperty(sbd_rfdnw "model" "sbd_rf")
)

extractDevice("rnodl" rnodl_r tndiff("PLUS" "MINUS") physical
   spiceModel("rnodl")
   cellView( "rnod ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rnodl_r) 1e-12) 
   w  = measureParameter(length (rnodl_r butting tndiff) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rnodl_r)
   attachParameter( l "l" rnodl_r)
   attachParameter( w "wSim" rnodl_r)
   attachParameter( l "lSim" rnodl_r)
   attachParameter( w "sumW" rnodl_r)
   attachParameter( l "sumL" rnodl_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnodl_r "model" "rnodl")
)

extractDevice("nmos_rf_25_6t" ngate_nthin_25_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_25_6t")
   cellView( "nmos_rf_25_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25_6t enclosing ngate_rf_25))
   WD = measureParameter(length (ngate_rf_25 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25_6t)
   attachParameter(lr "lr" ngate_nthin_25_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25_6t "model" "nmos_rf_25_6t")
)

extractDevice("rnpolywo" rnpolywo_r poly("PLUS" "MINUS") physical
   spiceModel("rnpolywo")
   cellView( "rnpolywo ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rnpolywo_r) 1e-12) 
   w  = measureParameter(length (rnpolywo_r butting poly) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rnpolywo_r)
   attachParameter( l "l" rnpolywo_r)
   attachParameter( w "wSim" rnpolywo_r)
   attachParameter( l "lSim" rnpolywo_r)
   attachParameter( w "sumW" rnpolywo_r)
   attachParameter( l "sumL" rnpolywo_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnpolywo_r "model" "rnpolywo")
)

extractDevice("pmos_rf" pgate_pthin d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf")
   cellView( "pmos_rf ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin enclosing pgate_rf))
   WD = measureParameter(length (pgate_rf butting d_tpdiff))
   WS = measureParameter(length (pgate_rf butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin)
   attachParameter(lr "lr" pgate_pthin)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin "model" "pmos_rf")
)

extractDevice("pdio_hia_rf" pdio_hia tpdiff("PLUS") nxwell("MINUS") RFDMY_hia("BULK")
   spiceModel("pdio_hia_rf")
   cellView("pdio_hia_rf ivpcell")
   flagMalformed
)
   area_HIA = measureParameter(area (pdio_hia) 1e-12) 
   pj_HIA = measureParameter(perimeter (pdio_hia) 1e-6) 
   P_2_HIA  = calculateParameter(pj_HIA * pj_HIA)
   AHIA4    = calculateParameter(area_HIA * 16)
   KKK1     = calculateParameter(P_2_HIA - AHIA4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   al       = calculateParameter((pj_HIA+SQ)/4)
   aw       = calculateParameter((pj_HIA-SQ)/4)
   attachParameter(aw "aw" pdio_hia)
   attachParameter(al "al" pdio_hia)
   attachParameter(aw "AW" pdio_hia)
   attachParameter(al "AL" pdio_hia)

if( !avSwitch( "spice_extraction") then
	   saveProperty(pdio_hia "model" "pdio_hia_rf")
)

extractDevice("rppolywo_rf" rppolywo_rf poly("PLUS") poly("MINUS") nxwell("BULK") physical
   spiceModel("rppolywo_rf")
   cellView( "rppolywo_rf ivpcell " )
   flagMalformed
)
   w = measureParameter(length (rppolywo_rf butting poly) 0.5e-6)
   A = measureParameter(area (rppolywo_rf) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter( w "wSim")
   nameParameter( l "lSim")
   nameParameter( w "sumW")
   nameParameter( l "sumL")
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolywo_rf "model" "rppolywo_rf")
)

extractDevice("nmoscap_18" vargt_18 poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap_18")
   cellView( "nmoscap_18 ivpcell" )
   flagMalformed)

   A    = measureParameter(area (vargt_18) 1e-12)
   lr   = measureParameter(length (vargt_18 coincident nthin) 0.5e-6)
   wr   =  calculateParameter( A/lr )
   attachParameter(lr "lr" vargt_18)
   attachParameter(wr "wr" vargt_18)
if( !avSwitch( "spice_extraction") then
	   saveProperty(vargt_18 "model" "nmoscap_18")
)

extractDevice("pmoscap_rf" pvar_rf poly("PLUS") tpdiff("MINUS") DNW("BULK")
   spiceModel("pmoscap_rf")
   cellView("pmoscap_rf ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (pvar_rf enclosing vargt_rf))
   gr    = measureParameter(figCount (pvar_rf enclosing pthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf butting tpdiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" pvar_rf)
   attachParameter(lr "lr" pvar_rf)
   attachParameter(br "br" pvar_rf)
   attachParameter(gr "gr" pvar_rf)
if( !avSwitch( "spice_extraction") then
	   saveProperty(pvar_rf "model" "pmoscap_rf")
)

extractDevice("nmos_rf_mlvt_nodnw" ngate_nthin_mlvnodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_mlvt")
   cellView( "nmos_rf_mlvt_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_mlvnodnw enclosing ngate_rfmlv))
   WD = measureParameter(length (ngate_rfmlv butting d_tndiff))
   WS = measureParameter(length (ngate_rfmlv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_mlvnodnw)
   attachParameter(lr "lr" ngate_nthin_mlvnodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_mlvnodnw "model" "nmos_rf_mlvt")
)

extractDevice("rnodwo" rnodwo_r tndiff("PLUS" "MINUS") physical
   spiceModel("rnodwo")
   cellView( "rnodwo ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rnodwo_r) 1e-12) 
   w  = measureParameter(length (rnodwo_r butting tndiff) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rnodwo_r)
   attachParameter( l "l" rnodwo_r)
   attachParameter( w "wSim" rnodwo_r)
   attachParameter( l "lSim" rnodwo_r)
   attachParameter( w "sumW" rnodwo_r)
   attachParameter( l "sumL" rnodwo_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnodwo_r "model" "rnodwo")
)

extractDevice("pmos_rf_5t" pgate_pthin_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_5t")
   cellView( "pmos_rf_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_5t enclosing pgate_rf))
   WD = measureParameter(length (pgate_rf butting d_tpdiff))
   WS = measureParameter(length (pgate_rf butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_5t)
   attachParameter(lr "lr" pgate_pthin_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_5t "model" "pmos_rf_5t")
)

extractDevice("rppolywo" rppolywo_r poly("PLUS" "MINUS") physical
   spiceModel("rppolywo")
   cellView( "rppolywo ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rppolywo_r) 1e-12) 
   w  = measureParameter(length (rppolywo_r butting poly) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rppolywo_r)
   attachParameter( l "l" rppolywo_r)
   attachParameter( w "wSim" rppolywo_r)
   attachParameter( l "lSim" rppolywo_r)
   attachParameter( w "sumW" rppolywo_r)
   attachParameter( l "sumL" rppolywo_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolywo_r "model" "rppolywo")
)

extractDevice("lincap_rf" lin_nw_rf poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("lincap_rf")
   cellView("lincap_rf ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (lin_nw_rf enclosing lingt_rf))
   gr    = measureParameter(figCount (lin_nw_rf enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (lingt_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (lingt_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" lin_nw_rf)
   attachParameter(lr "lr" lin_nw_rf)
   attachParameter(br "br" lin_nw_rf)
   attachParameter(gr "gr" lin_nw_rf)
if( !avSwitch( "spice_extraction") then
	   saveProperty(lin_nw_rf "model" "lincap_rf")
)

extractDevice("moscap_rf_hvt" var_nw3_rf_hvt poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf_hvt")
   cellView("moscap_rf_hvt ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw3_rf_hvt enclosing vargt_rf_hvt))
   gr    = measureParameter(figCount (var_nw3_rf_hvt enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf_hvt butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf_hvt) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw3_rf_hvt)
   attachParameter(lr "lr" var_nw3_rf_hvt)
   attachParameter(br "br" var_nw3_rf_hvt)
   attachParameter(gr "gr" var_nw3_rf_hvt)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw3_rf_hvt "model" "moscap_rf_hvt")
)

extractDevice( "rnodl_m" rnodl_mr tndiff("PLUS" "MINUS") psub("BULK") physical
      spiceModel( "rnodl_m" )
      cellView( "rnod_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rnodl_mr) 1e-12)
   wr  = measureParameter( length ( rnodl_mr butting tndiff ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rnodl_mr)
   attachParameter( wr "w" rnodl_mr)
   attachParameter( wr "wr" rnodl_mr)
   attachParameter( lr "lr" rnodl_mr)
   attachParameter( wr "wSim" rnodl_mr)
   attachParameter( lr "lSim" rnodl_mr)
   attachParameter( wr "sumW" rnodl_mr)
   attachParameter( lr "sumL" rnodl_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnodl_mr "model" "rnodl_m")
)

extractDevice("pmos_rf_33_5t" pgate_pthin_33_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_33_5t")
   cellView( "pmos_rf_33_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_33_5t enclosing pgate_rf_33))
   WD = measureParameter(length (pgate_rf_33 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_33 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_33_5t)
   attachParameter(lr "lr" pgate_pthin_33_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_33_5t "model" "pmos_rf_33_5t")
)

extractDevice("nmos_rf_6t" ngate_nthin_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_6t")
   cellView( "nmos_rf_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_6t enclosing ngate_rf))
   WD = measureParameter(length (ngate_rf butting d_tndiff))
   WS = measureParameter(length (ngate_rf butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_6t)
   attachParameter(lr "lr" ngate_nthin_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_6t "model" "nmos_rf_6t")
)

extractDevice("pmos_rf_mlvt_nw" pgate_pthin_mlvnw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_mlvt_nw")
   cellView( "pmos_rf_mlvt_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_mlvnw enclosing pgate_rfmlv))
   WD = measureParameter(length (pgate_rfmlv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfmlv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_mlvnw)
   attachParameter(lr "lr" pgate_pthin_mlvnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_mlvnw "model" "pmos_rf_mlvt_nw")
)

extractDevice("nmos_rf_hvt_6t" ngate_nthin_hv_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_hvt_6t")
   cellView( "nmos_rf_hvt_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_hv_6t enclosing ngate_rfhv))
   WD = measureParameter(length (ngate_rfhv butting d_tndiff))
   WS = measureParameter(length (ngate_rfhv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_hv_6t)
   attachParameter(lr "lr" ngate_nthin_hv_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_hv_6t "model" "nmos_rf_hvt_6t")
)

extractDevice("nmos_rf_18" ngate_nthin_18 d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_18")
   cellView( "nmos_rf_18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_18 enclosing ngate_rf_18))
   WD = measureParameter(length (ngate_rf_18 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_18 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_18)
   attachParameter(lr "lr" ngate_nthin_18)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_18 "model" "nmos_rf_18")
)

extractDevice("rppolys_rf" rppolys_rf poly("PLUS") poly("MINUS") nxwell("BULK") physical
   spiceModel("rppolys_rf")
   cellView( "rppoly_rf ivpcell " )
   flagMalformed
)
   w = measureParameter(length (rppolys_rf butting poly) 0.5e-6)
   A = measureParameter(area (rppolys_rf) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter( w "wSim")
   nameParameter( l "lSim")
   nameParameter( w "sumW")
   nameParameter( l "sumL")
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolys_rf "model" "rppolys_rf")
)

extractDevice("nmos_rf_33_6t" ngate_nthin_33_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_33_6t")
   cellView( "nmos_rf_33_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_33_6t enclosing ngate_rf_33))
   WD = measureParameter(length (ngate_rf_33 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_33 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_33_6t)
   attachParameter(lr "lr" ngate_nthin_33_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_33_6t "model" "nmos_rf_33_6t")
)

extractDevice("nmos_rf_na18" ngate_nthin_18na d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_na18")
   cellView( "nmos_rf_na18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_18na enclosing ngate_rf_18na))
   WD = measureParameter(length (ngate_rf_18na butting d_tndiff))
   WS = measureParameter(length (ngate_rf_18na butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_18na) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_18na)
   attachParameter(lr "lr" ngate_nthin_18na)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_18na "model" "nmos_rf_na18")
)

extractDevice("nmos_rf_25_nodnwud" ngate_nthin_25nodnwud d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_18")
   cellView( "nmos_rf_25_nodnwud18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25nodnwud enclosing ngate_rf_25ud))
   WD = measureParameter(length (ngate_rf_25ud butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25ud butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25nodnwud)
   attachParameter(lr "lr" ngate_nthin_25nodnwud)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25nodnwud "model" "nmos_rf_18")
)

extractDevice( "spiral_std_mu_z" std_ind indm9p("PLUS") indm9m("MINUS") psub("BULK")
   spiceModel("spiral_std_mu_z")
   cellView("spiral_std_mu_z ivpcell")
   flagMalformed
)  
   nnr1 = measureParameter(perimeter (IND_NR) ) 
   nnr = calculateParameter( ( nnr1 - 0.005*2 ) / 2 )
   nr =  calculateParameter( ( nnr / 0.01 ) * 0.25 ) 
   lay = calculateParameter(9 * nr/nr)
   rad1 = measureParameter(perimeter (IND_RAD))
   rad  = calculateParameter((rad1-0.5*2) * 0.5e-6)
   gdis1 = measureParameter(perimeter (IND_GDIS))
   gdis  = calculateParameter((gdis1-0.5*2) * 0.5e-6)
   nw   = measureParameter(figCount (std_ind enclosing std_w))
   w1   = measureParameter(length (std_w inside std_ind))
   w    = calculateParameter(w1/(nw*2)*1e-6)
   s1   = measureParameter( perimeter (IND_S) )
   spacing    = calculateParameter( ( s1 - 0.5*2 ) * 0.5e-6 )
   attachParameter(w "w" std_ind)
   attachParameter(lay "lay" std_ind)
   attachParameter(rad "rad" std_ind)
   attachParameter(nr "nr" std_ind)
   attachParameter(gdis "gdis" std_ind)
   attachParameter(spacing "spacing" std_ind)
if( !avSwitch( "spice_extraction") then
	   saveProperty(std_ind "model" "spiral_std_mu_z")
)

extractDevice("nmos_rf_mlvt" ngate_nthin_mlv d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_mlvt")
   cellView( "nmos_rf_mlvt ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_mlv enclosing ngate_rfmlv))
   WD = measureParameter(length (ngate_rfmlv butting d_tndiff))
   WS = measureParameter(length (ngate_rfmlv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_mlv)
   attachParameter(lr "lr" ngate_nthin_mlv)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_mlv "model" "nmos_rf_mlvt")
)

extractDevice("pmos_rf_18" pgate_pthin_18 d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_18")
   cellView( "pmos_rf_18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_18 enclosing pgate_rf_18))
   WD = measureParameter(length (pgate_rf_18 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_18 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_18)
   attachParameter(lr "lr" pgate_pthin_18)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_18 "model" "pmos_rf_18")
)

extractDevice("rm3" mt3res metal3("PLUS") metal3("MINUS") physical
   spiceModel("rmxw")
   cellView( "rm3 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt3res) 1e-12) 
   w  = measureParameter(length (mt3res butting metal3) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt3res "model" "rmxw")
)

extractDevice("pmos_rf_25_5t" pgate_pthin_25_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_25_5t")
   cellView( "pmos_rf_25_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25_5t enclosing pgate_rf_25))
   WD = measureParameter(length (pgate_rf_25 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25_5t)
   attachParameter(lr "lr" pgate_pthin_25_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25_5t "model" "pmos_rf_25_5t")
)

extractDevice("pmoscap_rf25" pvar_rf25 poly("PLUS") tpdiff("MINUS") DNW("BULK")
   spiceModel("pmoscap_rf25")
   cellView("pmoscap_rf25 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (pvar_rf25 enclosing vargt_rf25))
   gr    = measureParameter(figCount (pvar_rf25 enclosing pthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf25 butting tpdiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf25) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" pvar_rf25)
   attachParameter(lr "lr" pvar_rf25)
   attachParameter(br "br" pvar_rf25)
   attachParameter(gr "gr" pvar_rf25)
if( !avSwitch( "spice_extraction") then
	   saveProperty(pvar_rf25 "model" "pmoscap_rf25")
)

extractDevice("probe1" PROBEM1 metal1("TOP") PROBEM1_T("BULK")
   spiceModel("probe1")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM1) 1e-6)
   a = measureParameter(area (PROBEM1) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM1 "model" "probe1")
)

extractDevice("rppolyl_rf" rppolyl_rf poly("PLUS") poly("MINUS") nxwell("BULK") physical
   spiceModel("rppolyl_rf")
   cellView( "rppoly_rf ivpcell " )
   flagMalformed
)
   w = measureParameter(length (rppolyl_rf butting poly) 0.5e-6)
   A = measureParameter(area (rppolyl_rf) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter( w "wSim")
   nameParameter( l "lSim")
   nameParameter( w "sumW")
   nameParameter( l "sumL")
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolyl_rf "model" "rppolyl_rf")
)

extractDevice("nmos_rf_25od" ngate_nthin_25od d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_33")
   cellView( "nmos_rf_25od33 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25od enclosing ngate_rf_25od))
   WD = measureParameter(length (ngate_rf_25od butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25od butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25od)
   attachParameter(lr "lr" ngate_nthin_25od)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25od "model" "nmos_rf_33")
)

geomStamp( MIM_TERM psub by mim_psub_via multStamp )
geomStamp( MIM_TERM nxwell by mim_nw_via )

extractDevice("mimcap_sin_3t" RCTM_R1P0_3T ctm("PLUS") cbm("MINUS") MIM_TERM("BULK")
   spiceModel("mimcap_sin_3t")
   cellView( "mimcap_3t ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R1P0_3T) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R1P0_3T) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 1 * lt / lt ) 
   lay = calculateParameter( 7 * lt / lt )

   attachParameter( lt "lt" RCTM_R1P0_3T )
   attachParameter( wt "wt" RCTM_R1P0_3T )
   attachParameter( lay "lay" RCTM_R1P0_3T )
   attachParameter( mimflag "mimflag" RCTM_R1P0_3T )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R1P0_3T "model" "mimcap_sin_3t")
)
extractDevice("mimcap_sin_3t" RCTM_R1P5_3T ctm("PLUS") cbm("MINUS") MIM_TERM("BULK")
   spiceModel("mimcap_sin_3t")
   cellView( "mimcap_3t ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R1P5_3T) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R1P5_3T) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 2 * lt / lt ) 
   lay = calculateParameter( 7 * lt / lt )

   attachParameter( lt "lt" RCTM_R1P5_3T )
   attachParameter( wt "wt" RCTM_R1P5_3T )
   attachParameter( lay "lay" RCTM_R1P5_3T )
   attachParameter( mimflag "mimflag" RCTM_R1P5_3T )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R1P5_3T "model" "mimcap_sin_3t")
)
extractDevice("mimcap_sin_3t" RCTM_R2P0_3T ctm("PLUS") cbm("MINUS") MIM_TERM("BULK")
   spiceModel("mimcap_sin_3t")
   cellView( "mimcap_3t ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R2P0_3T) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R2P0_3T) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 3 * lt / lt ) 
   lay = calculateParameter( 7 * lt / lt )

   attachParameter( lt "lt" RCTM_R2P0_3T )
   attachParameter( wt "wt" RCTM_R2P0_3T )
   attachParameter( lay "lay" RCTM_R2P0_3T )
   attachParameter( mimflag "mimflag" RCTM_R2P0_3T )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R2P0_3T "model" "mimcap_sin_3t")
)

extractDevice("rppolys" rppolys_r poly("PLUS" "MINUS") physical
   spiceModel("rppolys")
   cellView( "rppoly ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rppolys_r) 1e-12) 
   w  = measureParameter(length (rppolys_r butting poly) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rppolys_r)
   attachParameter( l "l" rppolys_r)
   attachParameter( w "wSim" rppolys_r)
   attachParameter( l "lSim" rppolys_r)
   attachParameter( w "sumW" rppolys_r)
   attachParameter( l "sumL" rppolys_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolys_r "model" "rppolys")
)

extractDevice("probe6" PROBEM6 metal6("TOP") PROBEM6_T("BULK")
   spiceModel("probe6")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM6) 1e-6)
   a = measureParameter(area (PROBEM6) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM6 "model" "probe6")
)

extractDevice("pmos_rf_25_nwod" pgate_pthin_25nwod d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_33_nw")
   cellView( "pmos_rf_25_nwod33 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25nwod enclosing pgate_rf_25od))
   WD = measureParameter(length (pgate_rf_25od butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25od butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25nwod)
   attachParameter(lr "lr" pgate_pthin_25nwod)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25nwod "model" "pmos_rf_33_nw")
)

extractDevice("pmos_rf_25ud18_5t" pgate_pthin_25ud_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_18_5t")
   cellView( "pmos_rf_25ud18_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25ud_5t enclosing pgate_rf_25ud))
   WD = measureParameter(length (pgate_rf_25ud butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25ud butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25ud_5t)
   attachParameter(lr "lr" pgate_pthin_25ud_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25ud_5t "model" "pmos_rf_18_5t")
)

extractDevice("nmos_rf_33_nodnw" ngate_nthin_33nodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_33")
   cellView( "nmos_rf_33_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_33nodnw enclosing ngate_rf_33))
   WD = measureParameter(length (ngate_rf_33 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_33 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_33nodnw)
   attachParameter(lr "lr" ngate_nthin_33nodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_33nodnw "model" "nmos_rf_33")
)

extractDevice( "rpodl_m" rpodl_mr tpdiff("PLUS" "MINUS") nxwell("BULK") physical
      spiceModel( "rpodl_m" )
      cellView( "rpod_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rpodl_mr) 1e-12)
   wr  = measureParameter( length ( rpodl_mr butting tpdiff ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rpodl_mr)
   attachParameter( wr "w" rpodl_mr)
   attachParameter( wr "wr" rpodl_mr)
   attachParameter( lr "lr" rpodl_mr)
   attachParameter( wr "wSim" rpodl_mr)
   attachParameter( lr "lSim" rpodl_mr)
   attachParameter( wr "sumW" rpodl_mr)
   attachParameter( lr "sumL" rpodl_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rpodl_mr "model" "rpodl_m")
)

extractDevice("pmos_rf_25ud18_nw_5t" pgate_pthin_25nwud_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_18_nw_5t")
   cellView( "pmos_rf_25ud18_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25nwud_5t enclosing pgate_rf_25ud))
   WD = measureParameter(length (pgate_rf_25ud butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25ud butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25nwud_5t)
   attachParameter(lr "lr" pgate_pthin_25nwud_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25nwud_5t "model" "pmos_rf_18_nw_5t")
)

extractDevice("sbd_rf_nw" sbd_rfnw schottky_p("PLUS") schottky_n("MINUS") psub("BULK")
   spiceModel("sbd_rf_nw")
   cellView( "sbd_rf_nw ivpcell" )
   flagMalformed
)
   nf  = measureParameter(figCount (sbd_rfnw enclosing schottky_p))
   w1  = measureParameter(length (schottky_p butting sbd_w))
   w   = calculateParameter(( w1/(2*nf))*1e-6)
   a   = measureParameter(area (schottky_p) 1e-12)
   l   = calculateParameter( a/(w*nf))
   
   nameParameter(nf "nf")
   attachParameter(w "w" sbd_rfnw)
   attachParameter(l "l" sbd_rfnw)

if( !avSwitch( "spice_extraction") then
	   saveProperty(sbd_rfnw "model" "sbd_rf_nw")
)

extractDevice("moscap_rf33_nw" var_nw_rf33_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf33_nw")
   cellView("moscap_rf33_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw_rf33_nw enclosing vargt_rf33))
   gr    = measureParameter(figCount (var_nw_rf33_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf33 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf33) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw_rf33_nw)
   attachParameter(lr "lr" var_nw_rf33_nw)
   attachParameter(br "br" var_nw_rf33_nw)
   attachParameter(gr "gr" var_nw_rf33_nw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw_rf33_nw "model" "moscap_rf33_nw")
)

extractDevice("lowcpad_d15" rfpad_15 metal10("APAD") poly("AVSS")
   spiceModel("lowcpad_d15")
   cellView("lowcpad ivpcell")
   flagMalformed
)
   area_PAD = measureParameter(area (ext_rfpad) 1e-12) 
   pj_PAD = measureParameter(perimeter (ext_rfpad) 1e-6) 
   P_2_PAD  = calculateParameter(pj_PAD * pj_PAD)
   AC4      = calculateParameter(area_PAD * 16)
   KKK1     = calculateParameter(P_2_PAD - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_PAD+SQ)/4)
   wt       = calculateParameter((pj_PAD-SQ)/4)
   lay = calculateParameter( 9 * lt / lt )
   attachParameter(wt "wt" rfpad_15)
   attachParameter(lt "lt" rfpad_15)
   attachParameter(lay "lay" rfpad_15)

if( !avSwitch( "spice_extraction") then
	   saveProperty(rfpad_15 "model" "lowcpad_d15")
)

extractDevice("ndio_hia_rf" ndio_hia psub("PLUS") tndiff("MINUS")
   spiceModel("ndio_hia_rf")
   cellView("ndio_hia_rf ivpcell")
   flagMalformed
)
   area_HIA = measureParameter(area (ndio_hia) 1e-12) 
   pj_HIA = measureParameter(perimeter (ndio_hia) 1e-6) 
   P_2_HIA  = calculateParameter(pj_HIA * pj_HIA)
   AHIA4    = calculateParameter(area_HIA * 16)
   KKK1     = calculateParameter(P_2_HIA - AHIA4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   al       = calculateParameter((pj_HIA+SQ)/4)
   aw       = calculateParameter((pj_HIA-SQ)/4)
   attachParameter(aw "aw" ndio_hia)
   attachParameter(al "al" ndio_hia)
   attachParameter(aw "AW" ndio_hia)
   attachParameter(al "AL" ndio_hia)

if( !avSwitch( "spice_extraction") then
	   saveProperty(ndio_hia "model" "ndio_hia_rf")
)

extractDevice("probe2" PROBEM2 metal2("TOP") PROBEM2_T("BULK")
   spiceModel("probe2")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM2) 1e-6)
   a = measureParameter(area (PROBEM2) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM2 "model" "probe2")
)

extractDevice( "rppolys_m" rppolys_d poly("PLUS" "MINUS") poly_term("BULK") physical
      spiceModel( "rppolys_m" )
      cellView( "rppoly_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rppolys_d) 1e-12)
   wr  = measureParameter( length ( rppolys_d butting poly ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rppolys_d)
   attachParameter( wr "w" rppolys_d)
   attachParameter( wr "wr" rppolys_d)
   attachParameter( lr "lr" rppolys_d)
   attachParameter( wr "wSim" rppolys_d)
   attachParameter( lr "lSim" rppolys_d)
   attachParameter( wr "sumW" rppolys_d)
   attachParameter( lr "sumL" rppolys_d)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolys_d "model" "rppolys_m")
)

extractDevice("rnods" rnods_r tndiff("PLUS" "MINUS") physical
   spiceModel("rnods")
   cellView( "rnod ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rnods_r) 1e-12) 
   w  = measureParameter(length (rnods_r butting tndiff) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rnods_r)
   attachParameter( l "l" rnods_r)
   attachParameter( w "wSim" rnods_r)
   attachParameter( l "lSim" rnods_r)
   attachParameter( w "sumW" rnods_r)
   attachParameter( l "sumL" rnods_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnods_r "model" "rnods")
)

extractDevice("probe4" PROBEM4 metal4("TOP") PROBEM4_T("BULK")
   spiceModel("probe4")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM4) 1e-6)
   a = measureParameter(area (PROBEM4) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM4 "model" "probe4")
)

extractDevice("pmos_rf_hvt_nw_5t" pgate_pthin_hvnw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_hvt_nw_5t")
   cellView( "pmos_rf_hvt_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_hvnw_5t enclosing pgate_rfhv))
   WD = measureParameter(length (pgate_rfhv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfhv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_hvnw_5t)
   attachParameter(lr "lr" pgate_pthin_hvnw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_hvnw_5t "model" "pmos_rf_hvt_nw_5t")
)

extractDevice("pmos_rf_25_nw_5t" pgate_pthin_25nw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_25_nw_5t")
   cellView( "pmos_rf_25_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25nw_5t enclosing pgate_rf_25))
   WD = measureParameter(length (pgate_rf_25 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25nw_5t)
   attachParameter(lr "lr" pgate_pthin_25nw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25nw_5t "model" "pmos_rf_25_nw_5t")
)

extractDevice("nmos_rf_25_nodnwod" ngate_nthin_25nodnwod d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_33")
   cellView( "nmos_rf_25_nodnwod33 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25nodnwod enclosing ngate_rf_25od))
   WD = measureParameter(length (ngate_rf_25od butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25od butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25nodnwod)
   attachParameter(lr "lr" ngate_nthin_25nodnwod)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25nodnwod "model" "nmos_rf_33")
)

extractDevice("moscap_rf_hvt_nw" var_nw3_rf_hvt_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf_hvt_nw")
   cellView("moscap_rf_hvt_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw3_rf_hvt_nw enclosing vargt_rf_hvt))
   gr    = measureParameter(figCount (var_nw3_rf_hvt_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf_hvt butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf_hvt) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw3_rf_hvt_nw)
   attachParameter(lr "lr" var_nw3_rf_hvt_nw)
   attachParameter(br "br" var_nw3_rf_hvt_nw)
   attachParameter(gr "gr" var_nw3_rf_hvt_nw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw3_rf_hvt_nw "model" "moscap_rf_hvt_nw")
)

extractDevice("nmos_rf_hvt_nodnw" ngate_nthin_hvnodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_hvt")
   cellView( "nmos_rf_hvt_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_hvnodnw enclosing ngate_rfhv))
   WD = measureParameter(length (ngate_rfhv butting d_tndiff))
   WS = measureParameter(length (ngate_rfhv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_hvnodnw)
   attachParameter(lr "lr" ngate_nthin_hvnodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_hvnodnw "model" "nmos_rf_hvt")
)
















    



    

extractDevice( "crtmom" mom13_reg metal3("PLUS") metal3("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom13_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 3 * nh/nh )

     
     attachParameter(nv "nv" mom13_reg)
     attachParameter(nh "nh" mom13_reg)
     attachParameter(s  "s"  mom13_reg)
     attachParameter(s  "sp" mom13_reg)
     attachParameter(w  "w"  mom13_reg)
     attachParameter(stm  "stm"  mom13_reg)
     attachParameter(spm  "spm"  mom13_reg)
     attachParameter(stm  "StartMn"  mom13_reg)
     attachParameter(spm  "StopMn"  mom13_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom13_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom13_reg_rf metal3("PLUS") metal3("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom13_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 3 * nh/nh )

     attachParameter(nv "nv" mom13_reg_rf)
     attachParameter(nh "nh" mom13_reg_rf)
     attachParameter(s  "s"  mom13_reg_rf)
     attachParameter(s  "sp" mom13_reg_rf)
     attachParameter(w  "w"  mom13_reg_rf)
     attachParameter(stm  "stm"  mom13_reg_rf)
     attachParameter(spm  "spm"  mom13_reg_rf)
     attachParameter(stm  "StartMn"  mom13_reg_rf)
     attachParameter(spm  "StopMn"  mom13_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom13_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom13_mx_reg mom3p1("PLUS1") mom3m1("MINUS1") mom3p2("PLUS2") mom3m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin3 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom13_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 3 * nh/nh )

     attachParameter(nv "nv" mom13_mx_reg)
     attachParameter(nh "nh" mom13_mx_reg)
     attachParameter(s  "s"  mom13_mx_reg)
     attachParameter(s  "sp" mom13_mx_reg)
     attachParameter(w  "w"  mom13_mx_reg)
     attachParameter(mf  "mf"  mom13_mx_reg)
     attachParameter(stm  "stm"  mom13_mx_reg)
     attachParameter(spm  "spm"  mom13_mx_reg)
     attachParameter(stm  "StartMn"  mom13_mx_reg)
     attachParameter(spm  "StopMn"  mom13_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom13_mx_reg "model" "crtmom_mx")
)















    



    

extractDevice( "crtmom" mom14_reg metal4("PLUS") metal4("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom14_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 4 * nh/nh )

     
     attachParameter(nv "nv" mom14_reg)
     attachParameter(nh "nh" mom14_reg)
     attachParameter(s  "s"  mom14_reg)
     attachParameter(s  "sp" mom14_reg)
     attachParameter(w  "w"  mom14_reg)
     attachParameter(stm  "stm"  mom14_reg)
     attachParameter(spm  "spm"  mom14_reg)
     attachParameter(stm  "StartMn"  mom14_reg)
     attachParameter(spm  "StopMn"  mom14_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom14_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom14_reg_rf metal4("PLUS") metal4("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom14_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 4 * nh/nh )

     attachParameter(nv "nv" mom14_reg_rf)
     attachParameter(nh "nh" mom14_reg_rf)
     attachParameter(s  "s"  mom14_reg_rf)
     attachParameter(s  "sp" mom14_reg_rf)
     attachParameter(w  "w"  mom14_reg_rf)
     attachParameter(stm  "stm"  mom14_reg_rf)
     attachParameter(spm  "spm"  mom14_reg_rf)
     attachParameter(stm  "StartMn"  mom14_reg_rf)
     attachParameter(spm  "StopMn"  mom14_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom14_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom14_mx_reg mom4p1("PLUS1") mom4m1("MINUS1") mom4p2("PLUS2") mom4m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin4 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom14_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 4 * nh/nh )

     attachParameter(nv "nv" mom14_mx_reg)
     attachParameter(nh "nh" mom14_mx_reg)
     attachParameter(s  "s"  mom14_mx_reg)
     attachParameter(s  "sp" mom14_mx_reg)
     attachParameter(w  "w"  mom14_mx_reg)
     attachParameter(mf  "mf"  mom14_mx_reg)
     attachParameter(stm  "stm"  mom14_mx_reg)
     attachParameter(spm  "spm"  mom14_mx_reg)
     attachParameter(stm  "StartMn"  mom14_mx_reg)
     attachParameter(spm  "StopMn"  mom14_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom14_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom15_reg metal5("PLUS") metal5("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom15_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     
     attachParameter(nv "nv" mom15_reg)
     attachParameter(nh "nh" mom15_reg)
     attachParameter(s  "s"  mom15_reg)
     attachParameter(s  "sp" mom15_reg)
     attachParameter(w  "w"  mom15_reg)
     attachParameter(stm  "stm"  mom15_reg)
     attachParameter(spm  "spm"  mom15_reg)
     attachParameter(stm  "StartMn"  mom15_reg)
     attachParameter(spm  "StopMn"  mom15_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom15_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom15_reg_rf metal5("PLUS") metal5("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom15_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     attachParameter(nv "nv" mom15_reg_rf)
     attachParameter(nh "nh" mom15_reg_rf)
     attachParameter(s  "s"  mom15_reg_rf)
     attachParameter(s  "sp" mom15_reg_rf)
     attachParameter(w  "w"  mom15_reg_rf)
     attachParameter(stm  "stm"  mom15_reg_rf)
     attachParameter(spm  "spm"  mom15_reg_rf)
     attachParameter(stm  "StartMn"  mom15_reg_rf)
     attachParameter(spm  "StopMn"  mom15_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom15_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom15_mx_reg mom5p1("PLUS1") mom5m1("MINUS1") mom5p2("PLUS2") mom5m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin5 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom15_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     attachParameter(nv "nv" mom15_mx_reg)
     attachParameter(nh "nh" mom15_mx_reg)
     attachParameter(s  "s"  mom15_mx_reg)
     attachParameter(s  "sp" mom15_mx_reg)
     attachParameter(w  "w"  mom15_mx_reg)
     attachParameter(mf  "mf"  mom15_mx_reg)
     attachParameter(stm  "stm"  mom15_mx_reg)
     attachParameter(spm  "spm"  mom15_mx_reg)
     attachParameter(stm  "StartMn"  mom15_mx_reg)
     attachParameter(spm  "StopMn"  mom15_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom15_mx_reg "model" "crtmom_mx")
)

















    



    

extractDevice( "crtmom" mom16_reg metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom16_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     
     attachParameter(nv "nv" mom16_reg)
     attachParameter(nh "nh" mom16_reg)
     attachParameter(s  "s"  mom16_reg)
     attachParameter(s  "sp" mom16_reg)
     attachParameter(w  "w"  mom16_reg)
     attachParameter(stm  "stm"  mom16_reg)
     attachParameter(spm  "spm"  mom16_reg)
     attachParameter(stm  "StartMn"  mom16_reg)
     attachParameter(spm  "StopMn"  mom16_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom16_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom16_reg_rf metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom16_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom16_reg_rf)
     attachParameter(nh "nh" mom16_reg_rf)
     attachParameter(s  "s"  mom16_reg_rf)
     attachParameter(s  "sp" mom16_reg_rf)
     attachParameter(w  "w"  mom16_reg_rf)
     attachParameter(stm  "stm"  mom16_reg_rf)
     attachParameter(spm  "spm"  mom16_reg_rf)
     attachParameter(stm  "StartMn"  mom16_reg_rf)
     attachParameter(spm  "StopMn"  mom16_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom16_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom16_mx_reg mom6p1("PLUS1") mom6m1("MINUS1") mom6p2("PLUS2") mom6m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin6 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom16_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom16_mx_reg)
     attachParameter(nh "nh" mom16_mx_reg)
     attachParameter(s  "s"  mom16_mx_reg)
     attachParameter(s  "sp" mom16_mx_reg)
     attachParameter(w  "w"  mom16_mx_reg)
     attachParameter(mf  "mf"  mom16_mx_reg)
     attachParameter(stm  "stm"  mom16_mx_reg)
     attachParameter(spm  "spm"  mom16_mx_reg)
     attachParameter(stm  "StartMn"  mom16_mx_reg)
     attachParameter(spm  "StopMn"  mom16_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom16_mx_reg "model" "crtmom_mx")
)


















    



    

extractDevice( "crtmom" mom17_reg metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom17_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     
     attachParameter(nv "nv" mom17_reg)
     attachParameter(nh "nh" mom17_reg)
     attachParameter(s  "s"  mom17_reg)
     attachParameter(s  "sp" mom17_reg)
     attachParameter(w  "w"  mom17_reg)
     attachParameter(stm  "stm"  mom17_reg)
     attachParameter(spm  "spm"  mom17_reg)
     attachParameter(stm  "StartMn"  mom17_reg)
     attachParameter(spm  "StopMn"  mom17_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom17_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom17_reg_rf metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom17_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom17_reg_rf)
     attachParameter(nh "nh" mom17_reg_rf)
     attachParameter(s  "s"  mom17_reg_rf)
     attachParameter(s  "sp" mom17_reg_rf)
     attachParameter(w  "w"  mom17_reg_rf)
     attachParameter(stm  "stm"  mom17_reg_rf)
     attachParameter(spm  "spm"  mom17_reg_rf)
     attachParameter(stm  "StartMn"  mom17_reg_rf)
     attachParameter(spm  "StopMn"  mom17_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom17_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom17_mx_reg mom7p1("PLUS1") mom7m1("MINUS1") mom7p2("PLUS2") mom7m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin7 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom17_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 1 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom17_mx_reg)
     attachParameter(nh "nh" mom17_mx_reg)
     attachParameter(s  "s"  mom17_mx_reg)
     attachParameter(s  "sp" mom17_mx_reg)
     attachParameter(w  "w"  mom17_mx_reg)
     attachParameter(mf  "mf"  mom17_mx_reg)
     attachParameter(stm  "stm"  mom17_mx_reg)
     attachParameter(spm  "spm"  mom17_mx_reg)
     attachParameter(stm  "StartMn"  mom17_mx_reg)
     attachParameter(spm  "StopMn"  mom17_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom17_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom24_reg metal4("PLUS") metal4("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom24_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 4 * nh/nh )

     
     attachParameter(nv "nv" mom24_reg)
     attachParameter(nh "nh" mom24_reg)
     attachParameter(s  "s"  mom24_reg)
     attachParameter(s  "sp" mom24_reg)
     attachParameter(w  "w"  mom24_reg)
     attachParameter(stm  "stm"  mom24_reg)
     attachParameter(spm  "spm"  mom24_reg)
     attachParameter(stm  "StartMn"  mom24_reg)
     attachParameter(spm  "StopMn"  mom24_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom24_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom24_reg_rf metal4("PLUS") metal4("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom24_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 4 * nh/nh )

     attachParameter(nv "nv" mom24_reg_rf)
     attachParameter(nh "nh" mom24_reg_rf)
     attachParameter(s  "s"  mom24_reg_rf)
     attachParameter(s  "sp" mom24_reg_rf)
     attachParameter(w  "w"  mom24_reg_rf)
     attachParameter(stm  "stm"  mom24_reg_rf)
     attachParameter(spm  "spm"  mom24_reg_rf)
     attachParameter(stm  "StartMn"  mom24_reg_rf)
     attachParameter(spm  "StopMn"  mom24_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom24_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom24_mx_reg mom4p1("PLUS1") mom4m1("MINUS1") mom4p2("PLUS2") mom4m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin4 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom24_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nh-1))) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 4 * nh/nh )

     attachParameter(nv "nv" mom24_mx_reg)
     attachParameter(nh "nh" mom24_mx_reg)
     attachParameter(s  "s"  mom24_mx_reg)
     attachParameter(s  "sp" mom24_mx_reg)
     attachParameter(w  "w"  mom24_mx_reg)
     attachParameter(mf  "mf"  mom24_mx_reg)
     attachParameter(stm  "stm"  mom24_mx_reg)
     attachParameter(spm  "spm"  mom24_mx_reg)
     attachParameter(stm  "StartMn"  mom24_mx_reg)
     attachParameter(spm  "StopMn"  mom24_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom24_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom25_reg metal5("PLUS") metal5("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom25_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     
     attachParameter(nv "nv" mom25_reg)
     attachParameter(nh "nh" mom25_reg)
     attachParameter(s  "s"  mom25_reg)
     attachParameter(s  "sp" mom25_reg)
     attachParameter(w  "w"  mom25_reg)
     attachParameter(stm  "stm"  mom25_reg)
     attachParameter(spm  "spm"  mom25_reg)
     attachParameter(stm  "StartMn"  mom25_reg)
     attachParameter(spm  "StopMn"  mom25_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom25_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom25_reg_rf metal5("PLUS") metal5("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom25_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     attachParameter(nv "nv" mom25_reg_rf)
     attachParameter(nh "nh" mom25_reg_rf)
     attachParameter(s  "s"  mom25_reg_rf)
     attachParameter(s  "sp" mom25_reg_rf)
     attachParameter(w  "w"  mom25_reg_rf)
     attachParameter(stm  "stm"  mom25_reg_rf)
     attachParameter(spm  "spm"  mom25_reg_rf)
     attachParameter(stm  "StartMn"  mom25_reg_rf)
     attachParameter(spm  "StopMn"  mom25_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom25_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom25_mx_reg mom5p1("PLUS1") mom5m1("MINUS1") mom5p2("PLUS2") mom5m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin5 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom25_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nh-1))) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     attachParameter(nv "nv" mom25_mx_reg)
     attachParameter(nh "nh" mom25_mx_reg)
     attachParameter(s  "s"  mom25_mx_reg)
     attachParameter(s  "sp" mom25_mx_reg)
     attachParameter(w  "w"  mom25_mx_reg)
     attachParameter(mf  "mf"  mom25_mx_reg)
     attachParameter(stm  "stm"  mom25_mx_reg)
     attachParameter(spm  "spm"  mom25_mx_reg)
     attachParameter(stm  "StartMn"  mom25_mx_reg)
     attachParameter(spm  "StopMn"  mom25_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom25_mx_reg "model" "crtmom_mx")
)

















    



    

extractDevice( "crtmom" mom26_reg metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom26_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     
     attachParameter(nv "nv" mom26_reg)
     attachParameter(nh "nh" mom26_reg)
     attachParameter(s  "s"  mom26_reg)
     attachParameter(s  "sp" mom26_reg)
     attachParameter(w  "w"  mom26_reg)
     attachParameter(stm  "stm"  mom26_reg)
     attachParameter(spm  "spm"  mom26_reg)
     attachParameter(stm  "StartMn"  mom26_reg)
     attachParameter(spm  "StopMn"  mom26_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom26_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom26_reg_rf metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom26_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom26_reg_rf)
     attachParameter(nh "nh" mom26_reg_rf)
     attachParameter(s  "s"  mom26_reg_rf)
     attachParameter(s  "sp" mom26_reg_rf)
     attachParameter(w  "w"  mom26_reg_rf)
     attachParameter(stm  "stm"  mom26_reg_rf)
     attachParameter(spm  "spm"  mom26_reg_rf)
     attachParameter(stm  "StartMn"  mom26_reg_rf)
     attachParameter(spm  "StopMn"  mom26_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom26_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom26_mx_reg mom6p1("PLUS1") mom6m1("MINUS1") mom6p2("PLUS2") mom6m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin6 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom26_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nh-1))) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom26_mx_reg)
     attachParameter(nh "nh" mom26_mx_reg)
     attachParameter(s  "s"  mom26_mx_reg)
     attachParameter(s  "sp" mom26_mx_reg)
     attachParameter(w  "w"  mom26_mx_reg)
     attachParameter(mf  "mf"  mom26_mx_reg)
     attachParameter(stm  "stm"  mom26_mx_reg)
     attachParameter(spm  "spm"  mom26_mx_reg)
     attachParameter(stm  "StartMn"  mom26_mx_reg)
     attachParameter(spm  "StopMn"  mom26_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom26_mx_reg "model" "crtmom_mx")
)


















    



    

extractDevice( "crtmom" mom27_reg metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom27_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     
     attachParameter(nv "nv" mom27_reg)
     attachParameter(nh "nh" mom27_reg)
     attachParameter(s  "s"  mom27_reg)
     attachParameter(s  "sp" mom27_reg)
     attachParameter(w  "w"  mom27_reg)
     attachParameter(stm  "stm"  mom27_reg)
     attachParameter(spm  "spm"  mom27_reg)
     attachParameter(stm  "StartMn"  mom27_reg)
     attachParameter(spm  "StopMn"  mom27_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom27_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom27_reg_rf metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
    w1 = measureParameter(length ( MOM_field2 coincident mom27_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom27_reg_rf)
     attachParameter(nh "nh" mom27_reg_rf)
     attachParameter(s  "s"  mom27_reg_rf)
     attachParameter(s  "sp" mom27_reg_rf)
     attachParameter(w  "w"  mom27_reg_rf)
     attachParameter(stm  "stm"  mom27_reg_rf)
     attachParameter(spm  "spm"  mom27_reg_rf)
     attachParameter(stm  "StartMn"  mom27_reg_rf)
     attachParameter(spm  "StopMn"  mom27_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom27_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom27_mx_reg mom7p1("PLUS1") mom7m1("MINUS1") mom7p2("PLUS2") mom7m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin7 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field2))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field2 coincident mom27_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nh-1))) * 1e-6 )
    stm = calculateParameter( 2 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom27_mx_reg)
     attachParameter(nh "nh" mom27_mx_reg)
     attachParameter(s  "s"  mom27_mx_reg)
     attachParameter(s  "sp" mom27_mx_reg)
     attachParameter(w  "w"  mom27_mx_reg)
     attachParameter(mf  "mf"  mom27_mx_reg)
     attachParameter(stm  "stm"  mom27_mx_reg)
     attachParameter(spm  "spm"  mom27_mx_reg)
     attachParameter(stm  "StartMn"  mom27_mx_reg)
     attachParameter(spm  "StopMn"  mom27_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom27_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom35_reg metal5("PLUS") metal5("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom35_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     
     attachParameter(nv "nv" mom35_reg)
     attachParameter(nh "nh" mom35_reg)
     attachParameter(s  "s"  mom35_reg)
     attachParameter(s  "sp" mom35_reg)
     attachParameter(w  "w"  mom35_reg)
     attachParameter(stm  "stm"  mom35_reg)
     attachParameter(spm  "spm"  mom35_reg)
     attachParameter(stm  "StartMn"  mom35_reg)
     attachParameter(spm  "StopMn"  mom35_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom35_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom35_reg_rf metal5("PLUS") metal5("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom35_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     attachParameter(nv "nv" mom35_reg_rf)
     attachParameter(nh "nh" mom35_reg_rf)
     attachParameter(s  "s"  mom35_reg_rf)
     attachParameter(s  "sp" mom35_reg_rf)
     attachParameter(w  "w"  mom35_reg_rf)
     attachParameter(stm  "stm"  mom35_reg_rf)
     attachParameter(spm  "spm"  mom35_reg_rf)
     attachParameter(stm  "StartMn"  mom35_reg_rf)
     attachParameter(spm  "StopMn"  mom35_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom35_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom35_mx_reg mom5p1("PLUS1") mom5m1("MINUS1") mom5p2("PLUS2") mom5m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin5 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field4))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field4 coincident mom35_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 5 * nh/nh )

     attachParameter(nv "nv" mom35_mx_reg)
     attachParameter(nh "nh" mom35_mx_reg)
     attachParameter(s  "s"  mom35_mx_reg)
     attachParameter(s  "sp" mom35_mx_reg)
     attachParameter(w  "w"  mom35_mx_reg)
     attachParameter(mf  "mf"  mom35_mx_reg)
     attachParameter(stm  "stm"  mom35_mx_reg)
     attachParameter(spm  "spm"  mom35_mx_reg)
     attachParameter(stm  "StartMn"  mom35_mx_reg)
     attachParameter(spm  "StopMn"  mom35_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom35_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom36_reg metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom36_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     
     attachParameter(nv "nv" mom36_reg)
     attachParameter(nh "nh" mom36_reg)
     attachParameter(s  "s"  mom36_reg)
     attachParameter(s  "sp" mom36_reg)
     attachParameter(w  "w"  mom36_reg)
     attachParameter(stm  "stm"  mom36_reg)
     attachParameter(spm  "spm"  mom36_reg)
     attachParameter(stm  "StartMn"  mom36_reg)
     attachParameter(spm  "StopMn"  mom36_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom36_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom36_reg_rf metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom36_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom36_reg_rf)
     attachParameter(nh "nh" mom36_reg_rf)
     attachParameter(s  "s"  mom36_reg_rf)
     attachParameter(s  "sp" mom36_reg_rf)
     attachParameter(w  "w"  mom36_reg_rf)
     attachParameter(stm  "stm"  mom36_reg_rf)
     attachParameter(spm  "spm"  mom36_reg_rf)
     attachParameter(stm  "StartMn"  mom36_reg_rf)
     attachParameter(spm  "StopMn"  mom36_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom36_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom36_mx_reg mom6p1("PLUS1") mom6m1("MINUS1") mom6p2("PLUS2") mom6m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin6 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field4))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field4 coincident mom36_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom36_mx_reg)
     attachParameter(nh "nh" mom36_mx_reg)
     attachParameter(s  "s"  mom36_mx_reg)
     attachParameter(s  "sp" mom36_mx_reg)
     attachParameter(w  "w"  mom36_mx_reg)
     attachParameter(mf  "mf"  mom36_mx_reg)
     attachParameter(stm  "stm"  mom36_mx_reg)
     attachParameter(spm  "spm"  mom36_mx_reg)
     attachParameter(stm  "StartMn"  mom36_mx_reg)
     attachParameter(spm  "StopMn"  mom36_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom36_mx_reg "model" "crtmom_mx")
)

















    



    

extractDevice( "crtmom" mom37_reg metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom37_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     
     attachParameter(nv "nv" mom37_reg)
     attachParameter(nh "nh" mom37_reg)
     attachParameter(s  "s"  mom37_reg)
     attachParameter(s  "sp" mom37_reg)
     attachParameter(w  "w"  mom37_reg)
     attachParameter(stm  "stm"  mom37_reg)
     attachParameter(spm  "spm"  mom37_reg)
     attachParameter(stm  "StartMn"  mom37_reg)
     attachParameter(spm  "StopMn"  mom37_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom37_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom37_reg_rf metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom37_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom37_reg_rf)
     attachParameter(nh "nh" mom37_reg_rf)
     attachParameter(s  "s"  mom37_reg_rf)
     attachParameter(s  "sp" mom37_reg_rf)
     attachParameter(w  "w"  mom37_reg_rf)
     attachParameter(stm  "stm"  mom37_reg_rf)
     attachParameter(spm  "spm"  mom37_reg_rf)
     attachParameter(stm  "StartMn"  mom37_reg_rf)
     attachParameter(spm  "StopMn"  mom37_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom37_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom37_mx_reg mom7p1("PLUS1") mom7m1("MINUS1") mom7p2("PLUS2") mom7m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin7 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field4))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field4 coincident mom37_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 3 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom37_mx_reg)
     attachParameter(nh "nh" mom37_mx_reg)
     attachParameter(s  "s"  mom37_mx_reg)
     attachParameter(s  "sp" mom37_mx_reg)
     attachParameter(w  "w"  mom37_mx_reg)
     attachParameter(mf  "mf"  mom37_mx_reg)
     attachParameter(stm  "stm"  mom37_mx_reg)
     attachParameter(spm  "spm"  mom37_mx_reg)
     attachParameter(stm  "StartMn"  mom37_mx_reg)
     attachParameter(spm  "StopMn"  mom37_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom37_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom46_reg metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY5 enclosing MOM_field5))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom46_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg4 butting MOM_field4 ))
    s2 = measureParameter(perimeter (F_reg4))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 4 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     
     attachParameter(nv "nv" mom46_reg)
     attachParameter(nh "nh" mom46_reg)
     attachParameter(s  "s"  mom46_reg)
     attachParameter(s  "sp" mom46_reg)
     attachParameter(w  "w"  mom46_reg)
     attachParameter(stm  "stm"  mom46_reg)
     attachParameter(spm  "spm"  mom46_reg)
     attachParameter(stm  "StartMn"  mom46_reg)
     attachParameter(spm  "StopMn"  mom46_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom46_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom46_reg_rf metal6("PLUS") metal6("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY5 enclosing MOM_field5))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom46_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg4 butting MOM_field4 ))
    s2 = measureParameter(perimeter (F_reg4))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 4 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom46_reg_rf)
     attachParameter(nh "nh" mom46_reg_rf)
     attachParameter(s  "s"  mom46_reg_rf)
     attachParameter(s  "sp" mom46_reg_rf)
     attachParameter(w  "w"  mom46_reg_rf)
     attachParameter(stm  "stm"  mom46_reg_rf)
     attachParameter(spm  "spm"  mom46_reg_rf)
     attachParameter(stm  "StartMn"  mom46_reg_rf)
     attachParameter(spm  "StopMn"  mom46_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom46_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom46_mx_reg mom6p1("PLUS1") mom6m1("MINUS1") mom6p2("PLUS2") mom6m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin6 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field5))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field4))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field4 coincident mom46_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg4 butting MOM_field4 ))
    s2 = measureParameter(perimeter (F_reg4))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nh-1))) * 1e-6 )
    stm = calculateParameter( 4 * nv/nv )
    spm = calculateParameter( 6 * nh/nh )

     attachParameter(nv "nv" mom46_mx_reg)
     attachParameter(nh "nh" mom46_mx_reg)
     attachParameter(s  "s"  mom46_mx_reg)
     attachParameter(s  "sp" mom46_mx_reg)
     attachParameter(w  "w"  mom46_mx_reg)
     attachParameter(mf  "mf"  mom46_mx_reg)
     attachParameter(stm  "stm"  mom46_mx_reg)
     attachParameter(spm  "spm"  mom46_mx_reg)
     attachParameter(stm  "StartMn"  mom46_mx_reg)
     attachParameter(spm  "StopMn"  mom46_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom46_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom47_reg metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY5 enclosing MOM_field5))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom47_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg4 butting MOM_field4 ))
    s2 = measureParameter(perimeter (F_reg4))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 4 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     
     attachParameter(nv "nv" mom47_reg)
     attachParameter(nh "nh" mom47_reg)
     attachParameter(s  "s"  mom47_reg)
     attachParameter(s  "sp" mom47_reg)
     attachParameter(w  "w"  mom47_reg)
     attachParameter(stm  "stm"  mom47_reg)
     attachParameter(spm  "spm"  mom47_reg)
     attachParameter(stm  "StartMn"  mom47_reg)
     attachParameter(spm  "StopMn"  mom47_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom47_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom47_reg_rf metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY5 enclosing MOM_field5))
    nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
    w1 = measureParameter(length ( MOM_field4 coincident mom47_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg4 butting MOM_field4 ))
    s2 = measureParameter(perimeter (F_reg4))
    s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
    stm = calculateParameter( 4 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom47_reg_rf)
     attachParameter(nh "nh" mom47_reg_rf)
     attachParameter(s  "s"  mom47_reg_rf)
     attachParameter(s  "sp" mom47_reg_rf)
     attachParameter(w  "w"  mom47_reg_rf)
     attachParameter(stm  "stm"  mom47_reg_rf)
     attachParameter(spm  "spm"  mom47_reg_rf)
     attachParameter(stm  "StartMn"  mom47_reg_rf)
     attachParameter(spm  "StopMn"  mom47_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom47_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom47_mx_reg mom7p1("PLUS1") mom7m1("MINUS1") mom7p2("PLUS2") mom7m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin7 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field5))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field4))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field4 coincident mom47_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg4 butting MOM_field4 ))
    s2 = measureParameter(perimeter (F_reg4))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nh-1))) * 1e-6 )
    stm = calculateParameter( 4 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom47_mx_reg)
     attachParameter(nh "nh" mom47_mx_reg)
     attachParameter(s  "s"  mom47_mx_reg)
     attachParameter(s  "sp" mom47_mx_reg)
     attachParameter(w  "w"  mom47_mx_reg)
     attachParameter(mf  "mf"  mom47_mx_reg)
     attachParameter(stm  "stm"  mom47_mx_reg)
     attachParameter(spm  "spm"  mom47_mx_reg)
     attachParameter(stm  "StartMn"  mom47_mx_reg)
     attachParameter(spm  "StopMn"  mom47_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom47_mx_reg "model" "crtmom_mx")
)
















    



    

extractDevice( "crtmom" mom57_reg metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom" )
   cellView("crtmom ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY5 enclosing MOM_field5))
    nh = measureParameter(figCount ( MOMDMY6 enclosing MOM_field6))
    w1 = measureParameter(length ( MOM_field6 coincident mom57_reg) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg5 butting MOM_field5 ))
    s2 = measureParameter(perimeter (F_reg5))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 5 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     
     attachParameter(nv "nv" mom57_reg)
     attachParameter(nh "nh" mom57_reg)
     attachParameter(s  "s"  mom57_reg)
     attachParameter(s  "sp" mom57_reg)
     attachParameter(w  "w"  mom57_reg)
     attachParameter(stm  "stm"  mom57_reg)
     attachParameter(spm  "spm"  mom57_reg)
     attachParameter(stm  "StartMn"  mom57_reg)
     attachParameter(spm  "StopMn"  mom57_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom57_reg "model" "crtmom")
)

extractDevice( "crtmom_rf" mom57_reg_rf metal7("PLUS") metal7("MINUS") poly2("BULK") 
   spiceModel( "crtmom_rf" )
   cellView("crtmom_rf ivpcell")
   flagMalformed
)
    nv = measureParameter(figCount ( MOMDMY5 enclosing MOM_field5))
    nh = measureParameter(figCount ( MOMDMY6 enclosing MOM_field6))
    w1 = measureParameter(length ( MOM_field6 coincident mom57_reg_rf) 1e-6)	
    w  = calculateParameter(w1/nh)
    s1 = measureParameter(length (F_reg5 butting MOM_field5 ))
    s2 = measureParameter(perimeter (F_reg5))
    s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
    stm = calculateParameter( 5 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom57_reg_rf)
     attachParameter(nh "nh" mom57_reg_rf)
     attachParameter(s  "s"  mom57_reg_rf)
     attachParameter(s  "sp" mom57_reg_rf)
     attachParameter(w  "w"  mom57_reg_rf)
     attachParameter(stm  "stm"  mom57_reg_rf)
     attachParameter(spm  "spm"  mom57_reg_rf)
     attachParameter(stm  "StartMn"  mom57_reg_rf)
     attachParameter(spm  "StopMn"  mom57_reg_rf)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom57_reg_rf "model" "crtmom_rf")
)

extractDevice( "crtmom_mx" mom57_mx_reg mom7p1("PLUS1") mom7m1("MINUS1") mom7p2("PLUS2") mom7m2("MINUS2") poly2("BULK") 
   spiceModel( "crtmom_mx" )
   cellView("crtmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin7 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nv1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field5))
    nv  = calculateParameter(nv1/mf1)
    nh1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field6))
    nh  = calculateParameter(nh1/mf1)
    w1 = measureParameter(length ( MOM_field6 coincident mom57_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nh*mf1))
    s1 = measureParameter(length (F_reg5 butting MOM_field5 ))
    s2 = measureParameter(perimeter (F_reg5))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nv-1))) * 1e-6 )
    stm = calculateParameter( 5 * nv/nv )
    spm = calculateParameter( 7 * nh/nh )

     attachParameter(nv "nv" mom57_mx_reg)
     attachParameter(nh "nh" mom57_mx_reg)
     attachParameter(s  "s"  mom57_mx_reg)
     attachParameter(s  "sp" mom57_mx_reg)
     attachParameter(w  "w"  mom57_mx_reg)
     attachParameter(mf  "mf"  mom57_mx_reg)
     attachParameter(stm  "stm"  mom57_mx_reg)
     attachParameter(spm  "spm"  mom57_mx_reg)
     attachParameter(stm  "StartMn"  mom57_mx_reg)
     attachParameter(spm  "StopMn"  mom57_mx_reg)
if( !avSwitch( "spice_extraction") then
	     saveProperty(mom57_mx_reg "model" "crtmom_mx")
)








extractDevice("pmos_rf_mlvt" pgate_pthin_mlv d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_mlvt")
   cellView( "pmos_rf_mlvt ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_mlv enclosing pgate_rfmlv))
   WD = measureParameter(length (pgate_rfmlv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfmlv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_mlv)
   attachParameter(lr "lr" pgate_pthin_mlv)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_mlv "model" "pmos_rf_mlvt")
)

extractDevice( "rnpolywo_m" rnpolywo_d poly("PLUS" "MINUS") poly_term("BULK") physical
      spiceModel( "rnpolywo_m" )
      cellView( "rnpolywo_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rnpolywo_d) 1e-12)
   wr  = measureParameter( length ( rnpolywo_d butting poly ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rnpolywo_d)
   attachParameter( wr "w" rnpolywo_d)
   attachParameter( wr "wr" rnpolywo_d)
   attachParameter( lr "lr" rnpolywo_d)
   attachParameter( wr "wSim" rnpolywo_d)
   attachParameter( lr "lSim" rnpolywo_d)
   attachParameter( wr "sumW" rnpolywo_d)
   attachParameter( lr "sumL" rnpolywo_d)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnpolywo_d "model" "rnpolywo_m")
)

extractDevice("nmos_rf_33" ngate_nthin_33 d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_33")
   cellView( "nmos_rf_33 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_33 enclosing ngate_rf_33))
   WD = measureParameter(length (ngate_rf_33 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_33 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_33)
   attachParameter(lr "lr" ngate_nthin_33)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_33 "model" "nmos_rf_33")
)

extractDevice( "rnpolys_m" rnpolys_d poly("PLUS" "MINUS") poly_term("BULK") physical
      spiceModel( "rnpolys_m" )
      cellView( "rnpoly_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rnpolys_d) 1e-12)
   wr  = measureParameter( length ( rnpolys_d butting poly ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rnpolys_d)
   attachParameter( wr "w" rnpolys_d)
   attachParameter( wr "wr" rnpolys_d)
   attachParameter( lr "lr" rnpolys_d)
   attachParameter( wr "wSim" rnpolys_d)
   attachParameter( lr "lSim" rnpolys_d)
   attachParameter( wr "sumW" rnpolys_d)
   attachParameter( lr "sumL" rnpolys_d)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnpolys_d "model" "rnpolys_m")
)

extractDevice("pmos_rf_25ud" pgate_pthin_25ud d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_18")
   cellView( "pmos_rf_25ud18 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25ud enclosing pgate_rf_25ud))
   WD = measureParameter(length (pgate_rf_25ud butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25ud butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25ud) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25ud)
   attachParameter(lr "lr" pgate_pthin_25ud)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25ud "model" "pmos_rf_18")
)

extractDevice( "rpodwo_m" rpodwo_mr tpdiff("PLUS" "MINUS") nxwell("BULK") physical
      spiceModel( "rpodwo_m" )
      cellView( "rpodwo_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rpodwo_mr) 1e-12)
   wr  = measureParameter( length ( rpodwo_mr butting tpdiff ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rpodwo_mr)
   attachParameter( wr "w" rpodwo_mr)
   attachParameter( wr "wr" rpodwo_mr)
   attachParameter( lr "lr" rpodwo_mr)
   attachParameter( wr "wSim" rpodwo_mr)
   attachParameter( lr "lSim" rpodwo_mr)
   attachParameter( wr "sumW" rpodwo_mr)
   attachParameter( lr "sumL" rpodwo_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rpodwo_mr "model" "rpodwo_m")
)

extractDevice("mimcap_um_sin_rf" RCTM_RF1P0 ctm("PLUS") cbm("MINUS") shield("BULK")
   spiceModel("mimcap_um_sin_rf")
   cellView( "mimcap_um_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF1P0 butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF1P0) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 1 * lt / lt ) 
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( mimflag "mimflag" RCTM_RF1P0 )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF1P0 "model" "mimcap_um_sin_rf")
)
extractDevice("mimcap_um_sin_rf" RCTM_RF1P5 ctm("PLUS") cbm("MINUS") shield("BULK")
   spiceModel("mimcap_um_sin_rf")
   cellView( "mimcap_um_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF1P5 butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF1P5) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 2 * lt / lt ) 
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( mimflag "mimflag" RCTM_RF1P5 )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF1P5 "model" "mimcap_um_sin_rf")
)
extractDevice("mimcap_um_sin_rf" RCTM_RF2P0 ctm("PLUS") cbm("MINUS") shield("BULK")
   spiceModel("mimcap_um_sin_rf")
   cellView( "mimcap_um_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF2P0 butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF2P0) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 3 * lt / lt ) 
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( mimflag "mimflag" RCTM_RF2P0 )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF2P0 "model" "mimcap_um_sin_rf")
)
extractDevice("mimcap_um_sin_rf" RCTM_RF1P0UD ctm("PLUS") cbm("MINUS") shieldud("BULK")
   spiceModel("mimcap_um_sin_rf")
   cellView( "mimcap_um_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF1P0UD butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF1P0UD) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 1 * lt / lt ) 
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( mimflag "mimflag" RCTM_RF1P0UD )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF1P0UD "model" "mimcap_um_sin_rf")
)
extractDevice("mimcap_um_sin_rf" RCTM_RF1P5UD ctm("PLUS") cbm("MINUS") shieldud("BULK")
   spiceModel("mimcap_um_sin_rf")
   cellView( "mimcap_um_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF1P5UD butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF1P5UD) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 2 * lt / lt ) 
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( mimflag "mimflag" RCTM_RF1P5UD )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF1P5UD "model" "mimcap_um_sin_rf")
)
extractDevice("mimcap_um_sin_rf" RCTM_RF2P0UD ctm("PLUS") cbm("MINUS") shieldud("BULK")
   spiceModel("mimcap_um_sin_rf")
   cellView( "mimcap_um_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF2P0UD butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF2P0UD) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 3 * lt / lt ) 
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( mimflag "mimflag" RCTM_RF2P0UD )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF2P0UD "model" "mimcap_um_sin_rf")
)

extractDevice("pmos_rf_hvt_nw" pgate_pthin_hvnw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_hvt_nw")
   cellView( "pmos_rf_hvt_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_hvnw enclosing pgate_rfhv))
   WD = measureParameter(length (pgate_rfhv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfhv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_hvnw)
   attachParameter(lr "lr" pgate_pthin_hvnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_hvnw "model" "pmos_rf_hvt_nw")
)

extractDevice("rnwsti" nwsti_r nxwell("PLUS" "MINUS") physical
   spiceModel("rnwsti")
   cellView( "rnwsti ivpcell" )
   flagMalformed)

   A  = measureParameter(area (nwsti_r) 1e-12) 
   w  = measureParameter(length (nwsti_r butting nxwell) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" nwsti_r)
   attachParameter( l "l" nwsti_r)
   attachParameter( w "wSim" nwsti_r)
   attachParameter( l "lSim" nwsti_r)
   attachParameter( w "sumW" nwsti_r)
   attachParameter( l "sumL" nwsti_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( nwsti_r "model" "rnwsti")
)

extractDevice("pmos_rf_lvt_nw" pgate_pthin_lvnw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_lvt_nw")
   cellView( "pmos_rf_lvt_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_lvnw enclosing pgate_rflv))
   WD = measureParameter(length (pgate_rflv butting d_tpdiff))
   WS = measureParameter(length (pgate_rflv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_lvnw)
   attachParameter(lr "lr" pgate_pthin_lvnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_lvnw "model" "pmos_rf_lvt_nw")
)

extractDevice("pmos_rf_33_nw_5t" pgate_pthin_33nw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_33_nw_5t")
   cellView( "pmos_rf_33_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_33nw_5t enclosing pgate_rf_33))
   WD = measureParameter(length (pgate_rf_33 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_33 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_33nw_5t)
   attachParameter(lr "lr" pgate_pthin_33nw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_33nw_5t "model" "pmos_rf_33_nw_5t")
)

extractDevice("moscap_rf_nw" var_nw3_rf_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf_nw")
   cellView("moscap_rf_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw3_rf_nw enclosing vargt_rf))
   gr    = measureParameter(figCount (var_nw3_rf_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw3_rf_nw)
   attachParameter(lr "lr" var_nw3_rf_nw)
   attachParameter(br "br" var_nw3_rf_nw)
   attachParameter(gr "gr" var_nw3_rf_nw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw3_rf_nw "model" "moscap_rf_nw")
)

extractDevice("moscap_rf18_nw" var_nw_rf18_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf18_nw")
   cellView("moscap_rf18_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw_rf18_nw enclosing vargt_rf18))
   gr    = measureParameter(figCount (var_nw_rf18_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf18 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf18) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw_rf18_nw)
   attachParameter(lr "lr" var_nw_rf18_nw)
   attachParameter(br "br" var_nw_rf18_nw)
   attachParameter(gr "gr" var_nw_rf18_nw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw_rf18_nw "model" "moscap_rf18_nw")
)

extractDevice( "spiral_sym_ct_mu_z" ct_ind indm9p("PLUS") indm9m("MINUS") psub("BULK") indm9c("CTAP")
   spiceModel("spiral_sym_ct_mu_z")
   cellView("spiral_sym_ct_mu_z ivpcell")
   flagMalformed
)  
   nnr1 = measureParameter(perimeter (IND_NR) ) 
   nnr = calculateParameter( ( nnr1 - 0.005*2 ) / 2 )
   nr =  calculateParameter( ( nnr / 0.01 ) * 0.25 ) 
   lay = calculateParameter(9 * nr/nr)
   rad1 = measureParameter(perimeter (IND_RAD))
   rad  = calculateParameter((rad1-0.5*2) * 0.5e-6)
   gdis1 = measureParameter(perimeter (IND_GDIS))
   gdis  = calculateParameter((gdis1-0.5*2) * 0.5e-6)
   nw   = measureParameter(figCount (ct_inda enclosing ct_w))
   w1   = measureParameter(length (ct_w inside ct_inda))
   w    = calculateParameter(w1/(nw*2)*1e-6)
   s1   = measureParameter( perimeter (IND_S) )
   spacing    = calculateParameter( ( s1 - 0.5*2 ) * 0.5e-6 )
   attachParameter(w "w" ct_ind)
   attachParameter(lay "lay" ct_ind)
   attachParameter(rad "rad" ct_ind)
   attachParameter(nr "nr" ct_ind)
   attachParameter(gdis "gdis" ct_ind)
   attachParameter(spacing "spacing" ct_ind)
if( !avSwitch( "spice_extraction") then
	   saveProperty(ct_ind "model" "spiral_sym_ct_mu_z")
)



    







; == geomconnect ==


extractDevice("rm5" mt5res metal5("PLUS") metal5("MINUS") physical
   spiceModel("rmxw")
   cellView( "rm5 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt5res) 1e-12) 
   w  = measureParameter(length (mt5res butting metal5) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt5res "model" "rmxw")
)

extractDevice("rnpolys" rnpolys_r poly("PLUS" "MINUS") physical
   spiceModel("rnpolys")
   cellView( "rnpoly ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rnpolys_r) 1e-12) 
   w  = measureParameter(length (rnpolys_r butting poly) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rnpolys_r)
   attachParameter( l "l" rnpolys_r)
   attachParameter( w "wSim" rnpolys_r)
   attachParameter( l "lSim" rnpolys_r)
   attachParameter( w "sumW" rnpolys_r)
   attachParameter( l "sumL" rnpolys_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rnpolys_r "model" "rnpolys")
)

extractDevice("pmos_rf_25od" pgate_pthin_25od d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_33")
   cellView( "pmos_rf_25od33 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25od enclosing pgate_rf_25od))
   WD = measureParameter(length (pgate_rf_25od butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25od butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25od)
   attachParameter(lr "lr" pgate_pthin_25od)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25od "model" "pmos_rf_33")
)

extractDevice("rpodwo" rpodwo_r tpdiff("PLUS" "MINUS") physical
   spiceModel("rpodwo")
   cellView( "rpodwo ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rpodwo_r) 1e-12) 
   w  = measureParameter(length (rpodwo_r butting tpdiff) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rpodwo_r)
   attachParameter( l "l" rpodwo_r)
   attachParameter( w "wSim" rpodwo_r)
   attachParameter( l "lSim" rpodwo_r)
   attachParameter( w "sumW" rpodwo_r)
   attachParameter( l "sumL" rpodwo_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rpodwo_r "model" "rpodwo")
)

extractDevice( "rnwsti_m" nwsti_mr nxwell("PLUS" "MINUS") psub("BULK") physical
      spiceModel( "rnwsti_m" )
      cellView( "rnwsti_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (nwsti_mr) 1e-12)
   wr  = measureParameter( length ( nwsti_mr butting nxwell ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" nwsti_mr)
   attachParameter( wr "w" nwsti_mr)
   attachParameter( wr "wr" nwsti_mr)
   attachParameter( lr "lr" nwsti_mr)
   attachParameter( wr "wSim" nwsti_mr)
   attachParameter( lr "lSim" nwsti_mr)
   attachParameter( wr "sumW" nwsti_mr)
   attachParameter( lr "sumL" nwsti_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( nwsti_mr "model" "rnwsti_m")
)

extractDevice("pmos_rf_25_nw" pgate_pthin_25nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_25_nw")
   cellView( "pmos_rf_25_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25nw enclosing pgate_rf_25))
   WD = measureParameter(length (pgate_rf_25 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25nw)
   attachParameter(lr "lr" pgate_pthin_25nw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25nw "model" "pmos_rf_25_nw")
)

extractDevice("pmos_rf_lvt_5t" pgate_pthin_lv_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_lvt_5t")
   cellView( "pmos_rf_lvt_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_lv_5t enclosing pgate_rflv))
   WD = measureParameter(length (pgate_rflv butting d_tpdiff))
   WS = measureParameter(length (pgate_rflv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_lv_5t)
   attachParameter(lr "lr" pgate_pthin_lv_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_lv_5t "model" "pmos_rf_lvt_5t")
)

extractDevice("rm7" mt7res metal7("PLUS") metal7("MINUS") physical
   spiceModel("rmxw")
   cellView( "rm7 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt7res) 1e-12) 
   w  = measureParameter(length (mt7res butting metal7) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt7res "model" "rmxw")
)

extractDevice("probe5" PROBEM5 metal5("TOP") PROBEM5_T("BULK")
   spiceModel("probe5")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM5) 1e-6)
   a = measureParameter(area (PROBEM5) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM5 "model" "probe5")
)

extractDevice( "rppolyl_m" rppolyl_d poly("PLUS" "MINUS") poly_term("BULK") physical
      spiceModel( "rppolyl_m" )
      cellView( "rppoly_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rppolyl_d) 1e-12)
   wr  = measureParameter( length ( rppolyl_d butting poly ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rppolyl_d)
   attachParameter( wr "w" rppolyl_d)
   attachParameter( wr "wr" rppolyl_d)
   attachParameter( lr "lr" rppolyl_d)
   attachParameter( wr "wSim" rppolyl_d)
   attachParameter( lr "lSim" rppolyl_d)
   attachParameter( wr "sumW" rppolyl_d)
   attachParameter( lr "sumL" rppolyl_d)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolyl_d "model" "rppolyl_m")
)

extractDevice( "rppolywo_m" rppolywo_d poly("PLUS" "MINUS") poly_term("BULK") physical
      spiceModel( "rppolywo_m" )
      cellView( "rppolywo_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (rppolywo_d) 1e-12)
   wr  = measureParameter( length ( rppolywo_d butting poly ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" rppolywo_d)
   attachParameter( wr "w" rppolywo_d)
   attachParameter( wr "wr" rppolywo_d)
   attachParameter( lr "lr" rppolywo_d)
   attachParameter( wr "wSim" rppolywo_d)
   attachParameter( lr "lSim" rppolywo_d)
   attachParameter( wr "sumW" rppolywo_d)
   attachParameter( lr "sumL" rppolywo_d)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolywo_d "model" "rppolywo_m")
)

extractDevice("moscap_rf25_nw" var_nw_rf25_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf25_nw")
   cellView("moscap_rf25_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw_rf25_nw enclosing vargt_rf25))
   gr    = measureParameter(figCount (var_nw_rf25_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf25 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf25) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw_rf25_nw)
   attachParameter(lr "lr" var_nw_rf25_nw)
   attachParameter(br "br" var_nw_rf25_nw)
   attachParameter(gr "gr" var_nw_rf25_nw)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw_rf25_nw "model" "moscap_rf25_nw")
)

extractDevice("nmos_rf_hvt" ngate_nthin_hv d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_hvt")
   cellView( "nmos_rf_hvt ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_hv enclosing ngate_rfhv))
   WD = measureParameter(length (ngate_rfhv butting d_tndiff))
   WS = measureParameter(length (ngate_rfhv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_hv)
   attachParameter(lr "lr" ngate_nthin_hv)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_hv "model" "nmos_rf_hvt")
)

extractDevice("pmos_rf_lvt" pgate_pthin_lv d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_lvt")
   cellView( "pmos_rf_lvt ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_lv enclosing pgate_rflv))
   WD = measureParameter(length (pgate_rflv butting d_tpdiff))
   WS = measureParameter(length (pgate_rflv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_lv)
   attachParameter(lr "lr" pgate_pthin_lv)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_lv "model" "pmos_rf_lvt")
)

extractDevice("pmos_rf_33_nw" pgate_pthin_33nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_33_nw")
   cellView( "pmos_rf_33_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_33nw enclosing pgate_rf_33))
   WD = measureParameter(length (pgate_rf_33 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_33 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_33nw)
   attachParameter(lr "lr" pgate_pthin_33nw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_33nw "model" "pmos_rf_33_nw")
)

extractDevice("nmos_rf_25od33_6t" ngate_nthin_25od_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_33_6t")
   cellView( "nmos_rf_25od33_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25od_6t enclosing ngate_rf_25od))
   WD = measureParameter(length (ngate_rf_25od butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25od butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25od_6t)
   attachParameter(lr "lr" ngate_nthin_25od_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25od_6t "model" "nmos_rf_33_6t")
)

extractDevice("pmos_rf_25od33_nw_5t" pgate_pthin_25nwod_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_33_nw_5t")
   cellView( "pmos_rf_25od33_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25nwod_5t enclosing pgate_rf_25od))
   WD = measureParameter(length (pgate_rf_25od butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25od butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25nwod_5t)
   attachParameter(lr "lr" pgate_pthin_25nwod_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25nwod_5t "model" "pmos_rf_33_nw_5t")
)

;; Define RFPAD






extractDevice("rppolyl" rppolyl_r poly("PLUS" "MINUS") physical
   spiceModel("rppolyl")
   cellView( "rppoly ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rppolyl_r) 1e-12) 
   w  = measureParameter(length (rppolyl_r butting poly) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rppolyl_r)
   attachParameter( l "l" rppolyl_r)
   attachParameter( w "wSim" rppolyl_r)
   attachParameter( l "lSim" rppolyl_r)
   attachParameter( w "sumW" rppolyl_r)
   attachParameter( l "sumL" rppolyl_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rppolyl_r "model" "rppolyl")
)

extractDevice("lincap_25" lin_nw_25 poly("PLUS") tndiff("MINUS")
   spiceModel("lincap_25")
   cellView("lincap_25 ivpcell")
   flagMalformed
)
   mr1  = measureParameter(figCount (lin_nw_25 enclosing lingt_25))
   gr    = measureParameter(figCount (lin_nw_25 enclosing nthin))
   mr    = calculateParameter(mr1/gr)
   wr1 = measureParameter(length (lingt_25 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/mr1)
   a1  = measureParameter(area (lingt_25) 1e-12)
   lr  = calculateParameter(a1/(wr*mr1))
   attachParameter(wr "wr" lin_nw_25)
   attachParameter(lr "lr" lin_nw_25)
   attachParameter(mr "mr" lin_nw_25)
   attachParameter(gr "gr" lin_nw_25)
if( !avSwitch( "spice_extraction") then
	   saveProperty(lin_nw_25 "model" "lincap_25")
)

;;

extractDevice("nmoscap_lpg" vargtlpg poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap_lpg")
   cellView( "nmoscap_lpg ivpcell" )
   flagMalformed)

   A    = measureParameter(area (vargtlpg) 1e-12)
   lr   = measureParameter(length (vargtlpg coincident nthin) 0.5e-6)
   wr   =  calculateParameter( A/lr )
   attachParameter(lr "lr" vargtlpg)
   attachParameter(wr "wr" vargtlpg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(vargtlpg "model" "nmoscap_lpg")
)

extractDevice("pmos_rf_hvt" pgate_pthin_hv d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_hvt")
   cellView( "pmos_rf_hvt ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_hv enclosing pgate_rfhv))
   WD = measureParameter(length (pgate_rfhv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfhv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfhv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_hv)
   attachParameter(lr "lr" pgate_pthin_hv)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_hv "model" "pmos_rf_hvt")
)

if( avSwitch( "extract_dnwdio") then 
extractDIODE("pwdnw" rwdio psub("PLUS") DNW("MINUS")
   spiceModel("pwdnw")
   cellView( "pwdnw ivpcell" )
   flagMalformed
)
   area_DIO = measureParameter(area (rwdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (rwdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(rwdio "model" "pwdnw")
)

extractDIODE("dnwpsub" dnwdio psub_term("PLUS") DNW("MINUS")
   spiceModel("dnwpsub")
   cellView( "dnwpsub ivpcell" )
   flagMalformed
)
   area_DIO = measureParameter(area (DNW) 1e-12) 
   pj_DIO   = measureParameter(perimeter (DNW) 1e-6) 
   attachParameter( area_DIO "area" dnwdio ) 
   attachParameter( pj_DIO "pj" dnwdio ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(dnwdio "model" "dnwpsub")
)
)   

extractDevice("moscap_rf33" var_nw_rf33 poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf33")
   cellView("moscap_rf33 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw_rf33 enclosing vargt_rf33))
   gr    = measureParameter(figCount (var_nw_rf33 enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf33 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf33) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw_rf33)
   attachParameter(lr "lr" var_nw_rf33)
   attachParameter(br "br" var_nw_rf33)
   attachParameter(gr "gr" var_nw_rf33)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw_rf33 "model" "moscap_rf33")
)

extractDevice( "rnwod_m" nwod_mr nxwell("PLUS" "MINUS") psub("BULK") physical
      spiceModel( "rnwod_m" )
      cellView( "rnwod_m ivpcell" )
      flagMalformed) 

   A  = measureParameter( area (nwod_mr) 1e-12)
   wr  = measureParameter( length ( nwod_mr butting nxwell ) 0.5e-6)
   lr  = calculateParameter( A/wr )

   attachParameter( lr "l" nwod_mr)
   attachParameter( wr "w" nwod_mr)
   attachParameter( wr "wr" nwod_mr)
   attachParameter( lr "lr" nwod_mr)
   attachParameter( wr "wSim" nwod_mr)
   attachParameter( lr "lSim" nwod_mr)
   attachParameter( wr "sumW" nwod_mr)
   attachParameter( lr "sumL" nwod_mr)
if( !avSwitch( "spice_extraction") then
	   saveProperty( nwod_mr "model" "rnwod_m")
)

extractDevice("rpodl" rpodl_r tpdiff("PLUS" "MINUS") physical
   spiceModel("rpodl")
   cellView( "rpod ivpcell" )
   flagMalformed)

   A  = measureParameter(area (rpodl_r) 1e-12) 
   w  = measureParameter(length (rpodl_r butting tpdiff) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" rpodl_r)
   attachParameter( l "l" rpodl_r)
   attachParameter( w "wSim" rpodl_r)
   attachParameter( l "lSim" rpodl_r)
   attachParameter( w "sumW" rpodl_r)
   attachParameter( l "sumL" rpodl_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( rpodl_r "model" "rpodl")
)

geomStamp( RF_MIM_TERM psub by rfmim_psub_via multStamp )
geomStamp( RF_MIM_TERM nxwell by rfmim_nw_via )
extractDevice("mimcap_woum_sin_rf" RCTM_RF1P0_woum ctm("PLUS") cbm("MINUS") RF_MIM_TERM("BULK")
   spiceModel("mimcap_woum_sin_rf")
   cellView( "mimcap_woum_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF1P0_woum butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF1P0_woum) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 1 * lt / lt ) 
   lay = calculateParameter( 7 * lt / lt )
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( lay "lay" RCTM_RF1P0_woum )
   attachParameter( mimflag "mimflag" RCTM_RF1P0_woum )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF1P0_woum "model" "mimcap_woum_sin_rf")
)
extractDevice("mimcap_woum_sin_rf" RCTM_RF1P5_woum ctm("PLUS") cbm("MINUS") RF_MIM_TERM("BULK")
   spiceModel("mimcap_woum_sin_rf")
   cellView( "mimcap_woum_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF1P5_woum butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF1P5_woum) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 2 * lt / lt ) 
   lay = calculateParameter( 7 * lt / lt )
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( lay "lay" RCTM_RF1P5_woum )
   attachParameter( mimflag "mimflag" RCTM_RF1P5_woum )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF1P5_woum "model" "mimcap_woum_sin_rf")
)
extractDevice("mimcap_woum_sin_rf" RCTM_RF2P0_woum ctm("PLUS") cbm("MINUS") RF_MIM_TERM("BULK")
   spiceModel("mimcap_woum_sin_rf")
   cellView( "mimcap_woum_rf ivpcell " )
   flagMalformed
)
   lt = measureParameter(length (RCTM_RF2P0_woum butting L_EG_RG) 0.5e-6)
   a1  = measureParameter(area (RCTM_RF2P0_woum) 1e-12)
   wt  = calculateParameter(a1/lt)
   mimflag = calculateParameter( 3 * lt / lt ) 
   lay = calculateParameter( 7 * lt / lt )
   nameParameter(lt "lt")
   nameParameter(wt "wt")
   attachParameter( lay "lay" RCTM_RF2P0_woum )
   attachParameter( mimflag "mimflag" RCTM_RF2P0_woum )
if( !avSwitch( "spice_extraction") then
	   saveProperty(RCTM_RF2P0_woum "model" "mimcap_woum_sin_rf")
)

extractDevice("pmos_rf_mlvt_nw_5t" pgate_pthin_mlvnw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_mlvt_nw_5t")
   cellView( "pmos_rf_mlvt_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_mlvnw_5t enclosing pgate_rfmlv))
   WD = measureParameter(length (pgate_rfmlv butting d_tpdiff))
   WS = measureParameter(length (pgate_rfmlv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rfmlv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_mlvnw_5t)
   attachParameter(lr "lr" pgate_pthin_mlvnw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_mlvnw_5t "model" "pmos_rf_mlvt_nw_5t")
)

extractDevice("rnwod" nwod_r nxwell("PLUS" "MINUS") physical
   spiceModel("rnwod")
   cellView( "rnwod ivpcell" )
   flagMalformed)

   A  = measureParameter(area (nwod_r) 1e-12) 
   w  = measureParameter(length (nwod_r butting nxwell) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   attachParameter( w "w" nwod_r)
   attachParameter( l "l" nwod_r)
   attachParameter( w "wSim" nwod_r)
   attachParameter( l "lSim" nwod_r)
   attachParameter( w "sumW" nwod_r)
   attachParameter( l "sumL" nwod_r)
if( !avSwitch( "spice_extraction") then
	   saveProperty( nwod_r "model" "rnwod")
)

if( avSwitch( "AP_UT") then
extractDevice("rm10" mtAPres metal10("PLUS") metal10("MINUS") physical
   spiceModel("rmap_ut")
   cellView( "rm10 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mtAPres) 1e-12) 
   w  = measureParameter(length (mtAPres butting metal10) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mtAPres "model" "rmap_ut")
)
else
extractDevice("rm10" mtAPres metal10("PLUS") metal10("MINUS") physical
   spiceModel("rm10")
   cellView( "rm10 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mtAPres) 1e-12) 
   w  = measureParameter(length (mtAPres butting metal10) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mtAPres "model" "rm10")
)
)  ; end of AP_UT

;;

extractDevice("pmos_rf_25od33_5t" pgate_pthin_25od_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_33_5t")
   cellView( "pmos_rf_25od33_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_25od_5t enclosing pgate_rf_25od))
   WD = measureParameter(length (pgate_rf_25od butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_25od butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_25od) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_25od_5t)
   attachParameter(lr "lr" pgate_pthin_25od_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_25od_5t "model" "pmos_rf_33_5t")
)

extractDevice("nmos_rf_18_6t" ngate_nthin_18_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_18_6t")
   cellView( "nmos_rf_18_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_18_6t enclosing ngate_rf_18))
   WD = measureParameter(length (ngate_rf_18 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_18 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_18) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_18_6t)
   attachParameter(lr "lr" ngate_nthin_18_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_18_6t "model" "nmos_rf_18_6t")
)

extractDevice("pmos_rf_33" pgate_pthin_33 d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_33")
   cellView( "pmos_rf_33 ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_33 enclosing pgate_rf_33))
   WD = measureParameter(length (pgate_rf_33 butting d_tpdiff))
   WS = measureParameter(length (pgate_rf_33 butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf_33) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_33)
   attachParameter(lr "lr" pgate_pthin_33)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_33 "model" "pmos_rf_33")
)

extractDevice("nmos_rf_25_nodnw" ngate_nthin_25nodnw d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_25")
   cellView( "nmos_rf_25_nodnw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_25nodnw enclosing ngate_rf_25))
   WD = measureParameter(length (ngate_rf_25 butting d_tndiff))
   WS = measureParameter(length (ngate_rf_25 butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf_25) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_25nodnw)
   attachParameter(lr "lr" ngate_nthin_25nodnw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_25nodnw "model" "nmos_rf_25")
)

extractDevice("pmos_rf_nw" pgate_pthin_nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_nw")
   cellView( "pmos_rf_nw ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_nw enclosing pgate_rf))
   WD = measureParameter(length (pgate_rf butting d_tpdiff))
   WS = measureParameter(length (pgate_rf butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_nw)
   attachParameter(lr "lr" pgate_pthin_nw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_nw "model" "pmos_rf_nw")
)

extractDevice("rm4" mt4res metal4("PLUS") metal4("MINUS") physical
   spiceModel("rmxw")
   cellView( "rm4 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt4res) 1e-12) 
   w  = measureParameter(length (mt4res butting metal4) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt4res "model" "rmxw")
)

extractDevice("pmos_rf_nw_5t" pgate_pthin_nw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_nw_5t")
   cellView( "pmos_rf_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_nw_5t enclosing pgate_rf))
   WD = measureParameter(length (pgate_rf butting d_tpdiff))
   WS = measureParameter(length (pgate_rf butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_nw_5t)
   attachParameter(lr "lr" pgate_pthin_nw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_nw_5t "model" "pmos_rf_nw_5t")
)

extractDevice("nmos_rf" ngate_nthin d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf")
   cellView( "nmos_rf ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin enclosing ngate_rf))
   WD = measureParameter(length (ngate_rf butting d_tndiff))
   WS = measureParameter(length (ngate_rf butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rf) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin)
   attachParameter(lr "lr" ngate_nthin)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin "model" "nmos_rf")
)

;;

extractDevice("rm9" mt9res metal9("PLUS") metal9("MINUS") physical
   spiceModel("rmt")
   cellView( "rm9 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt9res) 1e-12) 
   w  = measureParameter(length (mt9res butting metal9) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt9res "model" "rmt")
)

extractDevice("nmos_rf_lvt_6t" ngate_nthin_lv_6t d_tndiff("D") poly_rf("G") s_tndiff("S") rwel("B") DNW("NG") RFDMY6T("PG")
   spiceModel("nmos_rf_lvt_6t")
   cellView( "nmos_rf_lvt_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_lv_6t enclosing ngate_rflv))
   WD = measureParameter(length (ngate_rflv butting d_tndiff))
   WS = measureParameter(length (ngate_rflv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_lv_6t)
   attachParameter(lr "lr" ngate_nthin_lv_6t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_lv_6t "model" "nmos_rf_lvt_6t")
)

extractDevice("mimcap_sin" RCTM_R1P0 ctm("PLUS") cbm("MINUS")
   spiceModel("mimcap_sin")
   cellView( "mimcap ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R1P0) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R1P0) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 1 * lt / lt ) 
   attachParameter( lt "lt" RCTM_R1P0 )
   attachParameter( wt "wt" RCTM_R1P0 )
   attachParameter( mimflag "mimflag" RCTM_R1P0 )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R1P0 "model" "mimcap_sin")
)
extractDevice("mimcap_sin" RCTM_R1P5 ctm("PLUS") cbm("MINUS")
   spiceModel("mimcap_sin")
   cellView( "mimcap ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R1P5) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R1P5) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 2 * lt / lt ) 
   attachParameter( lt "lt" RCTM_R1P5 )
   attachParameter( wt "wt" RCTM_R1P5 )
   attachParameter( mimflag "mimflag" RCTM_R1P5 )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R1P5 "model" "mimcap_sin")
)
extractDevice("mimcap_sin" RCTM_R2P0 ctm("PLUS") cbm("MINUS")
   spiceModel("mimcap_sin")
   cellView( "mimcap ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R2P0) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R2P0) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 3 * lt / lt ) 
   attachParameter( lt "lt" RCTM_R2P0 )
   attachParameter( wt "wt" RCTM_R2P0 )
   attachParameter( mimflag "mimflag" RCTM_R2P0 )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R2P0 "model" "mimcap_sin")
)
extractDevice("mimcap_sin" RCTM_R1P0UD ctm("PLUS") cbm("MINUS")
   spiceModel("mimcap_sin")
   cellView( "mimcap ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R1P0UD) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R1P0UD) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 1 * lt / lt ) 
   attachParameter( lt "lt" RCTM_R1P0UD )
   attachParameter( wt "wt" RCTM_R1P0UD )
   attachParameter( mimflag "mimflag" RCTM_R1P0UD )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R1P0UD "model" "mimcap_sin")
)
extractDevice("mimcap_sin" RCTM_R1P5UD ctm("PLUS") cbm("MINUS")
   spiceModel("mimcap_sin")
   cellView( "mimcap ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R1P5UD) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R1P5UD) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 2 * lt / lt ) 
   attachParameter( lt "lt" RCTM_R1P5UD )
   attachParameter( wt "wt" RCTM_R1P5UD )
   attachParameter( mimflag "mimflag" RCTM_R1P5UD )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R1P5UD "model" "mimcap_sin")
)
extractDevice("mimcap_sin" RCTM_R2P0UD ctm("PLUS") cbm("MINUS")
   spiceModel("mimcap_sin")
   cellView( "mimcap ivpcell " )
   flagMalformed
)
   area_CAP = measureParameter(area (RCTM_R2P0UD) 1e-12) 
   pj_CAP = measureParameter(perimeter (RCTM_R2P0UD) 1e-6) 
   P_2_CAP  = calculateParameter(pj_CAP * pj_CAP)
   AC4      = calculateParameter(area_CAP * 16)
   KKK1     = calculateParameter(P_2_CAP - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_CAP+SQ)/4)
   wt       = calculateParameter((pj_CAP-SQ)/4)
   mimflag = calculateParameter( 3 * lt / lt ) 
   attachParameter( lt "lt" RCTM_R2P0UD )
   attachParameter( wt "wt" RCTM_R2P0UD )
   attachParameter( mimflag "mimflag" RCTM_R2P0UD )
if( !avSwitch( "spice_extraction") then
	   saveProperty( RCTM_R2P0UD "model" "mimcap_sin")
)

extractDevice("nmos_rf_lvt" ngate_nthin_lv d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf_lvt")
   cellView( "nmos_rf_lvt ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (ngate_nthin_lv enclosing ngate_rflv))
   WD = measureParameter(length (ngate_rflv butting d_tndiff))
   WS = measureParameter(length (ngate_rflv butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (ngate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" ngate_nthin_lv)
   attachParameter(lr "lr" ngate_nthin_lv)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( ngate_nthin_lv "model" "nmos_rf_lvt")
)

extractDevice("rm2" mt2res metal2("PLUS") metal2("MINUS") physical
   spiceModel("rmxw")
   cellView( "rm2 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt2res) 1e-12) 
   w  = measureParameter(length (mt2res butting metal2) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt2res "model" "rmxw")
)

extractDevice("moscap_rf" var_nw3_rf poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf")
   cellView("moscap_rf ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw3_rf enclosing vargt_rf))
   gr    = measureParameter(figCount (var_nw3_rf enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw3_rf)
   attachParameter(lr "lr" var_nw3_rf)
   attachParameter(br "br" var_nw3_rf)
   attachParameter(gr "gr" var_nw3_rf)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw3_rf "model" "moscap_rf")
)

extractDevice("moscap_rf25" var_nw_rf25 poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf25")
   cellView("moscap_rf25 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (var_nw_rf25 enclosing vargt_rf25))
   gr    = measureParameter(figCount (var_nw_rf25 enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt_rf25 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt_rf25) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" var_nw_rf25)
   attachParameter(lr "lr" var_nw_rf25)
   attachParameter(br "br" var_nw_rf25)
   attachParameter(gr "gr" var_nw_rf25)
if( !avSwitch( "spice_extraction") then
	   saveProperty(var_nw_rf25 "model" "moscap_rf25")
)

extractDevice("lincap_rf_25" lin_nw_rf_25 poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("lincap_rf_25")
   cellView("lincap_rf_25 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (lin_nw_rf_25 enclosing lingt_rf_25))
   gr    = measureParameter(figCount (lin_nw_rf_25 enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (lingt_rf_25 butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (lingt_rf_25) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" lin_nw_rf_25)
   attachParameter(lr "lr" lin_nw_rf_25)
   attachParameter(br "br" lin_nw_rf_25)
   attachParameter(gr "gr" lin_nw_rf_25)
if( !avSwitch( "spice_extraction") then
	   saveProperty(lin_nw_rf_25 "model" "lincap_rf_25")
)

extractDevice("xjvar" jvar_rf tpdiff("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("xjvar")
   cellView( "xjvar ivpcell" )
   flagMalformed
)
   nr  = measureParameter(figCount (jvar_rf enclosing jvar3_rf))
   wr1 = measureParameter(length (jvar3_rf butting w_fac))
   w   = calculateParameter(( wr1/(2*nr))*1e-6)
   a1  = measureParameter(area (jvar3_rf) 1e-12)
   l   = calculateParameter( a1/(w*nr))
   nameParameter(nr "nr")
   attachParameter(w "w" jvar_rf)
   attachParameter(l "l" jvar_rf)
   attachParameter(w "wr" jvar_rf)
   attachParameter(l "lr" jvar_rf)
if( !avSwitch( "spice_extraction") then
	   saveProperty(jvar_rf "model" "xjvar")
)

extractDevice( "spiral_sym_mu_z" sym_ind indm9p("PLUS") indm9m("MINUS") psub("BULK")
   spiceModel("spiral_sym_mu_z")
   cellView("spiral_sym_mu_z ivpcell")
   flagMalformed
)  
   nnr1 = measureParameter(perimeter (IND_NR) ) 
   nnr = calculateParameter( ( nnr1 - 0.005*2 ) / 2 )
   nr =  calculateParameter( ( nnr / 0.01 ) * 0.25 ) 
   lay = calculateParameter(9 * nr/nr)
   rad1 = measureParameter(perimeter (IND_RAD))
   rad  = calculateParameter((rad1-0.5*2) * 0.5e-6)
   gdis1 = measureParameter(perimeter (IND_GDIS))
   gdis  = calculateParameter((gdis1-0.5*2) * 0.5e-6)
   nw   = measureParameter(figCount (sym_ind enclosing sym_w))
   w1   = measureParameter(length (sym_w inside sym_ind))
   w    = calculateParameter(w1/(nw*2)*1e-6)
   s1   = measureParameter( perimeter (IND_S) )
   spacing    = calculateParameter( ( s1 - 0.5*2 ) * 0.5e-6 )
   attachParameter(w "w" sym_ind)
   attachParameter(lay "lay" sym_ind)
   attachParameter(rad "rad" sym_ind)
   attachParameter(nr "nr" sym_ind)
   attachParameter(gdis "gdis" sym_ind)
   attachParameter(spacing "spacing" sym_ind)
if( !avSwitch( "spice_extraction") then
	   saveProperty(sym_ind "model" "spiral_sym_mu_z")
)

extractDevice("probe7" PROBEM7 metal7("TOP") PROBEM7_T("BULK")
   spiceModel("probe7")
   cellView( "probe ivpcell " )
   flagMalformed
)
   pj = measureParameter(perimeter (PROBEM7) 1e-6)
   a = measureParameter(area (PROBEM7) 1e-12)
   nameParameter( a "a" ) 
   nameParameter( pj "pj" ) 
if( !avSwitch( "spice_extraction") then
	   saveProperty(PROBEM7 "model" "probe7")
)

extractDevice("rm1" mt1res metal1("PLUS") metal1("MINUS") physical
   spiceModel("rm1w")
   cellView( "rm1 ivpcell" )
   flagMalformed)

   A  = measureParameter(area (mt1res) 1e-12) 
   w  = measureParameter(length (mt1res butting metal1) 0.5e-6) 
   l  = calculateParameter( A/w ) 
   nameParameter(w "w")
   nameParameter(l "l")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(w "wSim")
   nameParameter(l "lSim")
if( !avSwitch( "spice_extraction") then
	   saveProperty( mt1res "model" "rm1w")
)

extractDevice("lowcpad_d0" rfpad_0 metal10("APAD") poly("AVSS")
   spiceModel("lowcpad_d0")
   cellView("lowcpad ivpcell")
   flagMalformed
)
   area_PAD = measureParameter(area (ext_rfpad) 1e-12) 
   pj_PAD = measureParameter(perimeter (ext_rfpad) 1e-6) 
   P_2_PAD  = calculateParameter(pj_PAD * pj_PAD)
   AC4      = calculateParameter(area_PAD * 16)
   KKK1     = calculateParameter(P_2_PAD - AC4)
   KKK      = calculateParameter(KKK1 * step(0,KKK1))
   SQ       = calculateParameter(sqrt(KKK))
   lt       = calculateParameter((pj_PAD+SQ)/4)
   wt       = calculateParameter((pj_PAD-SQ)/4)
   lay = calculateParameter( 9 * lt / lt )
   attachParameter(wt "wt" rfpad_0)
   attachParameter(lt "lt" rfpad_0)
   attachParameter(lay "lay" rfpad_0)

if( !avSwitch( "spice_extraction") then
	   saveProperty(rfpad_0 "model" "lowcpad_d0")
)

extractDevice("nmoscap" vargt poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap")
   cellView( "nmoscap ivpcell" )
   flagMalformed)

   A    = measureParameter(area (vargt) 1e-12)
   lr   = measureParameter(length (vargt coincident nthin) 0.5e-6)
   wr   =  calculateParameter( A/lr )
   attachParameter(lr "lr" vargt)
   attachParameter(wr "wr" vargt)
if( !avSwitch( "spice_extraction") then
	   saveProperty(vargt "model" "nmoscap")
)

extractDevice("pmos_rf_lvt_nw_5t" pgate_pthin_lvnw_5t d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDMY5T("PG")
   spiceModel("pmos_rf_lvt_nw_5t")
   cellView( "pmos_rf_lvt_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_pthin_lvnw_5t enclosing pgate_rflv))
   WD = measureParameter(length (pgate_rflv butting d_tpdiff))
   WS = measureParameter(length (pgate_rflv butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rflv) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_pthin_lvnw_5t)
   attachParameter(lr "lr" pgate_pthin_lvnw_5t)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_pthin_lvnw_5t "model" "pmos_rf_lvt_nw_5t")
)

;#############################################
;# ERC CHECK                                 #
;#############################################
; I. The soft-connect checks already include in the "Soft-Connect_Checks" ivIf 
;    statement. Please turn on "Soft-Connect_Checks" switch to check the soft 
;    connect issues on Nwell or Substrate. 

if( avSwitch( "GATE_TO_PG_CHECK") then
; gate1_not_IO2 connect to GROUND 
 npvss150 = geomGetNet( gate1_not_IO2  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "TAVSS" "TAVSSPST" "AHVSS" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AHVSSR" "AHVSSG" "AHVSSB" "AVSSUB" "VSSUB" "AHVSSUB" "HVSSUB" "DVSS" "DHVSS" "VSSM")
 errorLayer( npvss150 "<npvss150> gate1_not_IO2 connected to GROUND !") 
)


if( avSwitch( "WELL_TO_PG_CHECK") then
; ntap connect to GROUND 
 npvss49 = geomGetNet( ntap_not_var  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "TAVSS" "TAVSSPST" "AHVSS" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AHVSSR" "AHVSSG" "AHVSSB" "AVSSUB" "VSSUB" "AHVSSUB" "HVSSUB" "DVSS" "DHVSS" "VSSM")
 errorLayer( npvss49 "<npvss49> ntap_not_var connected to GROUND !") 
)


; MOS  S/D connect to POWER&GROUND --mnpg*/
 N1tndiff = geomGetNet( tndiff  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "TACVDD" "AHVDD" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AHVDDR" "AHVDDG" "AHVDDB" "AVDWELL" "VDWELL" "AHVDDWELL" "HVDDWELL" "DVDD" "DHVDD" "VDDM")
 T1tndiff = geomButtOrOver(erc_nmos_gates N1tndiff)
 N2tndiff = geomGetNet( tndiff  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "TAVSS" "TAVSSPST" "AHVSS" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AHVSSR" "AHVSSG" "AHVSSB" "AVSSUB" "VSSUB" "AHVSSUB" "HVSSUB" "DVSS" "DHVSS" "VSSM")
 T2tndiff = geomButtOrOver(erc_nmos_gates N2tndiff)
if( avSwitch( "DS_TO_PG_CHECK") then
 mnpg = geomAnd(T1tndiff T2tndiff)
 errorLayer( mnpg "<mnpg> MOS connected to both power and ground !")
)


if( avSwitch( "FLOATING_WELL_CHECK") then
; Floating psub : psub without any pplug no text on pplug
 pplug_no_text = geomAndNot( pplug geomGetNet( pplug "*" ) )
 psub_no_nplug = geomAndNot( psub geomOverlap( psub pplug ) )
 errorLayer( geomOr( pplug_no_text psub_no_nplug ) "<floating.psub> Floating psub is not allowed." )
)

if( avSwitch( "FLOATING_WELL_CHECK") then
; Floating nxwell_float : nxwell_float without any nplug no text on nplug
 nplug_no_text = geomAndNot( nplug geomGetNet( nplug "*" ) )
 nxwell_float_no_nplug = geomAndNot( nxwell_float geomOverlap( nxwell_float nplug ) )
 errorLayer( geomOr( nplug_no_text nxwell_float_no_nplug ) "<floating.nxwell_float> Floating nxwell_float is not allowed." )
)

if( avSwitch( "GATE_TO_PG_CHECK") then
; gate1_not_IO2 connect to POWER 
 ppvdd150 = geomGetNet( gate1_not_IO2  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "TACVDD" "AHVDD" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AHVDDR" "AHVDDG" "AHVDDB" "AVDWELL" "VDWELL" "AHVDDWELL" "HVDDWELL" "DVDD" "DHVDD" "VDDM")
 errorLayer( ppvdd150 "<ppvdd150> gate1_not_IO2 connected to POWER !") 
)


if( avSwitch( "WELL_TO_PG_CHECK") then
; ptap connect to POWER 
 ppvdd49 = geomGetNet( ptap  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "TACVDD" "AHVDD" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AHVDDR" "AHVDDG" "AHVDDB" "AVDWELL" "VDWELL" "AHVDDWELL" "HVDDWELL" "DVDD" "DHVDD" "VDDM")
 errorLayer( ppvdd49 "<ppvdd49> ptap connected to POWER !") 
)


; MOS  S/D connect to POWER&GROUND --mppg*/
 N1tpdiff = geomGetNet( tpdiff  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "TACVDD" "AHVDD" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AHVDDR" "AHVDDG" "AHVDDB" "AVDWELL" "VDWELL" "AHVDDWELL" "HVDDWELL" "DVDD" "DHVDD" "VDDM")
 T1tpdiff = geomButtOrOver(erc_pmos_gates N1tpdiff)
 N2tpdiff = geomGetNet( tpdiff  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "TAVSS" "TAVSSPST" "AHVSS" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AHVSSR" "AHVSSG" "AHVSSB" "AVSSUB" "VSSUB" "AHVSSUB" "HVSSUB" "DVSS" "DHVSS" "VSSM")
 T2tpdiff = geomButtOrOver(erc_pmos_gates N2tpdiff)
if( avSwitch( "DS_TO_PG_CHECK") then
 mppg = geomAnd(T1tpdiff T2tpdiff)
 errorLayer( mppg "<mppg> MOS connected to both power and ground !")
)

;ERC PATHCHK !LABELED....not support

; Nodes with a path to ground but not power 
;ERC PATHCHK GROUND && !POWER....not support

; Nodes without a path to power and ground 
;ERC PATHCHK !POWER && !GROUND...not support

; Nodes with a path to power but not ground 
;ERC PATHCHK POWER && !GROUND....not support
saveInterconnect( (metal1 "M1"))
saveInterconnect( (metal10 "AP"))
saveInterconnect( (metal2 "M2"))
saveInterconnect( (metal3 "M3"))
saveInterconnect( (metal4 "M4"))
saveInterconnect( (metal5 "M5"))
saveInterconnect( (metal6 "M6"))
saveInterconnect( (metal7 "M7"))
saveInterconnect( (metal8 "M8"))
saveInterconnect( (metal9 "M9"))
saveInterconnect( (poly "PO"))
) ; end of drcExtractRules 


;#########################################################################
;		END
;#########################################################################
