_outputList = nil
 _envSaveOptions = nil
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "vout"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/op"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/om"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 1
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "vin"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/ip"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/im"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 2
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "eye_out"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11)
tmp1 = 'eyeDiagram
tmp2 = 'out
tmp3 = 2.0000000000000001e-09
tmp4 = 2.0000000000000000e-08
tmp5 = 7.9999999999999995e-11
tmp6 = '?intensityPlot
tmp7 = 't
tmp8 = '?triggerPeriod
tmp9 = 3.9999999999999998e-11
tmp10 = '?autoCenter
tmp11 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 3
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "eye_maxHeight"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21)
tmp1 = 'eyeMeasurement
tmp2 = 'eye_out
tmp3 = 2.0000000000000001e-09
tmp4 = 2.0000000000000000e-08
tmp5 = 7.9999999999999995e-11
tmp6 = 0.0000000000000000e+00
tmp8 = 't
tmp9 = 4.0000000000000000e+01
tmp10 = 0.0000000000000000e+00
tmp11 = 't
tmp12 = 60
tmp13 = 50
tmp14 = 't
tmp15 = 40
tmp16 = 50
tmp17 = 't
tmp18 = 60
tmp19 = 100
tmp20 = 100
tmp21 = "maxHeight"
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = 0.0000000000000000e+00
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 4
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "eye_maxWidth"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21)
tmp1 = 'eyeMeasurement
tmp2 = 'eye_out
tmp3 = 2.0000000000000001e-09
tmp4 = 2.0000000000000000e-08
tmp5 = 7.9999999999999995e-11
tmp6 = 0.0000000000000000e+00
tmp8 = 't
tmp9 = 4.0000000000000000e+01
tmp10 = 0.0000000000000000e+00
tmp11 = 't
tmp12 = 60
tmp13 = 50
tmp14 = 't
tmp15 = 40
tmp16 = 50
tmp17 = 't
tmp18 = 60
tmp19 = 100
tmp20 = 100
tmp21 = "maxWidth"
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = 0.0000000000000000e+00
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 5
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "gain_dB"
tmp1->expression = (let
(tmp1 tmp2)
tmp1 = 'dB20
tmp2 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/op"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/om"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp3 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/ip"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/im"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
list(tmp1 tmp2 tmp3)
)
list(tmp1 tmp2)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 6
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "gain"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/op"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/om"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp3 = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/ip"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VF
tmp2 = "/im"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 7
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "DC_Gain"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'value
tmp2 = 'gain_dB
tmp3 = 1.0000000000000000e+07
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = -3.1693847049314702e+01
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 8
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "GBW"
tmp1->expression = (let
(tmp1 tmp2)
tmp1 = 'gainBwProd
tmp2 = 'gain
list(tmp1 tmp2)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = 8.2353478821583378e+08
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 9
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "BW"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4)
tmp1 = 'bandwidth
tmp2 = 'gain
tmp3 = 3
tmp4 = "low"
list(tmp1 tmp2 tmp3 tmp4)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = 3.1575025958075665e+10
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 10
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "om"
tmp1->expression = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/om"
list(tmp1 tmp2)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 11
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->waveSpec = nil
tmp1->name = "V2"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/I4/inp2"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/I4/inm2"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 12
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->name = "AV"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'quotient
tmp2 = 'out
tmp3 = 'in
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 13
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->name = "V1"
tmp1->expression = (let
(tmp1 tmp2 tmp3)
tmp1 = 'difference
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/I4/inp1"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/I4/inm1"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3)
)
tmp1->signal = nil
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = 'point
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->sweepSet = nil
tmp1->depList = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 14
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
tmp1->sqlStatement = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
_envSaveOptions = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21 tmp22 tmp23 tmp24 tmp25)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'extremesInfo
list(tmp1 tmp2)
)
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'assertsInfo
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'designParamValInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp4 = (let
(tmp1 tmp2)
tmp1 = 'subcktsInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp5 = (let
(tmp1 tmp2)
tmp1 = 'primitivesInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp6 = (let
(tmp1 tmp2)
tmp1 = 'outputParamInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp7 = (let
(tmp1 tmp2)
tmp1 = 'elementInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp8 = (let
(tmp1 tmp2)
tmp1 = 'modelParamInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp9 = (let
(tmp1 tmp2)
tmp1 = 'marchingSupportOption
list(tmp1 tmp2)
)
tmp10 = (let
(tmp1 tmp2)
tmp1 = 'fastViewOption
list(tmp1 tmp2)
)
tmp11 = (let
(tmp1 tmp2)
tmp1 = 'simOutputFormat
tmp2 = "psfxl"
list(tmp1 tmp2)
)
tmp12 = (let
(tmp1 tmp2)
tmp1 = 'outputFrame
tmp2 = ""
list(tmp1 tmp2)
)
tmp13 = (let
(tmp1 tmp2)
tmp1 = 'captab_threshold
tmp2 = ""
list(tmp1 tmp2)
)
tmp14 = (let
(tmp1 tmp2)
tmp1 = 'captab_sort
tmp2 = "name"
list(tmp1 tmp2)
)
tmp15 = (let
(tmp1 tmp2)
tmp1 = 'captab_detail
tmp2 = "node"
list(tmp1 tmp2)
)
tmp16 = (let
(tmp1 tmp2)
tmp1 = 'infoOptions
tmp2 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9)
tmp1 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "modelParameter"
tmp2 = "models"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
tmp7 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp2 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "element"
tmp2 = "inst"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
tmp7 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp3 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "outputParameter"
tmp2 = "output"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
tmp7 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp4 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "designParamVals"
tmp2 = "parameters"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
tmp7 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp5 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "primitives"
tmp2 = "primitives"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
tmp7 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp6 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "subckts"
tmp2 = "subckts"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
tmp7 = 't
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp7 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "asserts"
tmp2 = "assert"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp8 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "extremeinfo"
tmp2 = "all"
tmp3 = "logfile"
tmp4 = ""
tmp5 = "yes"
tmp6 = ""
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
tmp9 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
tmp1 = "<Click_To_Add>"
tmp2 = "none"
tmp3 = "rawfile"
tmp4 = ""
tmp5 = ""
tmp6 = ""
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7)
)
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9)
)
list(tmp1 tmp2)
)
tmp17 = (let
(tmp1 tmp2)
tmp1 = 'infoFrame
tmp2 = ""
list(tmp1 tmp2)
)
tmp18 = (let
(tmp1 tmp2)
tmp1 = 'saveahdlvars
tmp2 = ""
list(tmp1 tmp2)
)
tmp19 = (let
(tmp1 tmp2)
tmp1 = 'useprobes
tmp2 = ""
list(tmp1 tmp2)
)
tmp20 = (let
(tmp1 tmp2)
tmp1 = 'subcktprobelvl
tmp2 = ""
list(tmp1 tmp2)
)
tmp21 = (let
(tmp1 tmp2)
tmp1 = 'currents
tmp2 = ""
list(tmp1 tmp2)
)
tmp22 = (let
(tmp1 tmp2)
tmp1 = 'nestlvl
tmp2 = ""
list(tmp1 tmp2)
)
tmp23 = (let
(tmp1 tmp2)
tmp1 = 'pwr
tmp2 = ""
list(tmp1 tmp2)
)
tmp24 = (let
(tmp1 tmp2)
tmp1 = 'save
tmp2 = "allpub"
list(tmp1 tmp2)
)
tmp25 = (let
(tmp1 tmp2)
tmp1 = 'saveFrame
tmp2 = ""
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21 tmp22 tmp23 tmp24 tmp25)
)
savedComponent = list( _outputList _envSaveOptions ) 
_outputList = 'unbound
 _envSaveOptions = 'unbound
